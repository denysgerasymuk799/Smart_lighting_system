ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer_Claps.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	Timer_Claps_initVar
  20              		.bss
  21              		.type	Timer_Claps_initVar, %object
  22              		.size	Timer_Claps_initVar, 1
  23              	Timer_Claps_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.Timer_Claps_Init,"ax",%progbits
  26              		.align	2
  27              		.global	Timer_Claps_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	Timer_Claps_Init, %function
  31              	Timer_Claps_Init:
  32              	.LFB2:
  33              		.file 1 "Generated_Source\\PSoC4\\Timer_Claps.c"
   1:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Timer_Claps.c **** * File Name: Timer_Claps.c
   3:Generated_Source\PSoC4/Timer_Claps.c **** * Version 2.10
   4:Generated_Source\PSoC4/Timer_Claps.c **** *
   5:Generated_Source\PSoC4/Timer_Claps.c **** * Description:
   6:Generated_Source\PSoC4/Timer_Claps.c **** *  This file provides the source code to the API for the Timer_Claps
   7:Generated_Source\PSoC4/Timer_Claps.c **** *  component
   8:Generated_Source\PSoC4/Timer_Claps.c **** *
   9:Generated_Source\PSoC4/Timer_Claps.c **** * Note:
  10:Generated_Source\PSoC4/Timer_Claps.c **** *  None
  11:Generated_Source\PSoC4/Timer_Claps.c **** *
  12:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
  13:Generated_Source\PSoC4/Timer_Claps.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/Timer_Claps.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/Timer_Claps.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/Timer_Claps.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/Timer_Claps.c **** 
  19:Generated_Source\PSoC4/Timer_Claps.c **** #include "Timer_Claps.h"
  20:Generated_Source\PSoC4/Timer_Claps.c **** 
  21:Generated_Source\PSoC4/Timer_Claps.c **** uint8 Timer_Claps_initVar = 0u;
  22:Generated_Source\PSoC4/Timer_Claps.c **** 
  23:Generated_Source\PSoC4/Timer_Claps.c **** 
  24:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 2


  25:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_Init
  26:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
  27:Generated_Source\PSoC4/Timer_Claps.c **** *
  28:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
  29:Generated_Source\PSoC4/Timer_Claps.c **** *  Initialize/Restore default Timer_Claps configuration.
  30:Generated_Source\PSoC4/Timer_Claps.c **** *
  31:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
  32:Generated_Source\PSoC4/Timer_Claps.c **** *  None
  33:Generated_Source\PSoC4/Timer_Claps.c **** *
  34:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
  35:Generated_Source\PSoC4/Timer_Claps.c **** *  None
  36:Generated_Source\PSoC4/Timer_Claps.c **** *
  37:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_Init(void)
  39:Generated_Source\PSoC4/Timer_Claps.c **** {
  34              		.loc 1 39 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  40:Generated_Source\PSoC4/Timer_Claps.c **** 
  41:Generated_Source\PSoC4/Timer_Claps.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps__QUAD == Timer_Claps_CONFIG)
  43:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_CONTROL_REG = Timer_Claps_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/Timer_Claps.c ****         
  45:Generated_Source\PSoC4/Timer_Claps.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_TRIG_CONTROL1_REG  = Timer_Claps_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/Timer_Claps.c **** 
  48:Generated_Source\PSoC4/Timer_Claps.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_SetInterruptMode(Timer_Claps_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/Timer_Claps.c ****         
  51:Generated_Source\PSoC4/Timer_Claps.c ****          /* Set other values */
  52:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_SetCounterMode(Timer_Claps_COUNT_DOWN);
  53:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_WritePeriod(Timer_Claps_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_WriteCounter(Timer_Claps_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/Timer_Claps.c ****     #endif  /* (Timer_Claps__QUAD == Timer_Claps_CONFIG) */
  56:Generated_Source\PSoC4/Timer_Claps.c **** 
  57:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps__TIMER == Timer_Claps_CONFIG)
  58:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_CONTROL_REG = Timer_Claps_CTRL_TIMER_BASE_CONFIG;
  44              		.loc 1 58 0
  45 0004 0A4B     		ldr	r3, .L2
  46 0006 8022     		movs	r2, #128
  47 0008 9204     		lsls	r2, r2, #18
  48 000a 1A60     		str	r2, [r3]
  59:Generated_Source\PSoC4/Timer_Claps.c ****         
  60:Generated_Source\PSoC4/Timer_Claps.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_TRIG_CONTROL1_REG  = Timer_Claps_TIMER_SIGNALS_MODES;
  49              		.loc 1 61 0
  50 000c 094B     		ldr	r3, .L2+4
  51 000e 8E22     		movs	r2, #142
  52 0010 5200     		lsls	r2, r2, #1
  53 0012 1A60     		str	r2, [r3]
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 3


  62:Generated_Source\PSoC4/Timer_Claps.c ****     
  63:Generated_Source\PSoC4/Timer_Claps.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_SetInterruptMode(Timer_Claps_TC_INTERRUPT_MASK);
  54              		.loc 1 64 0
  55 0014 0220     		movs	r0, #2
  56 0016 FFF7FEFF 		bl	Timer_Claps_SetInterruptMode
  65:Generated_Source\PSoC4/Timer_Claps.c ****         
  66:Generated_Source\PSoC4/Timer_Claps.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_WritePeriod(Timer_Claps_TC_PERIOD_VALUE );
  57              		.loc 1 67 0
  58 001a 074B     		ldr	r3, .L2+8
  59 001c 1800     		movs	r0, r3
  60 001e FFF7FEFF 		bl	Timer_Claps_WritePeriod
  68:Generated_Source\PSoC4/Timer_Claps.c **** 
  69:Generated_Source\PSoC4/Timer_Claps.c ****         #if (Timer_Claps__COMPARE == Timer_Claps_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_WriteCompare(Timer_Claps_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/Timer_Claps.c **** 
  72:Generated_Source\PSoC4/Timer_Claps.c ****             #if (1u == Timer_Claps_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/Timer_Claps.c ****                 Timer_Claps_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/Timer_Claps.c ****                 Timer_Claps_WriteCompareBuf(Timer_Claps_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/Timer_Claps.c ****             #endif  /* (1u == Timer_Claps_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/Timer_Claps.c ****         #endif  /* (Timer_Claps__COMPARE == Timer_Claps_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/Timer_Claps.c **** 
  78:Generated_Source\PSoC4/Timer_Claps.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/Timer_Claps.c ****         #if (Timer_Claps_CY_TCPWM_V2 && Timer_Claps_TIMER_UPDOWN_CNT_USED && !Timer_Claps_CY_TCPWM_
  80:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_WriteCounter(1u);
  81:Generated_Source\PSoC4/Timer_Claps.c ****         #elif(Timer_Claps__COUNT_DOWN == Timer_Claps_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_WriteCounter(Timer_Claps_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/Timer_Claps.c ****         #else
  84:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_WriteCounter(0u);
  61              		.loc 1 84 0
  62 0022 0020     		movs	r0, #0
  63 0024 FFF7FEFF 		bl	Timer_Claps_WriteCounter
  85:Generated_Source\PSoC4/Timer_Claps.c ****         #endif /* (Timer_Claps_CY_TCPWM_V2 && Timer_Claps_TIMER_UPDOWN_CNT_USED && !Timer_Claps_CY_
  86:Generated_Source\PSoC4/Timer_Claps.c ****     #endif  /* (Timer_Claps__TIMER == Timer_Claps_CONFIG) */
  87:Generated_Source\PSoC4/Timer_Claps.c **** 
  88:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps__PWM_SEL == Timer_Claps_CONFIG)
  89:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_CONTROL_REG = Timer_Claps_CTRL_PWM_BASE_CONFIG;
  90:Generated_Source\PSoC4/Timer_Claps.c **** 
  91:Generated_Source\PSoC4/Timer_Claps.c ****         #if (Timer_Claps__PWM_PR == Timer_Claps_PWM_MODE)
  92:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_CONTROL_REG |= Timer_Claps_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_WriteCounter(Timer_Claps_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/Timer_Claps.c ****         #else
  95:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_CONTROL_REG |= Timer_Claps_CTRL_PWM_ALIGN | Timer_Claps_CTRL_PWM_KILL_EVENT
  96:Generated_Source\PSoC4/Timer_Claps.c ****             
  97:Generated_Source\PSoC4/Timer_Claps.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/Timer_Claps.c ****             #if (Timer_Claps_CY_TCPWM_V2 && Timer_Claps_PWM_UPDOWN_CNT_USED && !Timer_Claps_CY_TCPW
  99:Generated_Source\PSoC4/Timer_Claps.c ****                 Timer_Claps_WriteCounter(1u);
 100:Generated_Source\PSoC4/Timer_Claps.c ****             #elif (Timer_Claps__RIGHT == Timer_Claps_PWM_ALIGN)
 101:Generated_Source\PSoC4/Timer_Claps.c ****                 Timer_Claps_WriteCounter(Timer_Claps_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/Timer_Claps.c ****             #else 
 103:Generated_Source\PSoC4/Timer_Claps.c ****                 Timer_Claps_WriteCounter(0u);
 104:Generated_Source\PSoC4/Timer_Claps.c ****             #endif  /* (Timer_Claps_CY_TCPWM_V2 && Timer_Claps_PWM_UPDOWN_CNT_USED && !Timer_Claps_
 105:Generated_Source\PSoC4/Timer_Claps.c ****         #endif  /* (Timer_Claps__PWM_PR == Timer_Claps_PWM_MODE) */
 106:Generated_Source\PSoC4/Timer_Claps.c **** 
 107:Generated_Source\PSoC4/Timer_Claps.c ****         #if (Timer_Claps__PWM_DT == Timer_Claps_PWM_MODE)
 108:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_CONTROL_REG |= Timer_Claps_CTRL_PWM_DEAD_TIME_CYCLE;
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 4


 109:Generated_Source\PSoC4/Timer_Claps.c ****         #endif  /* (Timer_Claps__PWM_DT == Timer_Claps_PWM_MODE) */
 110:Generated_Source\PSoC4/Timer_Claps.c **** 
 111:Generated_Source\PSoC4/Timer_Claps.c ****         #if (Timer_Claps__PWM == Timer_Claps_PWM_MODE)
 112:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_CONTROL_REG |= Timer_Claps_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/Timer_Claps.c ****         #endif  /* (Timer_Claps__PWM == Timer_Claps_PWM_MODE) */
 114:Generated_Source\PSoC4/Timer_Claps.c **** 
 115:Generated_Source\PSoC4/Timer_Claps.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_TRIG_CONTROL1_REG  = Timer_Claps_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/Timer_Claps.c ****     
 118:Generated_Source\PSoC4/Timer_Claps.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_SetInterruptMode(Timer_Claps_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/Timer_Claps.c **** 
 121:Generated_Source\PSoC4/Timer_Claps.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/Timer_Claps.c ****         #if (Timer_Claps__PWM_PR == Timer_Claps_PWM_MODE)
 123:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/Timer_Claps.c ****                     (Timer_Claps_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/Timer_Claps.c ****                     Timer_Claps_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/Timer_Claps.c ****                     Timer_Claps_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/Timer_Claps.c ****         #else
 128:Generated_Source\PSoC4/Timer_Claps.c ****             #if (Timer_Claps__LEFT == Timer_Claps_PWM_ALIGN)
 129:Generated_Source\PSoC4/Timer_Claps.c ****                 Timer_Claps_TRIG_CONTROL2_REG = Timer_Claps_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/Timer_Claps.c ****             #endif  /* ( Timer_Claps_PWM_LEFT == Timer_Claps_PWM_ALIGN) */
 131:Generated_Source\PSoC4/Timer_Claps.c **** 
 132:Generated_Source\PSoC4/Timer_Claps.c ****             #if (Timer_Claps__RIGHT == Timer_Claps_PWM_ALIGN)
 133:Generated_Source\PSoC4/Timer_Claps.c ****                 Timer_Claps_TRIG_CONTROL2_REG = Timer_Claps_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/Timer_Claps.c ****             #endif  /* ( Timer_Claps_PWM_RIGHT == Timer_Claps_PWM_ALIGN) */
 135:Generated_Source\PSoC4/Timer_Claps.c **** 
 136:Generated_Source\PSoC4/Timer_Claps.c ****             #if (Timer_Claps__CENTER == Timer_Claps_PWM_ALIGN)
 137:Generated_Source\PSoC4/Timer_Claps.c ****                 Timer_Claps_TRIG_CONTROL2_REG = Timer_Claps_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/Timer_Claps.c ****             #endif  /* ( Timer_Claps_PWM_CENTER == Timer_Claps_PWM_ALIGN) */
 139:Generated_Source\PSoC4/Timer_Claps.c **** 
 140:Generated_Source\PSoC4/Timer_Claps.c ****             #if (Timer_Claps__ASYMMETRIC == Timer_Claps_PWM_ALIGN)
 141:Generated_Source\PSoC4/Timer_Claps.c ****                 Timer_Claps_TRIG_CONTROL2_REG = Timer_Claps_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/Timer_Claps.c ****             #endif  /* (Timer_Claps__ASYMMETRIC == Timer_Claps_PWM_ALIGN) */
 143:Generated_Source\PSoC4/Timer_Claps.c ****         #endif  /* (Timer_Claps__PWM_PR == Timer_Claps_PWM_MODE) */
 144:Generated_Source\PSoC4/Timer_Claps.c **** 
 145:Generated_Source\PSoC4/Timer_Claps.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_WritePeriod(Timer_Claps_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_WriteCompare(Timer_Claps_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/Timer_Claps.c **** 
 149:Generated_Source\PSoC4/Timer_Claps.c ****         #if (1u == Timer_Claps_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_WriteCompareBuf(Timer_Claps_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/Timer_Claps.c ****         #endif  /* (1u == Timer_Claps_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/Timer_Claps.c **** 
 154:Generated_Source\PSoC4/Timer_Claps.c ****         #if (1u == Timer_Claps_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_WritePeriodBuf(Timer_Claps_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/Timer_Claps.c ****         #endif  /* (1u == Timer_Claps_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/Timer_Claps.c ****     #endif  /* (Timer_Claps__PWM_SEL == Timer_Claps_CONFIG) */
 159:Generated_Source\PSoC4/Timer_Claps.c ****     
 160:Generated_Source\PSoC4/Timer_Claps.c **** }
  64              		.loc 1 160 0
  65 0028 C046     		nop
  66 002a BD46     		mov	sp, r7
  67              		@ sp needed
  68 002c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 5


  69              	.L3:
  70 002e C046     		.align	2
  71              	.L2:
  72 0030 00012040 		.word	1075839232
  73 0034 24012040 		.word	1075839268
  74 0038 FFFF0000 		.word	65535
  75              		.cfi_endproc
  76              	.LFE2:
  77              		.size	Timer_Claps_Init, .-Timer_Claps_Init
  78              		.section	.text.Timer_Claps_Enable,"ax",%progbits
  79              		.align	2
  80              		.global	Timer_Claps_Enable
  81              		.code	16
  82              		.thumb_func
  83              		.type	Timer_Claps_Enable, %function
  84              	Timer_Claps_Enable:
  85              	.LFB3:
 161:Generated_Source\PSoC4/Timer_Claps.c **** 
 162:Generated_Source\PSoC4/Timer_Claps.c **** 
 163:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_Enable
 165:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 166:Generated_Source\PSoC4/Timer_Claps.c **** *
 167:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 168:Generated_Source\PSoC4/Timer_Claps.c **** *  Enables the Timer_Claps.
 169:Generated_Source\PSoC4/Timer_Claps.c **** *
 170:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 171:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 172:Generated_Source\PSoC4/Timer_Claps.c **** *
 173:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 174:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 175:Generated_Source\PSoC4/Timer_Claps.c **** *
 176:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_Enable(void)
 178:Generated_Source\PSoC4/Timer_Claps.c **** {
  86              		.loc 1 178 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 90B5     		push	{r4, r7, lr}
  91              		.cfi_def_cfa_offset 12
  92              		.cfi_offset 4, -12
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 83B0     		sub	sp, sp, #12
  96              		.cfi_def_cfa_offset 24
  97 0004 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
 179:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/Timer_Claps.c **** 
 181:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
  99              		.loc 1 181 0
 100 0006 FC1D     		adds	r4, r7, #7
 101 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 102 000c 0300     		movs	r3, r0
 103 000e 2370     		strb	r3, [r4]
 182:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_BLOCK_CONTROL_REG |= Timer_Claps_MASK;
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 6


 104              		.loc 1 182 0
 105 0010 074B     		ldr	r3, .L5
 106 0012 074A     		ldr	r2, .L5
 107 0014 1268     		ldr	r2, [r2]
 108 0016 0121     		movs	r1, #1
 109 0018 0A43     		orrs	r2, r1
 110 001a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 111              		.loc 1 183 0
 112 001c FB1D     		adds	r3, r7, #7
 113 001e 1B78     		ldrb	r3, [r3]
 114 0020 1800     		movs	r0, r3
 115 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:Generated_Source\PSoC4/Timer_Claps.c **** 
 185:Generated_Source\PSoC4/Timer_Claps.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps__PWM_SEL == Timer_Claps_CONFIG)
 187:Generated_Source\PSoC4/Timer_Claps.c ****         #if (0u == Timer_Claps_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_TriggerCommand(Timer_Claps_MASK, Timer_Claps_CMD_START);
 189:Generated_Source\PSoC4/Timer_Claps.c ****         #endif /* (0u == Timer_Claps_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/Timer_Claps.c ****     #endif /* (Timer_Claps__PWM_SEL == Timer_Claps_CONFIG) */
 191:Generated_Source\PSoC4/Timer_Claps.c **** 
 192:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps__TIMER == Timer_Claps_CONFIG)
 193:Generated_Source\PSoC4/Timer_Claps.c ****         #if (0u == Timer_Claps_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_TriggerCommand(Timer_Claps_MASK, Timer_Claps_CMD_START);
 195:Generated_Source\PSoC4/Timer_Claps.c ****         #endif /* (0u == Timer_Claps_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/Timer_Claps.c ****     #endif /* (Timer_Claps__TIMER == Timer_Claps_CONFIG) */
 197:Generated_Source\PSoC4/Timer_Claps.c ****     
 198:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps__QUAD == Timer_Claps_CONFIG)
 199:Generated_Source\PSoC4/Timer_Claps.c ****         #if (0u != Timer_Claps_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/Timer_Claps.c ****             Timer_Claps_TriggerCommand(Timer_Claps_MASK, Timer_Claps_CMD_RELOAD);
 201:Generated_Source\PSoC4/Timer_Claps.c ****         #endif /* (0u != Timer_Claps_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/Timer_Claps.c ****     #endif  /* (Timer_Claps__QUAD == Timer_Claps_CONFIG) */
 203:Generated_Source\PSoC4/Timer_Claps.c **** }
 116              		.loc 1 203 0
 117 0026 C046     		nop
 118 0028 BD46     		mov	sp, r7
 119 002a 03B0     		add	sp, sp, #12
 120              		@ sp needed
 121 002c 90BD     		pop	{r4, r7, pc}
 122              	.L6:
 123 002e C046     		.align	2
 124              	.L5:
 125 0030 00002040 		.word	1075838976
 126              		.cfi_endproc
 127              	.LFE3:
 128              		.size	Timer_Claps_Enable, .-Timer_Claps_Enable
 129              		.section	.text.Timer_Claps_Start,"ax",%progbits
 130              		.align	2
 131              		.global	Timer_Claps_Start
 132              		.code	16
 133              		.thumb_func
 134              		.type	Timer_Claps_Start, %function
 135              	Timer_Claps_Start:
 136              	.LFB4:
 204:Generated_Source\PSoC4/Timer_Claps.c **** 
 205:Generated_Source\PSoC4/Timer_Claps.c **** 
 206:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 7


 207:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_Start
 208:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 209:Generated_Source\PSoC4/Timer_Claps.c **** *
 210:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 211:Generated_Source\PSoC4/Timer_Claps.c **** *  Initializes the Timer_Claps with default customizer
 212:Generated_Source\PSoC4/Timer_Claps.c **** *  values when called the first time and enables the Timer_Claps.
 213:Generated_Source\PSoC4/Timer_Claps.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/Timer_Claps.c **** *  just enabled.
 215:Generated_Source\PSoC4/Timer_Claps.c **** *
 216:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 217:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 218:Generated_Source\PSoC4/Timer_Claps.c **** *
 219:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 220:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 221:Generated_Source\PSoC4/Timer_Claps.c **** *
 222:Generated_Source\PSoC4/Timer_Claps.c **** * Global variables:
 223:Generated_Source\PSoC4/Timer_Claps.c **** *  Timer_Claps_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/Timer_Claps.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/Timer_Claps.c **** *  to 1 the first time Timer_Claps_Start() is called. This allows
 226:Generated_Source\PSoC4/Timer_Claps.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/Timer_Claps.c **** *  calls to the Timer_Claps_Start() routine.
 228:Generated_Source\PSoC4/Timer_Claps.c **** *
 229:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_Start(void)
 231:Generated_Source\PSoC4/Timer_Claps.c **** {
 137              		.loc 1 231 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141 0000 80B5     		push	{r7, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 7, -8
 144              		.cfi_offset 14, -4
 145 0002 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
 232:Generated_Source\PSoC4/Timer_Claps.c ****     if (0u == Timer_Claps_initVar)
 147              		.loc 1 232 0
 148 0004 064B     		ldr	r3, .L9
 149 0006 1B78     		ldrb	r3, [r3]
 150 0008 002B     		cmp	r3, #0
 151 000a 04D1     		bne	.L8
 233:Generated_Source\PSoC4/Timer_Claps.c ****     {
 234:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_Init();
 152              		.loc 1 234 0
 153 000c FFF7FEFF 		bl	Timer_Claps_Init
 235:Generated_Source\PSoC4/Timer_Claps.c ****         Timer_Claps_initVar = 1u;
 154              		.loc 1 235 0
 155 0010 034B     		ldr	r3, .L9
 156 0012 0122     		movs	r2, #1
 157 0014 1A70     		strb	r2, [r3]
 158              	.L8:
 236:Generated_Source\PSoC4/Timer_Claps.c ****     }
 237:Generated_Source\PSoC4/Timer_Claps.c **** 
 238:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_Enable();
 159              		.loc 1 238 0
 160 0016 FFF7FEFF 		bl	Timer_Claps_Enable
 239:Generated_Source\PSoC4/Timer_Claps.c **** }
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 8


 161              		.loc 1 239 0
 162 001a C046     		nop
 163 001c BD46     		mov	sp, r7
 164              		@ sp needed
 165 001e 80BD     		pop	{r7, pc}
 166              	.L10:
 167              		.align	2
 168              	.L9:
 169 0020 00000000 		.word	Timer_Claps_initVar
 170              		.cfi_endproc
 171              	.LFE4:
 172              		.size	Timer_Claps_Start, .-Timer_Claps_Start
 173              		.section	.text.Timer_Claps_Stop,"ax",%progbits
 174              		.align	2
 175              		.global	Timer_Claps_Stop
 176              		.code	16
 177              		.thumb_func
 178              		.type	Timer_Claps_Stop, %function
 179              	Timer_Claps_Stop:
 180              	.LFB5:
 240:Generated_Source\PSoC4/Timer_Claps.c **** 
 241:Generated_Source\PSoC4/Timer_Claps.c **** 
 242:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_Stop
 244:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 245:Generated_Source\PSoC4/Timer_Claps.c **** *
 246:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 247:Generated_Source\PSoC4/Timer_Claps.c **** *  Disables the Timer_Claps.
 248:Generated_Source\PSoC4/Timer_Claps.c **** *
 249:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 250:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 251:Generated_Source\PSoC4/Timer_Claps.c **** *
 252:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 253:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 254:Generated_Source\PSoC4/Timer_Claps.c **** *
 255:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_Stop(void)
 257:Generated_Source\PSoC4/Timer_Claps.c **** {
 181              		.loc 1 257 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 8
 184              		@ frame_needed = 1, uses_anonymous_args = 0
 185 0000 90B5     		push	{r4, r7, lr}
 186              		.cfi_def_cfa_offset 12
 187              		.cfi_offset 4, -12
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
 190 0002 83B0     		sub	sp, sp, #12
 191              		.cfi_def_cfa_offset 24
 192 0004 00AF     		add	r7, sp, #0
 193              		.cfi_def_cfa_register 7
 258:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/Timer_Claps.c **** 
 260:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 194              		.loc 1 260 0
 195 0006 FC1D     		adds	r4, r7, #7
 196 0008 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 9


 197 000c 0300     		movs	r3, r0
 198 000e 2370     		strb	r3, [r4]
 261:Generated_Source\PSoC4/Timer_Claps.c **** 
 262:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_BLOCK_CONTROL_REG &= (uint32)~Timer_Claps_MASK;
 199              		.loc 1 262 0
 200 0010 074B     		ldr	r3, .L12
 201 0012 074A     		ldr	r2, .L12
 202 0014 1268     		ldr	r2, [r2]
 203 0016 0121     		movs	r1, #1
 204 0018 8A43     		bics	r2, r1
 205 001a 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/Timer_Claps.c **** 
 264:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 206              		.loc 1 264 0
 207 001c FB1D     		adds	r3, r7, #7
 208 001e 1B78     		ldrb	r3, [r3]
 209 0020 1800     		movs	r0, r3
 210 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:Generated_Source\PSoC4/Timer_Claps.c **** }
 211              		.loc 1 265 0
 212 0026 C046     		nop
 213 0028 BD46     		mov	sp, r7
 214 002a 03B0     		add	sp, sp, #12
 215              		@ sp needed
 216 002c 90BD     		pop	{r4, r7, pc}
 217              	.L13:
 218 002e C046     		.align	2
 219              	.L12:
 220 0030 00002040 		.word	1075838976
 221              		.cfi_endproc
 222              	.LFE5:
 223              		.size	Timer_Claps_Stop, .-Timer_Claps_Stop
 224              		.section	.text.Timer_Claps_SetMode,"ax",%progbits
 225              		.align	2
 226              		.global	Timer_Claps_SetMode
 227              		.code	16
 228              		.thumb_func
 229              		.type	Timer_Claps_SetMode, %function
 230              	Timer_Claps_SetMode:
 231              	.LFB6:
 266:Generated_Source\PSoC4/Timer_Claps.c **** 
 267:Generated_Source\PSoC4/Timer_Claps.c **** 
 268:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetMode
 270:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 271:Generated_Source\PSoC4/Timer_Claps.c **** *
 272:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 273:Generated_Source\PSoC4/Timer_Claps.c **** *  Sets the operation mode of the Timer_Claps. This function is used when
 274:Generated_Source\PSoC4/Timer_Claps.c **** *  configured as a generic Timer_Claps and the actual mode of operation is
 275:Generated_Source\PSoC4/Timer_Claps.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/Timer_Claps.c **** *
 277:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 278:Generated_Source\PSoC4/Timer_Claps.c **** *  mode: Mode for the Timer_Claps to operate in
 279:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
 280:Generated_Source\PSoC4/Timer_Claps.c **** *   - Timer_Claps_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/Timer_Claps.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_MODE_TIMER_CAPTURE - Timer / Counter with
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 10


 283:Generated_Source\PSoC4/Timer_Claps.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_MODE_PWM - PWM
 286:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/Timer_Claps.c **** *
 289:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 290:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 291:Generated_Source\PSoC4/Timer_Claps.c **** *
 292:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/Timer_Claps.c **** {
 232              		.loc 1 294 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 16
 235              		@ frame_needed = 1, uses_anonymous_args = 0
 236 0000 90B5     		push	{r4, r7, lr}
 237              		.cfi_def_cfa_offset 12
 238              		.cfi_offset 4, -12
 239              		.cfi_offset 7, -8
 240              		.cfi_offset 14, -4
 241 0002 85B0     		sub	sp, sp, #20
 242              		.cfi_def_cfa_offset 32
 243 0004 00AF     		add	r7, sp, #0
 244              		.cfi_def_cfa_register 7
 245 0006 7860     		str	r0, [r7, #4]
 295:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/Timer_Claps.c **** 
 297:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 246              		.loc 1 297 0
 247 0008 0F23     		movs	r3, #15
 248 000a FC18     		adds	r4, r7, r3
 249 000c FFF7FEFF 		bl	CyEnterCriticalSection
 250 0010 0300     		movs	r3, r0
 251 0012 2370     		strb	r3, [r4]
 298:Generated_Source\PSoC4/Timer_Claps.c **** 
 299:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG &= (uint32)~Timer_Claps_MODE_MASK;
 252              		.loc 1 299 0
 253 0014 0A4B     		ldr	r3, .L15
 254 0016 0A4A     		ldr	r2, .L15
 255 0018 1268     		ldr	r2, [r2]
 256 001a 0A49     		ldr	r1, .L15+4
 257 001c 0A40     		ands	r2, r1
 258 001e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG |= mode;
 259              		.loc 1 300 0
 260 0020 074B     		ldr	r3, .L15
 261 0022 074A     		ldr	r2, .L15
 262 0024 1168     		ldr	r1, [r2]
 263 0026 7A68     		ldr	r2, [r7, #4]
 264 0028 0A43     		orrs	r2, r1
 265 002a 1A60     		str	r2, [r3]
 301:Generated_Source\PSoC4/Timer_Claps.c **** 
 302:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 266              		.loc 1 302 0
 267 002c 0F23     		movs	r3, #15
 268 002e FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 11


 269 0030 1B78     		ldrb	r3, [r3]
 270 0032 1800     		movs	r0, r3
 271 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC4/Timer_Claps.c **** }
 272              		.loc 1 303 0
 273 0038 C046     		nop
 274 003a BD46     		mov	sp, r7
 275 003c 05B0     		add	sp, sp, #20
 276              		@ sp needed
 277 003e 90BD     		pop	{r4, r7, pc}
 278              	.L16:
 279              		.align	2
 280              	.L15:
 281 0040 00012040 		.word	1075839232
 282 0044 FFFFFFF8 		.word	-117440513
 283              		.cfi_endproc
 284              	.LFE6:
 285              		.size	Timer_Claps_SetMode, .-Timer_Claps_SetMode
 286              		.section	.text.Timer_Claps_SetQDMode,"ax",%progbits
 287              		.align	2
 288              		.global	Timer_Claps_SetQDMode
 289              		.code	16
 290              		.thumb_func
 291              		.type	Timer_Claps_SetQDMode, %function
 292              	Timer_Claps_SetQDMode:
 293              	.LFB7:
 304:Generated_Source\PSoC4/Timer_Claps.c **** 
 305:Generated_Source\PSoC4/Timer_Claps.c **** 
 306:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetQDMode
 308:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 309:Generated_Source\PSoC4/Timer_Claps.c **** *
 310:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 311:Generated_Source\PSoC4/Timer_Claps.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/Timer_Claps.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/Timer_Claps.c **** *
 314:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 315:Generated_Source\PSoC4/Timer_Claps.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
 317:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/Timer_Claps.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/Timer_Claps.c **** *
 322:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 323:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 324:Generated_Source\PSoC4/Timer_Claps.c **** *
 325:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/Timer_Claps.c **** {
 294              		.loc 1 327 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 16
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298 0000 90B5     		push	{r4, r7, lr}
 299              		.cfi_def_cfa_offset 12
 300              		.cfi_offset 4, -12
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 12


 301              		.cfi_offset 7, -8
 302              		.cfi_offset 14, -4
 303 0002 85B0     		sub	sp, sp, #20
 304              		.cfi_def_cfa_offset 32
 305 0004 00AF     		add	r7, sp, #0
 306              		.cfi_def_cfa_register 7
 307 0006 7860     		str	r0, [r7, #4]
 328:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/Timer_Claps.c **** 
 330:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 308              		.loc 1 330 0
 309 0008 0F23     		movs	r3, #15
 310 000a FC18     		adds	r4, r7, r3
 311 000c FFF7FEFF 		bl	CyEnterCriticalSection
 312 0010 0300     		movs	r3, r0
 313 0012 2370     		strb	r3, [r4]
 331:Generated_Source\PSoC4/Timer_Claps.c **** 
 332:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG &= (uint32)~Timer_Claps_QUAD_MODE_MASK;
 314              		.loc 1 332 0
 315 0014 0A4B     		ldr	r3, .L18
 316 0016 0A4A     		ldr	r2, .L18
 317 0018 1268     		ldr	r2, [r2]
 318 001a 0A49     		ldr	r1, .L18+4
 319 001c 0A40     		ands	r2, r1
 320 001e 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG |= qdMode;
 321              		.loc 1 333 0
 322 0020 074B     		ldr	r3, .L18
 323 0022 074A     		ldr	r2, .L18
 324 0024 1168     		ldr	r1, [r2]
 325 0026 7A68     		ldr	r2, [r7, #4]
 326 0028 0A43     		orrs	r2, r1
 327 002a 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/Timer_Claps.c **** 
 335:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 328              		.loc 1 335 0
 329 002c 0F23     		movs	r3, #15
 330 002e FB18     		adds	r3, r7, r3
 331 0030 1B78     		ldrb	r3, [r3]
 332 0032 1800     		movs	r0, r3
 333 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:Generated_Source\PSoC4/Timer_Claps.c **** }
 334              		.loc 1 336 0
 335 0038 C046     		nop
 336 003a BD46     		mov	sp, r7
 337 003c 05B0     		add	sp, sp, #20
 338              		@ sp needed
 339 003e 90BD     		pop	{r4, r7, pc}
 340              	.L19:
 341              		.align	2
 342              	.L18:
 343 0040 00012040 		.word	1075839232
 344 0044 FFFF8FFF 		.word	-7340033
 345              		.cfi_endproc
 346              	.LFE7:
 347              		.size	Timer_Claps_SetQDMode, .-Timer_Claps_SetQDMode
 348              		.section	.text.Timer_Claps_SetPrescaler,"ax",%progbits
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 13


 349              		.align	2
 350              		.global	Timer_Claps_SetPrescaler
 351              		.code	16
 352              		.thumb_func
 353              		.type	Timer_Claps_SetPrescaler, %function
 354              	Timer_Claps_SetPrescaler:
 355              	.LFB8:
 337:Generated_Source\PSoC4/Timer_Claps.c **** 
 338:Generated_Source\PSoC4/Timer_Claps.c **** 
 339:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetPrescaler
 341:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 342:Generated_Source\PSoC4/Timer_Claps.c **** *
 343:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 344:Generated_Source\PSoC4/Timer_Claps.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/Timer_Claps.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/Timer_Claps.c **** *
 347:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 348:Generated_Source\PSoC4/Timer_Claps.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
 350:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/Timer_Claps.c **** *
 359:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 360:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 361:Generated_Source\PSoC4/Timer_Claps.c **** *
 362:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/Timer_Claps.c **** {
 356              		.loc 1 364 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 16
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360 0000 90B5     		push	{r4, r7, lr}
 361              		.cfi_def_cfa_offset 12
 362              		.cfi_offset 4, -12
 363              		.cfi_offset 7, -8
 364              		.cfi_offset 14, -4
 365 0002 85B0     		sub	sp, sp, #20
 366              		.cfi_def_cfa_offset 32
 367 0004 00AF     		add	r7, sp, #0
 368              		.cfi_def_cfa_register 7
 369 0006 7860     		str	r0, [r7, #4]
 365:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/Timer_Claps.c **** 
 367:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 370              		.loc 1 367 0
 371 0008 0F23     		movs	r3, #15
 372 000a FC18     		adds	r4, r7, r3
 373 000c FFF7FEFF 		bl	CyEnterCriticalSection
 374 0010 0300     		movs	r3, r0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 14


 375 0012 2370     		strb	r3, [r4]
 368:Generated_Source\PSoC4/Timer_Claps.c **** 
 369:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG &= (uint32)~Timer_Claps_PRESCALER_MASK;
 376              		.loc 1 369 0
 377 0014 0A4B     		ldr	r3, .L21
 378 0016 0A4A     		ldr	r2, .L21
 379 0018 1268     		ldr	r2, [r2]
 380 001a 0A49     		ldr	r1, .L21+4
 381 001c 0A40     		ands	r2, r1
 382 001e 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG |= prescaler;
 383              		.loc 1 370 0
 384 0020 074B     		ldr	r3, .L21
 385 0022 074A     		ldr	r2, .L21
 386 0024 1168     		ldr	r1, [r2]
 387 0026 7A68     		ldr	r2, [r7, #4]
 388 0028 0A43     		orrs	r2, r1
 389 002a 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/Timer_Claps.c **** 
 372:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 390              		.loc 1 372 0
 391 002c 0F23     		movs	r3, #15
 392 002e FB18     		adds	r3, r7, r3
 393 0030 1B78     		ldrb	r3, [r3]
 394 0032 1800     		movs	r0, r3
 395 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:Generated_Source\PSoC4/Timer_Claps.c **** }
 396              		.loc 1 373 0
 397 0038 C046     		nop
 398 003a BD46     		mov	sp, r7
 399 003c 05B0     		add	sp, sp, #20
 400              		@ sp needed
 401 003e 90BD     		pop	{r4, r7, pc}
 402              	.L22:
 403              		.align	2
 404              	.L21:
 405 0040 00012040 		.word	1075839232
 406 0044 FF00FFFF 		.word	-65281
 407              		.cfi_endproc
 408              	.LFE8:
 409              		.size	Timer_Claps_SetPrescaler, .-Timer_Claps_SetPrescaler
 410              		.section	.text.Timer_Claps_SetOneShot,"ax",%progbits
 411              		.align	2
 412              		.global	Timer_Claps_SetOneShot
 413              		.code	16
 414              		.thumb_func
 415              		.type	Timer_Claps_SetOneShot, %function
 416              	Timer_Claps_SetOneShot:
 417              	.LFB9:
 374:Generated_Source\PSoC4/Timer_Claps.c **** 
 375:Generated_Source\PSoC4/Timer_Claps.c **** 
 376:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetOneShot
 378:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 379:Generated_Source\PSoC4/Timer_Claps.c **** *
 380:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 381:Generated_Source\PSoC4/Timer_Claps.c **** *  Writes the register that controls whether the Timer_Claps runs
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 15


 382:Generated_Source\PSoC4/Timer_Claps.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/Timer_Claps.c **** *  Timer_Claps operates in the continuous mode.
 384:Generated_Source\PSoC4/Timer_Claps.c **** *
 385:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 386:Generated_Source\PSoC4/Timer_Claps.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
 388:Generated_Source\PSoC4/Timer_Claps.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/Timer_Claps.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/Timer_Claps.c **** *
 391:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 392:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 393:Generated_Source\PSoC4/Timer_Claps.c **** *
 394:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/Timer_Claps.c **** {
 418              		.loc 1 396 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 16
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422 0000 90B5     		push	{r4, r7, lr}
 423              		.cfi_def_cfa_offset 12
 424              		.cfi_offset 4, -12
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 85B0     		sub	sp, sp, #20
 428              		.cfi_def_cfa_offset 32
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 431 0006 7860     		str	r0, [r7, #4]
 397:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/Timer_Claps.c **** 
 399:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 432              		.loc 1 399 0
 433 0008 0F23     		movs	r3, #15
 434 000a FC18     		adds	r4, r7, r3
 435 000c FFF7FEFF 		bl	CyEnterCriticalSection
 436 0010 0300     		movs	r3, r0
 437 0012 2370     		strb	r3, [r4]
 400:Generated_Source\PSoC4/Timer_Claps.c **** 
 401:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG &= (uint32)~Timer_Claps_ONESHOT_MASK;
 438              		.loc 1 401 0
 439 0014 0C4B     		ldr	r3, .L24
 440 0016 0C4A     		ldr	r2, .L24
 441 0018 1268     		ldr	r2, [r2]
 442 001a 0C49     		ldr	r1, .L24+4
 443 001c 0A40     		ands	r2, r1
 444 001e 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_Claps_1BIT_MASK) <<
 445              		.loc 1 402 0
 446 0020 094B     		ldr	r3, .L24
 447 0022 094A     		ldr	r2, .L24
 448 0024 1168     		ldr	r1, [r2]
 449 0026 7A68     		ldr	r2, [r7, #4]
 450 0028 9004     		lsls	r0, r2, #18
 451 002a 8022     		movs	r2, #128
 452 002c D202     		lsls	r2, r2, #11
 453 002e 0240     		ands	r2, r0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 16


 454 0030 0A43     		orrs	r2, r1
 455 0032 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC4/Timer_Claps.c ****                                                                Timer_Claps_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/Timer_Claps.c **** 
 405:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 456              		.loc 1 405 0
 457 0034 0F23     		movs	r3, #15
 458 0036 FB18     		adds	r3, r7, r3
 459 0038 1B78     		ldrb	r3, [r3]
 460 003a 1800     		movs	r0, r3
 461 003c FFF7FEFF 		bl	CyExitCriticalSection
 406:Generated_Source\PSoC4/Timer_Claps.c **** }
 462              		.loc 1 406 0
 463 0040 C046     		nop
 464 0042 BD46     		mov	sp, r7
 465 0044 05B0     		add	sp, sp, #20
 466              		@ sp needed
 467 0046 90BD     		pop	{r4, r7, pc}
 468              	.L25:
 469              		.align	2
 470              	.L24:
 471 0048 00012040 		.word	1075839232
 472 004c FFFFFBFF 		.word	-262145
 473              		.cfi_endproc
 474              	.LFE9:
 475              		.size	Timer_Claps_SetOneShot, .-Timer_Claps_SetOneShot
 476              		.section	.text.Timer_Claps_SetPWMMode,"ax",%progbits
 477              		.align	2
 478              		.global	Timer_Claps_SetPWMMode
 479              		.code	16
 480              		.thumb_func
 481              		.type	Timer_Claps_SetPWMMode, %function
 482              	Timer_Claps_SetPWMMode:
 483              	.LFB10:
 407:Generated_Source\PSoC4/Timer_Claps.c **** 
 408:Generated_Source\PSoC4/Timer_Claps.c **** 
 409:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetPWMMode
 411:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 412:Generated_Source\PSoC4/Timer_Claps.c **** *
 413:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 414:Generated_Source\PSoC4/Timer_Claps.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/Timer_Claps.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/Timer_Claps.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/Timer_Claps.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/Timer_Claps.c **** *  the mode.
 419:Generated_Source\PSoC4/Timer_Claps.c **** *
 420:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 421:Generated_Source\PSoC4/Timer_Claps.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/Timer_Claps.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
 424:Generated_Source\PSoC4/Timer_Claps.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/Timer_Claps.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/Timer_Claps.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/Timer_Claps.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/Timer_Claps.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/Timer_Claps.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 17


 430:Generated_Source\PSoC4/Timer_Claps.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/Timer_Claps.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/Timer_Claps.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/Timer_Claps.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/Timer_Claps.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/Timer_Claps.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/Timer_Claps.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/Timer_Claps.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/Timer_Claps.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/Timer_Claps.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/Timer_Claps.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/Timer_Claps.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/Timer_Claps.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/Timer_Claps.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/Timer_Claps.c **** *
 445:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 446:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 447:Generated_Source\PSoC4/Timer_Claps.c **** *
 448:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/Timer_Claps.c **** {
 484              		.loc 1 450 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 8
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488 0000 80B5     		push	{r7, lr}
 489              		.cfi_def_cfa_offset 8
 490              		.cfi_offset 7, -8
 491              		.cfi_offset 14, -4
 492 0002 82B0     		sub	sp, sp, #8
 493              		.cfi_def_cfa_offset 16
 494 0004 00AF     		add	r7, sp, #0
 495              		.cfi_def_cfa_register 7
 496 0006 7860     		str	r0, [r7, #4]
 451:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_TRIG_CONTROL2_REG = (modeMask & Timer_Claps_6BIT_MASK);
 497              		.loc 1 451 0
 498 0008 044B     		ldr	r3, .L27
 499 000a 7A68     		ldr	r2, [r7, #4]
 500 000c 3F21     		movs	r1, #63
 501 000e 0A40     		ands	r2, r1
 502 0010 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/Timer_Claps.c **** }
 503              		.loc 1 452 0
 504 0012 C046     		nop
 505 0014 BD46     		mov	sp, r7
 506 0016 02B0     		add	sp, sp, #8
 507              		@ sp needed
 508 0018 80BD     		pop	{r7, pc}
 509              	.L28:
 510 001a C046     		.align	2
 511              	.L27:
 512 001c 28012040 		.word	1075839272
 513              		.cfi_endproc
 514              	.LFE10:
 515              		.size	Timer_Claps_SetPWMMode, .-Timer_Claps_SetPWMMode
 516              		.section	.text.Timer_Claps_SetPWMSyncKill,"ax",%progbits
 517              		.align	2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 18


 518              		.global	Timer_Claps_SetPWMSyncKill
 519              		.code	16
 520              		.thumb_func
 521              		.type	Timer_Claps_SetPWMSyncKill, %function
 522              	Timer_Claps_SetPWMSyncKill:
 523              	.LFB11:
 453:Generated_Source\PSoC4/Timer_Claps.c **** 
 454:Generated_Source\PSoC4/Timer_Claps.c **** 
 455:Generated_Source\PSoC4/Timer_Claps.c **** 
 456:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetPWMSyncKill
 458:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 459:Generated_Source\PSoC4/Timer_Claps.c **** *
 460:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 461:Generated_Source\PSoC4/Timer_Claps.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/Timer_Claps.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/Timer_Claps.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/Timer_Claps.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/Timer_Claps.c **** *
 466:Generated_Source\PSoC4/Timer_Claps.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/Timer_Claps.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/Timer_Claps.c **** *
 469:Generated_Source\PSoC4/Timer_Claps.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/Timer_Claps.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/Timer_Claps.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/Timer_Claps.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/Timer_Claps.c **** 
 474:Generated_Source\PSoC4/Timer_Claps.c **** *
 475:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 476:Generated_Source\PSoC4/Timer_Claps.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
 478:Generated_Source\PSoC4/Timer_Claps.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/Timer_Claps.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/Timer_Claps.c **** *
 481:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 482:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 483:Generated_Source\PSoC4/Timer_Claps.c **** *
 484:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/Timer_Claps.c **** {
 524              		.loc 1 486 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 16
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528 0000 90B5     		push	{r4, r7, lr}
 529              		.cfi_def_cfa_offset 12
 530              		.cfi_offset 4, -12
 531              		.cfi_offset 7, -8
 532              		.cfi_offset 14, -4
 533 0002 85B0     		sub	sp, sp, #20
 534              		.cfi_def_cfa_offset 32
 535 0004 00AF     		add	r7, sp, #0
 536              		.cfi_def_cfa_register 7
 537 0006 7860     		str	r0, [r7, #4]
 487:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/Timer_Claps.c **** 
 489:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 19


 538              		.loc 1 489 0
 539 0008 0F23     		movs	r3, #15
 540 000a FC18     		adds	r4, r7, r3
 541 000c FFF7FEFF 		bl	CyEnterCriticalSection
 542 0010 0300     		movs	r3, r0
 543 0012 2370     		strb	r3, [r4]
 490:Generated_Source\PSoC4/Timer_Claps.c **** 
 491:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG &= (uint32)~Timer_Claps_PWM_SYNC_KILL_MASK;
 544              		.loc 1 491 0
 545 0014 0C4B     		ldr	r3, .L30
 546 0016 0C4A     		ldr	r2, .L30
 547 0018 1268     		ldr	r2, [r2]
 548 001a 0421     		movs	r1, #4
 549 001c 8A43     		bics	r2, r1
 550 001e 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_Claps_1BIT_MASK)  <<
 551              		.loc 1 492 0
 552 0020 094B     		ldr	r3, .L30
 553 0022 094A     		ldr	r2, .L30
 554 0024 1168     		ldr	r1, [r2]
 555 0026 7A68     		ldr	r2, [r7, #4]
 556 0028 9200     		lsls	r2, r2, #2
 557 002a 0420     		movs	r0, #4
 558 002c 0240     		ands	r2, r0
 559 002e 0A43     		orrs	r2, r1
 560 0030 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/Timer_Claps.c ****                                                Timer_Claps_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/Timer_Claps.c **** 
 495:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 561              		.loc 1 495 0
 562 0032 0F23     		movs	r3, #15
 563 0034 FB18     		adds	r3, r7, r3
 564 0036 1B78     		ldrb	r3, [r3]
 565 0038 1800     		movs	r0, r3
 566 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:Generated_Source\PSoC4/Timer_Claps.c **** }
 567              		.loc 1 496 0
 568 003e C046     		nop
 569 0040 BD46     		mov	sp, r7
 570 0042 05B0     		add	sp, sp, #20
 571              		@ sp needed
 572 0044 90BD     		pop	{r4, r7, pc}
 573              	.L31:
 574 0046 C046     		.align	2
 575              	.L30:
 576 0048 00012040 		.word	1075839232
 577              		.cfi_endproc
 578              	.LFE11:
 579              		.size	Timer_Claps_SetPWMSyncKill, .-Timer_Claps_SetPWMSyncKill
 580              		.section	.text.Timer_Claps_SetPWMStopOnKill,"ax",%progbits
 581              		.align	2
 582              		.global	Timer_Claps_SetPWMStopOnKill
 583              		.code	16
 584              		.thumb_func
 585              		.type	Timer_Claps_SetPWMStopOnKill, %function
 586              	Timer_Claps_SetPWMStopOnKill:
 587              	.LFB12:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 20


 497:Generated_Source\PSoC4/Timer_Claps.c **** 
 498:Generated_Source\PSoC4/Timer_Claps.c **** 
 499:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetPWMStopOnKill
 501:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 502:Generated_Source\PSoC4/Timer_Claps.c **** *
 503:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 504:Generated_Source\PSoC4/Timer_Claps.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/Timer_Claps.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/Timer_Claps.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/Timer_Claps.c **** *
 508:Generated_Source\PSoC4/Timer_Claps.c **** *
 509:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 510:Generated_Source\PSoC4/Timer_Claps.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
 512:Generated_Source\PSoC4/Timer_Claps.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/Timer_Claps.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/Timer_Claps.c **** *
 515:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 516:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 517:Generated_Source\PSoC4/Timer_Claps.c **** *
 518:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/Timer_Claps.c **** {
 588              		.loc 1 520 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 16
 591              		@ frame_needed = 1, uses_anonymous_args = 0
 592 0000 90B5     		push	{r4, r7, lr}
 593              		.cfi_def_cfa_offset 12
 594              		.cfi_offset 4, -12
 595              		.cfi_offset 7, -8
 596              		.cfi_offset 14, -4
 597 0002 85B0     		sub	sp, sp, #20
 598              		.cfi_def_cfa_offset 32
 599 0004 00AF     		add	r7, sp, #0
 600              		.cfi_def_cfa_register 7
 601 0006 7860     		str	r0, [r7, #4]
 521:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/Timer_Claps.c **** 
 523:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 602              		.loc 1 523 0
 603 0008 0F23     		movs	r3, #15
 604 000a FC18     		adds	r4, r7, r3
 605 000c FFF7FEFF 		bl	CyEnterCriticalSection
 606 0010 0300     		movs	r3, r0
 607 0012 2370     		strb	r3, [r4]
 524:Generated_Source\PSoC4/Timer_Claps.c **** 
 525:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG &= (uint32)~Timer_Claps_PWM_STOP_KILL_MASK;
 608              		.loc 1 525 0
 609 0014 0C4B     		ldr	r3, .L33
 610 0016 0C4A     		ldr	r2, .L33
 611 0018 1268     		ldr	r2, [r2]
 612 001a 0821     		movs	r1, #8
 613 001c 8A43     		bics	r2, r1
 614 001e 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_Claps_1BIT_MASK)  <<
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 21


 615              		.loc 1 526 0
 616 0020 094B     		ldr	r3, .L33
 617 0022 094A     		ldr	r2, .L33
 618 0024 1168     		ldr	r1, [r2]
 619 0026 7A68     		ldr	r2, [r7, #4]
 620 0028 D200     		lsls	r2, r2, #3
 621 002a 0820     		movs	r0, #8
 622 002c 0240     		ands	r2, r0
 623 002e 0A43     		orrs	r2, r1
 624 0030 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/Timer_Claps.c ****                                                          Timer_Claps_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/Timer_Claps.c **** 
 529:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 625              		.loc 1 529 0
 626 0032 0F23     		movs	r3, #15
 627 0034 FB18     		adds	r3, r7, r3
 628 0036 1B78     		ldrb	r3, [r3]
 629 0038 1800     		movs	r0, r3
 630 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/Timer_Claps.c **** }
 631              		.loc 1 530 0
 632 003e C046     		nop
 633 0040 BD46     		mov	sp, r7
 634 0042 05B0     		add	sp, sp, #20
 635              		@ sp needed
 636 0044 90BD     		pop	{r4, r7, pc}
 637              	.L34:
 638 0046 C046     		.align	2
 639              	.L33:
 640 0048 00012040 		.word	1075839232
 641              		.cfi_endproc
 642              	.LFE12:
 643              		.size	Timer_Claps_SetPWMStopOnKill, .-Timer_Claps_SetPWMStopOnKill
 644              		.section	.text.Timer_Claps_SetPWMDeadTime,"ax",%progbits
 645              		.align	2
 646              		.global	Timer_Claps_SetPWMDeadTime
 647              		.code	16
 648              		.thumb_func
 649              		.type	Timer_Claps_SetPWMDeadTime, %function
 650              	Timer_Claps_SetPWMDeadTime:
 651              	.LFB13:
 531:Generated_Source\PSoC4/Timer_Claps.c **** 
 532:Generated_Source\PSoC4/Timer_Claps.c **** 
 533:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetPWMDeadTime
 535:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 536:Generated_Source\PSoC4/Timer_Claps.c **** *
 537:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 538:Generated_Source\PSoC4/Timer_Claps.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/Timer_Claps.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/Timer_Claps.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/Timer_Claps.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/Timer_Claps.c **** 
 543:Generated_Source\PSoC4/Timer_Claps.c **** *
 544:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 545:Generated_Source\PSoC4/Timer_Claps.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/Timer_Claps.c **** *   Values: 0 to 255
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 22


 547:Generated_Source\PSoC4/Timer_Claps.c **** *
 548:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 549:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 550:Generated_Source\PSoC4/Timer_Claps.c **** *
 551:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/Timer_Claps.c **** {
 652              		.loc 1 553 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 16
 655              		@ frame_needed = 1, uses_anonymous_args = 0
 656 0000 90B5     		push	{r4, r7, lr}
 657              		.cfi_def_cfa_offset 12
 658              		.cfi_offset 4, -12
 659              		.cfi_offset 7, -8
 660              		.cfi_offset 14, -4
 661 0002 85B0     		sub	sp, sp, #20
 662              		.cfi_def_cfa_offset 32
 663 0004 00AF     		add	r7, sp, #0
 664              		.cfi_def_cfa_register 7
 665 0006 7860     		str	r0, [r7, #4]
 554:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/Timer_Claps.c **** 
 556:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 666              		.loc 1 556 0
 667 0008 0F23     		movs	r3, #15
 668 000a FC18     		adds	r4, r7, r3
 669 000c FFF7FEFF 		bl	CyEnterCriticalSection
 670 0010 0300     		movs	r3, r0
 671 0012 2370     		strb	r3, [r4]
 557:Generated_Source\PSoC4/Timer_Claps.c **** 
 558:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG &= (uint32)~Timer_Claps_PRESCALER_MASK;
 672              		.loc 1 558 0
 673 0014 0C4B     		ldr	r3, .L36
 674 0016 0C4A     		ldr	r2, .L36
 675 0018 1268     		ldr	r2, [r2]
 676 001a 0C49     		ldr	r1, .L36+4
 677 001c 0A40     		ands	r2, r1
 678 001e 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG |= ((uint32)((deadTime & Timer_Claps_8BIT_MASK) <<
 679              		.loc 1 559 0
 680 0020 094B     		ldr	r3, .L36
 681 0022 094A     		ldr	r2, .L36
 682 0024 1168     		ldr	r1, [r2]
 683 0026 7A68     		ldr	r2, [r7, #4]
 684 0028 1202     		lsls	r2, r2, #8
 685 002a 1204     		lsls	r2, r2, #16
 686 002c 120C     		lsrs	r2, r2, #16
 687 002e 0A43     		orrs	r2, r1
 688 0030 1A60     		str	r2, [r3]
 560:Generated_Source\PSoC4/Timer_Claps.c ****                                                           Timer_Claps_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/Timer_Claps.c **** 
 562:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 689              		.loc 1 562 0
 690 0032 0F23     		movs	r3, #15
 691 0034 FB18     		adds	r3, r7, r3
 692 0036 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 23


 693 0038 1800     		movs	r0, r3
 694 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:Generated_Source\PSoC4/Timer_Claps.c **** }
 695              		.loc 1 563 0
 696 003e C046     		nop
 697 0040 BD46     		mov	sp, r7
 698 0042 05B0     		add	sp, sp, #20
 699              		@ sp needed
 700 0044 90BD     		pop	{r4, r7, pc}
 701              	.L37:
 702 0046 C046     		.align	2
 703              	.L36:
 704 0048 00012040 		.word	1075839232
 705 004c FF00FFFF 		.word	-65281
 706              		.cfi_endproc
 707              	.LFE13:
 708              		.size	Timer_Claps_SetPWMDeadTime, .-Timer_Claps_SetPWMDeadTime
 709              		.section	.text.Timer_Claps_SetPWMInvert,"ax",%progbits
 710              		.align	2
 711              		.global	Timer_Claps_SetPWMInvert
 712              		.code	16
 713              		.thumb_func
 714              		.type	Timer_Claps_SetPWMInvert, %function
 715              	Timer_Claps_SetPWMInvert:
 716              	.LFB14:
 564:Generated_Source\PSoC4/Timer_Claps.c **** 
 565:Generated_Source\PSoC4/Timer_Claps.c **** 
 566:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetPWMInvert
 568:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 569:Generated_Source\PSoC4/Timer_Claps.c **** *
 570:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 571:Generated_Source\PSoC4/Timer_Claps.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/Timer_Claps.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/Timer_Claps.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/Timer_Claps.c **** *
 575:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 576:Generated_Source\PSoC4/Timer_Claps.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
 578:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/Timer_Claps.c **** *         - Timer_Claps_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/Timer_Claps.c **** *
 581:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 582:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 583:Generated_Source\PSoC4/Timer_Claps.c **** *
 584:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/Timer_Claps.c **** {
 717              		.loc 1 586 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 16
 720              		@ frame_needed = 1, uses_anonymous_args = 0
 721 0000 90B5     		push	{r4, r7, lr}
 722              		.cfi_def_cfa_offset 12
 723              		.cfi_offset 4, -12
 724              		.cfi_offset 7, -8
 725              		.cfi_offset 14, -4
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 24


 726 0002 85B0     		sub	sp, sp, #20
 727              		.cfi_def_cfa_offset 32
 728 0004 00AF     		add	r7, sp, #0
 729              		.cfi_def_cfa_register 7
 730 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/Timer_Claps.c **** 
 589:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 731              		.loc 1 589 0
 732 0008 0F23     		movs	r3, #15
 733 000a FC18     		adds	r4, r7, r3
 734 000c FFF7FEFF 		bl	CyEnterCriticalSection
 735 0010 0300     		movs	r3, r0
 736 0012 2370     		strb	r3, [r4]
 590:Generated_Source\PSoC4/Timer_Claps.c **** 
 591:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG &= (uint32)~Timer_Claps_INV_OUT_MASK;
 737              		.loc 1 591 0
 738 0014 0A4B     		ldr	r3, .L39
 739 0016 0A4A     		ldr	r2, .L39
 740 0018 1268     		ldr	r2, [r2]
 741 001a 0A49     		ldr	r1, .L39+4
 742 001c 0A40     		ands	r2, r1
 743 001e 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG |= mask;
 744              		.loc 1 592 0
 745 0020 074B     		ldr	r3, .L39
 746 0022 074A     		ldr	r2, .L39
 747 0024 1168     		ldr	r1, [r2]
 748 0026 7A68     		ldr	r2, [r7, #4]
 749 0028 0A43     		orrs	r2, r1
 750 002a 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC4/Timer_Claps.c **** 
 594:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 751              		.loc 1 594 0
 752 002c 0F23     		movs	r3, #15
 753 002e FB18     		adds	r3, r7, r3
 754 0030 1B78     		ldrb	r3, [r3]
 755 0032 1800     		movs	r0, r3
 756 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:Generated_Source\PSoC4/Timer_Claps.c **** }
 757              		.loc 1 595 0
 758 0038 C046     		nop
 759 003a BD46     		mov	sp, r7
 760 003c 05B0     		add	sp, sp, #20
 761              		@ sp needed
 762 003e 90BD     		pop	{r4, r7, pc}
 763              	.L40:
 764              		.align	2
 765              	.L39:
 766 0040 00012040 		.word	1075839232
 767 0044 FFFFCFFF 		.word	-3145729
 768              		.cfi_endproc
 769              	.LFE14:
 770              		.size	Timer_Claps_SetPWMInvert, .-Timer_Claps_SetPWMInvert
 771              		.section	.text.Timer_Claps_WriteCounter,"ax",%progbits
 772              		.align	2
 773              		.global	Timer_Claps_WriteCounter
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 25


 774              		.code	16
 775              		.thumb_func
 776              		.type	Timer_Claps_WriteCounter, %function
 777              	Timer_Claps_WriteCounter:
 778              	.LFB15:
 596:Generated_Source\PSoC4/Timer_Claps.c **** 
 597:Generated_Source\PSoC4/Timer_Claps.c **** 
 598:Generated_Source\PSoC4/Timer_Claps.c **** 
 599:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_WriteCounter
 601:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 602:Generated_Source\PSoC4/Timer_Claps.c **** *
 603:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 604:Generated_Source\PSoC4/Timer_Claps.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/Timer_Claps.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/Timer_Claps.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/Timer_Claps.c **** *
 608:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 609:Generated_Source\PSoC4/Timer_Claps.c **** *  count: value to write
 610:Generated_Source\PSoC4/Timer_Claps.c **** *
 611:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 612:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 613:Generated_Source\PSoC4/Timer_Claps.c **** *
 614:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/Timer_Claps.c **** {
 779              		.loc 1 616 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 8
 782              		@ frame_needed = 1, uses_anonymous_args = 0
 783 0000 80B5     		push	{r7, lr}
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 7, -8
 786              		.cfi_offset 14, -4
 787 0002 82B0     		sub	sp, sp, #8
 788              		.cfi_def_cfa_offset 16
 789 0004 00AF     		add	r7, sp, #0
 790              		.cfi_def_cfa_register 7
 791 0006 7860     		str	r0, [r7, #4]
 617:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_COUNTER_REG = (count & Timer_Claps_16BIT_MASK);
 792              		.loc 1 617 0
 793 0008 044B     		ldr	r3, .L42
 794 000a 7A68     		ldr	r2, [r7, #4]
 795 000c 1204     		lsls	r2, r2, #16
 796 000e 120C     		lsrs	r2, r2, #16
 797 0010 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/Timer_Claps.c **** }
 798              		.loc 1 618 0
 799 0012 C046     		nop
 800 0014 BD46     		mov	sp, r7
 801 0016 02B0     		add	sp, sp, #8
 802              		@ sp needed
 803 0018 80BD     		pop	{r7, pc}
 804              	.L43:
 805 001a C046     		.align	2
 806              	.L42:
 807 001c 08012040 		.word	1075839240
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 26


 808              		.cfi_endproc
 809              	.LFE15:
 810              		.size	Timer_Claps_WriteCounter, .-Timer_Claps_WriteCounter
 811              		.section	.text.Timer_Claps_ReadCounter,"ax",%progbits
 812              		.align	2
 813              		.global	Timer_Claps_ReadCounter
 814              		.code	16
 815              		.thumb_func
 816              		.type	Timer_Claps_ReadCounter, %function
 817              	Timer_Claps_ReadCounter:
 818              	.LFB16:
 619:Generated_Source\PSoC4/Timer_Claps.c **** 
 620:Generated_Source\PSoC4/Timer_Claps.c **** 
 621:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_ReadCounter
 623:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 624:Generated_Source\PSoC4/Timer_Claps.c **** *
 625:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 626:Generated_Source\PSoC4/Timer_Claps.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/Timer_Claps.c **** *
 628:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 629:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 630:Generated_Source\PSoC4/Timer_Claps.c **** *
 631:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 632:Generated_Source\PSoC4/Timer_Claps.c **** *  Current counter value
 633:Generated_Source\PSoC4/Timer_Claps.c **** *
 634:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/Timer_Claps.c **** uint32 Timer_Claps_ReadCounter(void)
 636:Generated_Source\PSoC4/Timer_Claps.c **** {
 819              		.loc 1 636 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823 0000 80B5     		push	{r7, lr}
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 7, -8
 826              		.cfi_offset 14, -4
 827 0002 00AF     		add	r7, sp, #0
 828              		.cfi_def_cfa_register 7
 637:Generated_Source\PSoC4/Timer_Claps.c ****     return (Timer_Claps_COUNTER_REG & Timer_Claps_16BIT_MASK);
 829              		.loc 1 637 0
 830 0004 034B     		ldr	r3, .L46
 831 0006 1B68     		ldr	r3, [r3]
 832 0008 1B04     		lsls	r3, r3, #16
 833 000a 1B0C     		lsrs	r3, r3, #16
 638:Generated_Source\PSoC4/Timer_Claps.c **** }
 834              		.loc 1 638 0
 835 000c 1800     		movs	r0, r3
 836 000e BD46     		mov	sp, r7
 837              		@ sp needed
 838 0010 80BD     		pop	{r7, pc}
 839              	.L47:
 840 0012 C046     		.align	2
 841              	.L46:
 842 0014 08012040 		.word	1075839240
 843              		.cfi_endproc
 844              	.LFE16:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 27


 845              		.size	Timer_Claps_ReadCounter, .-Timer_Claps_ReadCounter
 846              		.section	.text.Timer_Claps_SetCounterMode,"ax",%progbits
 847              		.align	2
 848              		.global	Timer_Claps_SetCounterMode
 849              		.code	16
 850              		.thumb_func
 851              		.type	Timer_Claps_SetCounterMode, %function
 852              	Timer_Claps_SetCounterMode:
 853              	.LFB17:
 639:Generated_Source\PSoC4/Timer_Claps.c **** 
 640:Generated_Source\PSoC4/Timer_Claps.c **** 
 641:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetCounterMode
 643:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 644:Generated_Source\PSoC4/Timer_Claps.c **** *
 645:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 646:Generated_Source\PSoC4/Timer_Claps.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/Timer_Claps.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/Timer_Claps.c **** *
 649:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 650:Generated_Source\PSoC4/Timer_Claps.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
 652:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/Timer_Claps.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/Timer_Claps.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/Timer_Claps.c **** *                                         and period
 659:Generated_Source\PSoC4/Timer_Claps.c **** *
 660:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 661:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 662:Generated_Source\PSoC4/Timer_Claps.c **** *
 663:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/Timer_Claps.c **** {
 854              		.loc 1 665 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 16
 857              		@ frame_needed = 1, uses_anonymous_args = 0
 858 0000 90B5     		push	{r4, r7, lr}
 859              		.cfi_def_cfa_offset 12
 860              		.cfi_offset 4, -12
 861              		.cfi_offset 7, -8
 862              		.cfi_offset 14, -4
 863 0002 85B0     		sub	sp, sp, #20
 864              		.cfi_def_cfa_offset 32
 865 0004 00AF     		add	r7, sp, #0
 866              		.cfi_def_cfa_register 7
 867 0006 7860     		str	r0, [r7, #4]
 666:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/Timer_Claps.c **** 
 668:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 868              		.loc 1 668 0
 869 0008 0F23     		movs	r3, #15
 870 000a FC18     		adds	r4, r7, r3
 871 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 28


 872 0010 0300     		movs	r3, r0
 873 0012 2370     		strb	r3, [r4]
 669:Generated_Source\PSoC4/Timer_Claps.c **** 
 670:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG &= (uint32)~Timer_Claps_UPDOWN_MASK;
 874              		.loc 1 670 0
 875 0014 0A4B     		ldr	r3, .L49
 876 0016 0A4A     		ldr	r2, .L49
 877 0018 1268     		ldr	r2, [r2]
 878 001a 0A49     		ldr	r1, .L49+4
 879 001c 0A40     		ands	r2, r1
 880 001e 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG |= counterMode;
 881              		.loc 1 671 0
 882 0020 074B     		ldr	r3, .L49
 883 0022 074A     		ldr	r2, .L49
 884 0024 1168     		ldr	r1, [r2]
 885 0026 7A68     		ldr	r2, [r7, #4]
 886 0028 0A43     		orrs	r2, r1
 887 002a 1A60     		str	r2, [r3]
 672:Generated_Source\PSoC4/Timer_Claps.c **** 
 673:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 888              		.loc 1 673 0
 889 002c 0F23     		movs	r3, #15
 890 002e FB18     		adds	r3, r7, r3
 891 0030 1B78     		ldrb	r3, [r3]
 892 0032 1800     		movs	r0, r3
 893 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/Timer_Claps.c **** }
 894              		.loc 1 674 0
 895 0038 C046     		nop
 896 003a BD46     		mov	sp, r7
 897 003c 05B0     		add	sp, sp, #20
 898              		@ sp needed
 899 003e 90BD     		pop	{r4, r7, pc}
 900              	.L50:
 901              		.align	2
 902              	.L49:
 903 0040 00012040 		.word	1075839232
 904 0044 FFFFFCFF 		.word	-196609
 905              		.cfi_endproc
 906              	.LFE17:
 907              		.size	Timer_Claps_SetCounterMode, .-Timer_Claps_SetCounterMode
 908              		.section	.text.Timer_Claps_WritePeriod,"ax",%progbits
 909              		.align	2
 910              		.global	Timer_Claps_WritePeriod
 911              		.code	16
 912              		.thumb_func
 913              		.type	Timer_Claps_WritePeriod, %function
 914              	Timer_Claps_WritePeriod:
 915              	.LFB18:
 675:Generated_Source\PSoC4/Timer_Claps.c **** 
 676:Generated_Source\PSoC4/Timer_Claps.c **** 
 677:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_WritePeriod
 679:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 680:Generated_Source\PSoC4/Timer_Claps.c **** *
 681:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 29


 682:Generated_Source\PSoC4/Timer_Claps.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/Timer_Claps.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/Timer_Claps.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/Timer_Claps.c **** *
 686:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 687:Generated_Source\PSoC4/Timer_Claps.c **** *  period: Period value
 688:Generated_Source\PSoC4/Timer_Claps.c **** *
 689:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 690:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 691:Generated_Source\PSoC4/Timer_Claps.c **** *
 692:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/Timer_Claps.c **** {
 916              		.loc 1 694 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 8
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 80B5     		push	{r7, lr}
 921              		.cfi_def_cfa_offset 8
 922              		.cfi_offset 7, -8
 923              		.cfi_offset 14, -4
 924 0002 82B0     		sub	sp, sp, #8
 925              		.cfi_def_cfa_offset 16
 926 0004 00AF     		add	r7, sp, #0
 927              		.cfi_def_cfa_register 7
 928 0006 7860     		str	r0, [r7, #4]
 695:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_PERIOD_REG = (period & Timer_Claps_16BIT_MASK);
 929              		.loc 1 695 0
 930 0008 044B     		ldr	r3, .L52
 931 000a 7A68     		ldr	r2, [r7, #4]
 932 000c 1204     		lsls	r2, r2, #16
 933 000e 120C     		lsrs	r2, r2, #16
 934 0010 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/Timer_Claps.c **** }
 935              		.loc 1 696 0
 936 0012 C046     		nop
 937 0014 BD46     		mov	sp, r7
 938 0016 02B0     		add	sp, sp, #8
 939              		@ sp needed
 940 0018 80BD     		pop	{r7, pc}
 941              	.L53:
 942 001a C046     		.align	2
 943              	.L52:
 944 001c 14012040 		.word	1075839252
 945              		.cfi_endproc
 946              	.LFE18:
 947              		.size	Timer_Claps_WritePeriod, .-Timer_Claps_WritePeriod
 948              		.section	.text.Timer_Claps_ReadPeriod,"ax",%progbits
 949              		.align	2
 950              		.global	Timer_Claps_ReadPeriod
 951              		.code	16
 952              		.thumb_func
 953              		.type	Timer_Claps_ReadPeriod, %function
 954              	Timer_Claps_ReadPeriod:
 955              	.LFB19:
 697:Generated_Source\PSoC4/Timer_Claps.c **** 
 698:Generated_Source\PSoC4/Timer_Claps.c **** 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 30


 699:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_ReadPeriod
 701:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 702:Generated_Source\PSoC4/Timer_Claps.c **** *
 703:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 704:Generated_Source\PSoC4/Timer_Claps.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/Timer_Claps.c **** *
 706:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 707:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 708:Generated_Source\PSoC4/Timer_Claps.c **** *
 709:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 710:Generated_Source\PSoC4/Timer_Claps.c **** *  Period value
 711:Generated_Source\PSoC4/Timer_Claps.c **** *
 712:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/Timer_Claps.c **** uint32 Timer_Claps_ReadPeriod(void)
 714:Generated_Source\PSoC4/Timer_Claps.c **** {
 956              		.loc 1 714 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 0
 959              		@ frame_needed = 1, uses_anonymous_args = 0
 960 0000 80B5     		push	{r7, lr}
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 7, -8
 963              		.cfi_offset 14, -4
 964 0002 00AF     		add	r7, sp, #0
 965              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC4/Timer_Claps.c ****     return (Timer_Claps_PERIOD_REG & Timer_Claps_16BIT_MASK);
 966              		.loc 1 715 0
 967 0004 034B     		ldr	r3, .L56
 968 0006 1B68     		ldr	r3, [r3]
 969 0008 1B04     		lsls	r3, r3, #16
 970 000a 1B0C     		lsrs	r3, r3, #16
 716:Generated_Source\PSoC4/Timer_Claps.c **** }
 971              		.loc 1 716 0
 972 000c 1800     		movs	r0, r3
 973 000e BD46     		mov	sp, r7
 974              		@ sp needed
 975 0010 80BD     		pop	{r7, pc}
 976              	.L57:
 977 0012 C046     		.align	2
 978              	.L56:
 979 0014 14012040 		.word	1075839252
 980              		.cfi_endproc
 981              	.LFE19:
 982              		.size	Timer_Claps_ReadPeriod, .-Timer_Claps_ReadPeriod
 983              		.section	.text.Timer_Claps_SetCompareSwap,"ax",%progbits
 984              		.align	2
 985              		.global	Timer_Claps_SetCompareSwap
 986              		.code	16
 987              		.thumb_func
 988              		.type	Timer_Claps_SetCompareSwap, %function
 989              	Timer_Claps_SetCompareSwap:
 990              	.LFB20:
 717:Generated_Source\PSoC4/Timer_Claps.c **** 
 718:Generated_Source\PSoC4/Timer_Claps.c **** 
 719:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetCompareSwap
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 31


 721:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 722:Generated_Source\PSoC4/Timer_Claps.c **** *
 723:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 724:Generated_Source\PSoC4/Timer_Claps.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/Timer_Claps.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/Timer_Claps.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/Timer_Claps.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/Timer_Claps.c **** *
 729:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 730:Generated_Source\PSoC4/Timer_Claps.c **** *  swapEnable
 731:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
 732:Generated_Source\PSoC4/Timer_Claps.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/Timer_Claps.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/Timer_Claps.c **** *
 735:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 736:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 737:Generated_Source\PSoC4/Timer_Claps.c **** *
 738:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/Timer_Claps.c **** {
 991              		.loc 1 740 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 16
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995 0000 90B5     		push	{r4, r7, lr}
 996              		.cfi_def_cfa_offset 12
 997              		.cfi_offset 4, -12
 998              		.cfi_offset 7, -8
 999              		.cfi_offset 14, -4
 1000 0002 85B0     		sub	sp, sp, #20
 1001              		.cfi_def_cfa_offset 32
 1002 0004 00AF     		add	r7, sp, #0
 1003              		.cfi_def_cfa_register 7
 1004 0006 7860     		str	r0, [r7, #4]
 741:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/Timer_Claps.c **** 
 743:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 1005              		.loc 1 743 0
 1006 0008 0F23     		movs	r3, #15
 1007 000a FC18     		adds	r4, r7, r3
 1008 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1009 0010 0300     		movs	r3, r0
 1010 0012 2370     		strb	r3, [r4]
 744:Generated_Source\PSoC4/Timer_Claps.c **** 
 745:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG &= (uint32)~Timer_Claps_RELOAD_CC_MASK;
 1011              		.loc 1 745 0
 1012 0014 0B4B     		ldr	r3, .L59
 1013 0016 0B4A     		ldr	r2, .L59
 1014 0018 1268     		ldr	r2, [r2]
 1015 001a 0121     		movs	r1, #1
 1016 001c 8A43     		bics	r2, r1
 1017 001e 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG |= (swapEnable & Timer_Claps_1BIT_MASK);
 1018              		.loc 1 746 0
 1019 0020 084B     		ldr	r3, .L59
 1020 0022 084A     		ldr	r2, .L59
 1021 0024 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 32


 1022 0026 7A68     		ldr	r2, [r7, #4]
 1023 0028 0120     		movs	r0, #1
 1024 002a 0240     		ands	r2, r0
 1025 002c 0A43     		orrs	r2, r1
 1026 002e 1A60     		str	r2, [r3]
 747:Generated_Source\PSoC4/Timer_Claps.c **** 
 748:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 1027              		.loc 1 748 0
 1028 0030 0F23     		movs	r3, #15
 1029 0032 FB18     		adds	r3, r7, r3
 1030 0034 1B78     		ldrb	r3, [r3]
 1031 0036 1800     		movs	r0, r3
 1032 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:Generated_Source\PSoC4/Timer_Claps.c **** }
 1033              		.loc 1 749 0
 1034 003c C046     		nop
 1035 003e BD46     		mov	sp, r7
 1036 0040 05B0     		add	sp, sp, #20
 1037              		@ sp needed
 1038 0042 90BD     		pop	{r4, r7, pc}
 1039              	.L60:
 1040              		.align	2
 1041              	.L59:
 1042 0044 00012040 		.word	1075839232
 1043              		.cfi_endproc
 1044              	.LFE20:
 1045              		.size	Timer_Claps_SetCompareSwap, .-Timer_Claps_SetCompareSwap
 1046              		.section	.text.Timer_Claps_WritePeriodBuf,"ax",%progbits
 1047              		.align	2
 1048              		.global	Timer_Claps_WritePeriodBuf
 1049              		.code	16
 1050              		.thumb_func
 1051              		.type	Timer_Claps_WritePeriodBuf, %function
 1052              	Timer_Claps_WritePeriodBuf:
 1053              	.LFB21:
 750:Generated_Source\PSoC4/Timer_Claps.c **** 
 751:Generated_Source\PSoC4/Timer_Claps.c **** 
 752:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_WritePeriodBuf
 754:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 755:Generated_Source\PSoC4/Timer_Claps.c **** *
 756:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 757:Generated_Source\PSoC4/Timer_Claps.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/Timer_Claps.c **** *
 759:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 760:Generated_Source\PSoC4/Timer_Claps.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/Timer_Claps.c **** *
 762:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 763:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 764:Generated_Source\PSoC4/Timer_Claps.c **** *
 765:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/Timer_Claps.c **** {
 1054              		.loc 1 767 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 8
 1057              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 33


 1058 0000 80B5     		push	{r7, lr}
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 7, -8
 1061              		.cfi_offset 14, -4
 1062 0002 82B0     		sub	sp, sp, #8
 1063              		.cfi_def_cfa_offset 16
 1064 0004 00AF     		add	r7, sp, #0
 1065              		.cfi_def_cfa_register 7
 1066 0006 7860     		str	r0, [r7, #4]
 768:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_PERIOD_BUF_REG = (periodBuf & Timer_Claps_16BIT_MASK);
 1067              		.loc 1 768 0
 1068 0008 044B     		ldr	r3, .L62
 1069 000a 7A68     		ldr	r2, [r7, #4]
 1070 000c 1204     		lsls	r2, r2, #16
 1071 000e 120C     		lsrs	r2, r2, #16
 1072 0010 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/Timer_Claps.c **** }
 1073              		.loc 1 769 0
 1074 0012 C046     		nop
 1075 0014 BD46     		mov	sp, r7
 1076 0016 02B0     		add	sp, sp, #8
 1077              		@ sp needed
 1078 0018 80BD     		pop	{r7, pc}
 1079              	.L63:
 1080 001a C046     		.align	2
 1081              	.L62:
 1082 001c 18012040 		.word	1075839256
 1083              		.cfi_endproc
 1084              	.LFE21:
 1085              		.size	Timer_Claps_WritePeriodBuf, .-Timer_Claps_WritePeriodBuf
 1086              		.section	.text.Timer_Claps_ReadPeriodBuf,"ax",%progbits
 1087              		.align	2
 1088              		.global	Timer_Claps_ReadPeriodBuf
 1089              		.code	16
 1090              		.thumb_func
 1091              		.type	Timer_Claps_ReadPeriodBuf, %function
 1092              	Timer_Claps_ReadPeriodBuf:
 1093              	.LFB22:
 770:Generated_Source\PSoC4/Timer_Claps.c **** 
 771:Generated_Source\PSoC4/Timer_Claps.c **** 
 772:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_ReadPeriodBuf
 774:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 775:Generated_Source\PSoC4/Timer_Claps.c **** *
 776:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 777:Generated_Source\PSoC4/Timer_Claps.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/Timer_Claps.c **** *
 779:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 780:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 781:Generated_Source\PSoC4/Timer_Claps.c **** *
 782:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 783:Generated_Source\PSoC4/Timer_Claps.c **** *  Period value
 784:Generated_Source\PSoC4/Timer_Claps.c **** *
 785:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/Timer_Claps.c **** uint32 Timer_Claps_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/Timer_Claps.c **** {
 1094              		.loc 1 787 0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 34


 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 0
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098 0000 80B5     		push	{r7, lr}
 1099              		.cfi_def_cfa_offset 8
 1100              		.cfi_offset 7, -8
 1101              		.cfi_offset 14, -4
 1102 0002 00AF     		add	r7, sp, #0
 1103              		.cfi_def_cfa_register 7
 788:Generated_Source\PSoC4/Timer_Claps.c ****     return (Timer_Claps_PERIOD_BUF_REG & Timer_Claps_16BIT_MASK);
 1104              		.loc 1 788 0
 1105 0004 034B     		ldr	r3, .L66
 1106 0006 1B68     		ldr	r3, [r3]
 1107 0008 1B04     		lsls	r3, r3, #16
 1108 000a 1B0C     		lsrs	r3, r3, #16
 789:Generated_Source\PSoC4/Timer_Claps.c **** }
 1109              		.loc 1 789 0
 1110 000c 1800     		movs	r0, r3
 1111 000e BD46     		mov	sp, r7
 1112              		@ sp needed
 1113 0010 80BD     		pop	{r7, pc}
 1114              	.L67:
 1115 0012 C046     		.align	2
 1116              	.L66:
 1117 0014 18012040 		.word	1075839256
 1118              		.cfi_endproc
 1119              	.LFE22:
 1120              		.size	Timer_Claps_ReadPeriodBuf, .-Timer_Claps_ReadPeriodBuf
 1121              		.section	.text.Timer_Claps_SetPeriodSwap,"ax",%progbits
 1122              		.align	2
 1123              		.global	Timer_Claps_SetPeriodSwap
 1124              		.code	16
 1125              		.thumb_func
 1126              		.type	Timer_Claps_SetPeriodSwap, %function
 1127              	Timer_Claps_SetPeriodSwap:
 1128              	.LFB23:
 790:Generated_Source\PSoC4/Timer_Claps.c **** 
 791:Generated_Source\PSoC4/Timer_Claps.c **** 
 792:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetPeriodSwap
 794:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 795:Generated_Source\PSoC4/Timer_Claps.c **** *
 796:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 797:Generated_Source\PSoC4/Timer_Claps.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/Timer_Claps.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/Timer_Claps.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/Timer_Claps.c **** *  switch event.
 801:Generated_Source\PSoC4/Timer_Claps.c **** *
 802:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 803:Generated_Source\PSoC4/Timer_Claps.c **** *  swapEnable
 804:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
 805:Generated_Source\PSoC4/Timer_Claps.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/Timer_Claps.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/Timer_Claps.c **** *
 808:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 809:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 810:Generated_Source\PSoC4/Timer_Claps.c **** *
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 35


 811:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/Timer_Claps.c **** {
 1129              		.loc 1 813 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 16
 1132              		@ frame_needed = 1, uses_anonymous_args = 0
 1133 0000 90B5     		push	{r4, r7, lr}
 1134              		.cfi_def_cfa_offset 12
 1135              		.cfi_offset 4, -12
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 0002 85B0     		sub	sp, sp, #20
 1139              		.cfi_def_cfa_offset 32
 1140 0004 00AF     		add	r7, sp, #0
 1141              		.cfi_def_cfa_register 7
 1142 0006 7860     		str	r0, [r7, #4]
 814:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/Timer_Claps.c **** 
 816:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 1143              		.loc 1 816 0
 1144 0008 0F23     		movs	r3, #15
 1145 000a FC18     		adds	r4, r7, r3
 1146 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1147 0010 0300     		movs	r3, r0
 1148 0012 2370     		strb	r3, [r4]
 817:Generated_Source\PSoC4/Timer_Claps.c **** 
 818:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG &= (uint32)~Timer_Claps_RELOAD_PERIOD_MASK;
 1149              		.loc 1 818 0
 1150 0014 0C4B     		ldr	r3, .L69
 1151 0016 0C4A     		ldr	r2, .L69
 1152 0018 1268     		ldr	r2, [r2]
 1153 001a 0221     		movs	r1, #2
 1154 001c 8A43     		bics	r2, r1
 1155 001e 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_CONTROL_REG |= ((uint32)((swapEnable & Timer_Claps_1BIT_MASK) <<
 1156              		.loc 1 819 0
 1157 0020 094B     		ldr	r3, .L69
 1158 0022 094A     		ldr	r2, .L69
 1159 0024 1168     		ldr	r1, [r2]
 1160 0026 7A68     		ldr	r2, [r7, #4]
 1161 0028 5200     		lsls	r2, r2, #1
 1162 002a 0220     		movs	r0, #2
 1163 002c 0240     		ands	r2, r0
 1164 002e 0A43     		orrs	r2, r1
 1165 0030 1A60     		str	r2, [r3]
 820:Generated_Source\PSoC4/Timer_Claps.c ****                                                             Timer_Claps_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/Timer_Claps.c **** 
 822:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 1166              		.loc 1 822 0
 1167 0032 0F23     		movs	r3, #15
 1168 0034 FB18     		adds	r3, r7, r3
 1169 0036 1B78     		ldrb	r3, [r3]
 1170 0038 1800     		movs	r0, r3
 1171 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/Timer_Claps.c **** }
 1172              		.loc 1 823 0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 36


 1173 003e C046     		nop
 1174 0040 BD46     		mov	sp, r7
 1175 0042 05B0     		add	sp, sp, #20
 1176              		@ sp needed
 1177 0044 90BD     		pop	{r4, r7, pc}
 1178              	.L70:
 1179 0046 C046     		.align	2
 1180              	.L69:
 1181 0048 00012040 		.word	1075839232
 1182              		.cfi_endproc
 1183              	.LFE23:
 1184              		.size	Timer_Claps_SetPeriodSwap, .-Timer_Claps_SetPeriodSwap
 1185              		.section	.text.Timer_Claps_WriteCompare,"ax",%progbits
 1186              		.align	2
 1187              		.global	Timer_Claps_WriteCompare
 1188              		.code	16
 1189              		.thumb_func
 1190              		.type	Timer_Claps_WriteCompare, %function
 1191              	Timer_Claps_WriteCompare:
 1192              	.LFB24:
 824:Generated_Source\PSoC4/Timer_Claps.c **** 
 825:Generated_Source\PSoC4/Timer_Claps.c **** 
 826:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_WriteCompare
 828:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 829:Generated_Source\PSoC4/Timer_Claps.c **** *
 830:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 831:Generated_Source\PSoC4/Timer_Claps.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/Timer_Claps.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/Timer_Claps.c **** *
 834:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 835:Generated_Source\PSoC4/Timer_Claps.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/Timer_Claps.c **** *
 837:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 838:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 839:Generated_Source\PSoC4/Timer_Claps.c **** *
 840:Generated_Source\PSoC4/Timer_Claps.c **** * Note:
 841:Generated_Source\PSoC4/Timer_Claps.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/Timer_Claps.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/Timer_Claps.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/Timer_Claps.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/Timer_Claps.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/Timer_Claps.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/Timer_Claps.c **** *
 848:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/Timer_Claps.c **** {
 1193              		.loc 1 850 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 8
 1196              		@ frame_needed = 1, uses_anonymous_args = 0
 1197 0000 80B5     		push	{r7, lr}
 1198              		.cfi_def_cfa_offset 8
 1199              		.cfi_offset 7, -8
 1200              		.cfi_offset 14, -4
 1201 0002 82B0     		sub	sp, sp, #8
 1202              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 37


 1203 0004 00AF     		add	r7, sp, #0
 1204              		.cfi_def_cfa_register 7
 1205 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/Timer_Claps.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/Timer_Claps.c ****     #endif /* (Timer_Claps_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/Timer_Claps.c **** 
 855:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/Timer_Claps.c ****         currentMode = ((Timer_Claps_CONTROL_REG & Timer_Claps_UPDOWN_MASK) >> Timer_Claps_UPDOWN_SH
 857:Generated_Source\PSoC4/Timer_Claps.c **** 
 858:Generated_Source\PSoC4/Timer_Claps.c ****         if (((uint32)Timer_Claps__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/Timer_Claps.c ****         {
 860:Generated_Source\PSoC4/Timer_Claps.c ****             compare++;
 861:Generated_Source\PSoC4/Timer_Claps.c ****         }
 862:Generated_Source\PSoC4/Timer_Claps.c ****         else if (((uint32)Timer_Claps__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/Timer_Claps.c ****         {
 864:Generated_Source\PSoC4/Timer_Claps.c ****             compare--;
 865:Generated_Source\PSoC4/Timer_Claps.c ****         }
 866:Generated_Source\PSoC4/Timer_Claps.c ****         else
 867:Generated_Source\PSoC4/Timer_Claps.c ****         {
 868:Generated_Source\PSoC4/Timer_Claps.c ****         }
 869:Generated_Source\PSoC4/Timer_Claps.c ****         
 870:Generated_Source\PSoC4/Timer_Claps.c ****     
 871:Generated_Source\PSoC4/Timer_Claps.c ****     #endif /* (Timer_Claps_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/Timer_Claps.c ****     
 873:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_COMP_CAP_REG = (compare & Timer_Claps_16BIT_MASK);
 1206              		.loc 1 873 0
 1207 0008 044B     		ldr	r3, .L72
 1208 000a 7A68     		ldr	r2, [r7, #4]
 1209 000c 1204     		lsls	r2, r2, #16
 1210 000e 120C     		lsrs	r2, r2, #16
 1211 0010 1A60     		str	r2, [r3]
 874:Generated_Source\PSoC4/Timer_Claps.c **** }
 1212              		.loc 1 874 0
 1213 0012 C046     		nop
 1214 0014 BD46     		mov	sp, r7
 1215 0016 02B0     		add	sp, sp, #8
 1216              		@ sp needed
 1217 0018 80BD     		pop	{r7, pc}
 1218              	.L73:
 1219 001a C046     		.align	2
 1220              	.L72:
 1221 001c 0C012040 		.word	1075839244
 1222              		.cfi_endproc
 1223              	.LFE24:
 1224              		.size	Timer_Claps_WriteCompare, .-Timer_Claps_WriteCompare
 1225              		.section	.text.Timer_Claps_ReadCompare,"ax",%progbits
 1226              		.align	2
 1227              		.global	Timer_Claps_ReadCompare
 1228              		.code	16
 1229              		.thumb_func
 1230              		.type	Timer_Claps_ReadCompare, %function
 1231              	Timer_Claps_ReadCompare:
 1232              	.LFB25:
 875:Generated_Source\PSoC4/Timer_Claps.c **** 
 876:Generated_Source\PSoC4/Timer_Claps.c **** 
 877:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 38


 878:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_ReadCompare
 879:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 880:Generated_Source\PSoC4/Timer_Claps.c **** *
 881:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 882:Generated_Source\PSoC4/Timer_Claps.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/Timer_Claps.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/Timer_Claps.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/Timer_Claps.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/Timer_Claps.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/Timer_Claps.c **** *
 888:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 889:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 890:Generated_Source\PSoC4/Timer_Claps.c **** *
 891:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 892:Generated_Source\PSoC4/Timer_Claps.c **** *  Compare value
 893:Generated_Source\PSoC4/Timer_Claps.c **** *
 894:Generated_Source\PSoC4/Timer_Claps.c **** * Note:
 895:Generated_Source\PSoC4/Timer_Claps.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/Timer_Claps.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/Timer_Claps.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/Timer_Claps.c **** *
 899:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/Timer_Claps.c **** uint32 Timer_Claps_ReadCompare(void)
 901:Generated_Source\PSoC4/Timer_Claps.c **** {
 1233              		.loc 1 901 0
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 1, uses_anonymous_args = 0
 1237 0000 80B5     		push	{r7, lr}
 1238              		.cfi_def_cfa_offset 8
 1239              		.cfi_offset 7, -8
 1240              		.cfi_offset 14, -4
 1241 0002 00AF     		add	r7, sp, #0
 1242              		.cfi_def_cfa_register 7
 902:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/Timer_Claps.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/Timer_Claps.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/Timer_Claps.c ****     #endif /* (Timer_Claps_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/Timer_Claps.c **** 
 907:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/Timer_Claps.c ****         currentMode = ((Timer_Claps_CONTROL_REG & Timer_Claps_UPDOWN_MASK) >> Timer_Claps_UPDOWN_SH
 909:Generated_Source\PSoC4/Timer_Claps.c ****         
 910:Generated_Source\PSoC4/Timer_Claps.c ****         regVal = Timer_Claps_COMP_CAP_REG;
 911:Generated_Source\PSoC4/Timer_Claps.c ****         
 912:Generated_Source\PSoC4/Timer_Claps.c ****         if (((uint32)Timer_Claps__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/Timer_Claps.c ****         {
 914:Generated_Source\PSoC4/Timer_Claps.c ****             regVal--;
 915:Generated_Source\PSoC4/Timer_Claps.c ****         }
 916:Generated_Source\PSoC4/Timer_Claps.c ****         else if (((uint32)Timer_Claps__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/Timer_Claps.c ****         {
 918:Generated_Source\PSoC4/Timer_Claps.c ****             regVal++;
 919:Generated_Source\PSoC4/Timer_Claps.c ****         }
 920:Generated_Source\PSoC4/Timer_Claps.c ****         else
 921:Generated_Source\PSoC4/Timer_Claps.c ****         {
 922:Generated_Source\PSoC4/Timer_Claps.c ****         }
 923:Generated_Source\PSoC4/Timer_Claps.c **** 
 924:Generated_Source\PSoC4/Timer_Claps.c ****         return (regVal & Timer_Claps_16BIT_MASK);
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 39


 925:Generated_Source\PSoC4/Timer_Claps.c ****     #else
 926:Generated_Source\PSoC4/Timer_Claps.c ****         return (Timer_Claps_COMP_CAP_REG & Timer_Claps_16BIT_MASK);
 1243              		.loc 1 926 0
 1244 0004 034B     		ldr	r3, .L76
 1245 0006 1B68     		ldr	r3, [r3]
 1246 0008 1B04     		lsls	r3, r3, #16
 1247 000a 1B0C     		lsrs	r3, r3, #16
 927:Generated_Source\PSoC4/Timer_Claps.c ****     #endif /* (Timer_Claps_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/Timer_Claps.c **** }
 1248              		.loc 1 928 0
 1249 000c 1800     		movs	r0, r3
 1250 000e BD46     		mov	sp, r7
 1251              		@ sp needed
 1252 0010 80BD     		pop	{r7, pc}
 1253              	.L77:
 1254 0012 C046     		.align	2
 1255              	.L76:
 1256 0014 0C012040 		.word	1075839244
 1257              		.cfi_endproc
 1258              	.LFE25:
 1259              		.size	Timer_Claps_ReadCompare, .-Timer_Claps_ReadCompare
 1260              		.section	.text.Timer_Claps_WriteCompareBuf,"ax",%progbits
 1261              		.align	2
 1262              		.global	Timer_Claps_WriteCompareBuf
 1263              		.code	16
 1264              		.thumb_func
 1265              		.type	Timer_Claps_WriteCompareBuf, %function
 1266              	Timer_Claps_WriteCompareBuf:
 1267              	.LFB26:
 929:Generated_Source\PSoC4/Timer_Claps.c **** 
 930:Generated_Source\PSoC4/Timer_Claps.c **** 
 931:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_WriteCompareBuf
 933:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 934:Generated_Source\PSoC4/Timer_Claps.c **** *
 935:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 936:Generated_Source\PSoC4/Timer_Claps.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/Timer_Claps.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/Timer_Claps.c **** *
 939:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 940:Generated_Source\PSoC4/Timer_Claps.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/Timer_Claps.c **** *
 942:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 943:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 944:Generated_Source\PSoC4/Timer_Claps.c **** *
 945:Generated_Source\PSoC4/Timer_Claps.c **** * Note:
 946:Generated_Source\PSoC4/Timer_Claps.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/Timer_Claps.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/Timer_Claps.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/Timer_Claps.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/Timer_Claps.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/Timer_Claps.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/Timer_Claps.c **** *
 953:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/Timer_Claps.c **** {
 1268              		.loc 1 955 0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 40


 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 8
 1271              		@ frame_needed = 1, uses_anonymous_args = 0
 1272 0000 80B5     		push	{r7, lr}
 1273              		.cfi_def_cfa_offset 8
 1274              		.cfi_offset 7, -8
 1275              		.cfi_offset 14, -4
 1276 0002 82B0     		sub	sp, sp, #8
 1277              		.cfi_def_cfa_offset 16
 1278 0004 00AF     		add	r7, sp, #0
 1279              		.cfi_def_cfa_register 7
 1280 0006 7860     		str	r0, [r7, #4]
 956:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/Timer_Claps.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/Timer_Claps.c ****     #endif /* (Timer_Claps_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/Timer_Claps.c **** 
 960:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/Timer_Claps.c ****         currentMode = ((Timer_Claps_CONTROL_REG & Timer_Claps_UPDOWN_MASK) >> Timer_Claps_UPDOWN_SH
 962:Generated_Source\PSoC4/Timer_Claps.c **** 
 963:Generated_Source\PSoC4/Timer_Claps.c ****         if (((uint32)Timer_Claps__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/Timer_Claps.c ****         {
 965:Generated_Source\PSoC4/Timer_Claps.c ****             compareBuf++;
 966:Generated_Source\PSoC4/Timer_Claps.c ****         }
 967:Generated_Source\PSoC4/Timer_Claps.c ****         else if (((uint32)Timer_Claps__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/Timer_Claps.c ****         {
 969:Generated_Source\PSoC4/Timer_Claps.c ****             compareBuf --;
 970:Generated_Source\PSoC4/Timer_Claps.c ****         }
 971:Generated_Source\PSoC4/Timer_Claps.c ****         else
 972:Generated_Source\PSoC4/Timer_Claps.c ****         {
 973:Generated_Source\PSoC4/Timer_Claps.c ****         }
 974:Generated_Source\PSoC4/Timer_Claps.c ****     #endif /* (Timer_Claps_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/Timer_Claps.c ****     
 976:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_COMP_CAP_BUF_REG = (compareBuf & Timer_Claps_16BIT_MASK);
 1281              		.loc 1 976 0
 1282 0008 044B     		ldr	r3, .L79
 1283 000a 7A68     		ldr	r2, [r7, #4]
 1284 000c 1204     		lsls	r2, r2, #16
 1285 000e 120C     		lsrs	r2, r2, #16
 1286 0010 1A60     		str	r2, [r3]
 977:Generated_Source\PSoC4/Timer_Claps.c **** }
 1287              		.loc 1 977 0
 1288 0012 C046     		nop
 1289 0014 BD46     		mov	sp, r7
 1290 0016 02B0     		add	sp, sp, #8
 1291              		@ sp needed
 1292 0018 80BD     		pop	{r7, pc}
 1293              	.L80:
 1294 001a C046     		.align	2
 1295              	.L79:
 1296 001c 10012040 		.word	1075839248
 1297              		.cfi_endproc
 1298              	.LFE26:
 1299              		.size	Timer_Claps_WriteCompareBuf, .-Timer_Claps_WriteCompareBuf
 1300              		.section	.text.Timer_Claps_ReadCompareBuf,"ax",%progbits
 1301              		.align	2
 1302              		.global	Timer_Claps_ReadCompareBuf
 1303              		.code	16
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 41


 1304              		.thumb_func
 1305              		.type	Timer_Claps_ReadCompareBuf, %function
 1306              	Timer_Claps_ReadCompareBuf:
 1307              	.LFB27:
 978:Generated_Source\PSoC4/Timer_Claps.c **** 
 979:Generated_Source\PSoC4/Timer_Claps.c **** 
 980:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_ReadCompareBuf
 982:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
 983:Generated_Source\PSoC4/Timer_Claps.c **** *
 984:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
 985:Generated_Source\PSoC4/Timer_Claps.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/Timer_Claps.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/Timer_Claps.c **** *
 988:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
 989:Generated_Source\PSoC4/Timer_Claps.c **** *  None
 990:Generated_Source\PSoC4/Timer_Claps.c **** *
 991:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
 992:Generated_Source\PSoC4/Timer_Claps.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/Timer_Claps.c **** *
 994:Generated_Source\PSoC4/Timer_Claps.c **** * Note:
 995:Generated_Source\PSoC4/Timer_Claps.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/Timer_Claps.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/Timer_Claps.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/Timer_Claps.c **** *
 999:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/Timer_Claps.c **** uint32 Timer_Claps_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/Timer_Claps.c **** {
 1308              		.loc 1 1001 0
 1309              		.cfi_startproc
 1310              		@ args = 0, pretend = 0, frame = 0
 1311              		@ frame_needed = 1, uses_anonymous_args = 0
 1312 0000 80B5     		push	{r7, lr}
 1313              		.cfi_def_cfa_offset 8
 1314              		.cfi_offset 7, -8
 1315              		.cfi_offset 14, -4
 1316 0002 00AF     		add	r7, sp, #0
 1317              		.cfi_def_cfa_register 7
1002:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/Timer_Claps.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/Timer_Claps.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/Timer_Claps.c ****     #endif /* (Timer_Claps_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/Timer_Claps.c **** 
1007:Generated_Source\PSoC4/Timer_Claps.c ****     #if (Timer_Claps_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/Timer_Claps.c ****         currentMode = ((Timer_Claps_CONTROL_REG & Timer_Claps_UPDOWN_MASK) >> Timer_Claps_UPDOWN_SH
1009:Generated_Source\PSoC4/Timer_Claps.c **** 
1010:Generated_Source\PSoC4/Timer_Claps.c ****         regVal = Timer_Claps_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/Timer_Claps.c ****         
1012:Generated_Source\PSoC4/Timer_Claps.c ****         if (((uint32)Timer_Claps__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/Timer_Claps.c ****         {
1014:Generated_Source\PSoC4/Timer_Claps.c ****             regVal--;
1015:Generated_Source\PSoC4/Timer_Claps.c ****         }
1016:Generated_Source\PSoC4/Timer_Claps.c ****         else if (((uint32)Timer_Claps__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/Timer_Claps.c ****         {
1018:Generated_Source\PSoC4/Timer_Claps.c ****             regVal++;
1019:Generated_Source\PSoC4/Timer_Claps.c ****         }
1020:Generated_Source\PSoC4/Timer_Claps.c ****         else
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 42


1021:Generated_Source\PSoC4/Timer_Claps.c ****         {
1022:Generated_Source\PSoC4/Timer_Claps.c ****         }
1023:Generated_Source\PSoC4/Timer_Claps.c **** 
1024:Generated_Source\PSoC4/Timer_Claps.c ****         return (regVal & Timer_Claps_16BIT_MASK);
1025:Generated_Source\PSoC4/Timer_Claps.c ****     #else
1026:Generated_Source\PSoC4/Timer_Claps.c ****         return (Timer_Claps_COMP_CAP_BUF_REG & Timer_Claps_16BIT_MASK);
 1318              		.loc 1 1026 0
 1319 0004 034B     		ldr	r3, .L83
 1320 0006 1B68     		ldr	r3, [r3]
 1321 0008 1B04     		lsls	r3, r3, #16
 1322 000a 1B0C     		lsrs	r3, r3, #16
1027:Generated_Source\PSoC4/Timer_Claps.c ****     #endif /* (Timer_Claps_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/Timer_Claps.c **** }
 1323              		.loc 1 1028 0
 1324 000c 1800     		movs	r0, r3
 1325 000e BD46     		mov	sp, r7
 1326              		@ sp needed
 1327 0010 80BD     		pop	{r7, pc}
 1328              	.L84:
 1329 0012 C046     		.align	2
 1330              	.L83:
 1331 0014 10012040 		.word	1075839248
 1332              		.cfi_endproc
 1333              	.LFE27:
 1334              		.size	Timer_Claps_ReadCompareBuf, .-Timer_Claps_ReadCompareBuf
 1335              		.section	.text.Timer_Claps_ReadCapture,"ax",%progbits
 1336              		.align	2
 1337              		.global	Timer_Claps_ReadCapture
 1338              		.code	16
 1339              		.thumb_func
 1340              		.type	Timer_Claps_ReadCapture, %function
 1341              	Timer_Claps_ReadCapture:
 1342              	.LFB28:
1029:Generated_Source\PSoC4/Timer_Claps.c **** 
1030:Generated_Source\PSoC4/Timer_Claps.c **** 
1031:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_ReadCapture
1033:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1034:Generated_Source\PSoC4/Timer_Claps.c **** *
1035:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
1036:Generated_Source\PSoC4/Timer_Claps.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/Timer_Claps.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/Timer_Claps.c **** *
1039:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1040:Generated_Source\PSoC4/Timer_Claps.c **** *  None
1041:Generated_Source\PSoC4/Timer_Claps.c **** *
1042:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
1043:Generated_Source\PSoC4/Timer_Claps.c **** *  Capture value
1044:Generated_Source\PSoC4/Timer_Claps.c **** *
1045:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/Timer_Claps.c **** uint32 Timer_Claps_ReadCapture(void)
1047:Generated_Source\PSoC4/Timer_Claps.c **** {
 1343              		.loc 1 1047 0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 0
 1346              		@ frame_needed = 1, uses_anonymous_args = 0
 1347 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 43


 1348              		.cfi_def_cfa_offset 8
 1349              		.cfi_offset 7, -8
 1350              		.cfi_offset 14, -4
 1351 0002 00AF     		add	r7, sp, #0
 1352              		.cfi_def_cfa_register 7
1048:Generated_Source\PSoC4/Timer_Claps.c ****     return (Timer_Claps_COMP_CAP_REG & Timer_Claps_16BIT_MASK);
 1353              		.loc 1 1048 0
 1354 0004 034B     		ldr	r3, .L87
 1355 0006 1B68     		ldr	r3, [r3]
 1356 0008 1B04     		lsls	r3, r3, #16
 1357 000a 1B0C     		lsrs	r3, r3, #16
1049:Generated_Source\PSoC4/Timer_Claps.c **** }
 1358              		.loc 1 1049 0
 1359 000c 1800     		movs	r0, r3
 1360 000e BD46     		mov	sp, r7
 1361              		@ sp needed
 1362 0010 80BD     		pop	{r7, pc}
 1363              	.L88:
 1364 0012 C046     		.align	2
 1365              	.L87:
 1366 0014 0C012040 		.word	1075839244
 1367              		.cfi_endproc
 1368              	.LFE28:
 1369              		.size	Timer_Claps_ReadCapture, .-Timer_Claps_ReadCapture
 1370              		.section	.text.Timer_Claps_ReadCaptureBuf,"ax",%progbits
 1371              		.align	2
 1372              		.global	Timer_Claps_ReadCaptureBuf
 1373              		.code	16
 1374              		.thumb_func
 1375              		.type	Timer_Claps_ReadCaptureBuf, %function
 1376              	Timer_Claps_ReadCaptureBuf:
 1377              	.LFB29:
1050:Generated_Source\PSoC4/Timer_Claps.c **** 
1051:Generated_Source\PSoC4/Timer_Claps.c **** 
1052:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_ReadCaptureBuf
1054:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1055:Generated_Source\PSoC4/Timer_Claps.c **** *
1056:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
1057:Generated_Source\PSoC4/Timer_Claps.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/Timer_Claps.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/Timer_Claps.c **** *
1060:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1061:Generated_Source\PSoC4/Timer_Claps.c **** *  None
1062:Generated_Source\PSoC4/Timer_Claps.c **** *
1063:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
1064:Generated_Source\PSoC4/Timer_Claps.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/Timer_Claps.c **** *
1066:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/Timer_Claps.c **** uint32 Timer_Claps_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/Timer_Claps.c **** {
 1378              		.loc 1 1068 0
 1379              		.cfi_startproc
 1380              		@ args = 0, pretend = 0, frame = 0
 1381              		@ frame_needed = 1, uses_anonymous_args = 0
 1382 0000 80B5     		push	{r7, lr}
 1383              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 44


 1384              		.cfi_offset 7, -8
 1385              		.cfi_offset 14, -4
 1386 0002 00AF     		add	r7, sp, #0
 1387              		.cfi_def_cfa_register 7
1069:Generated_Source\PSoC4/Timer_Claps.c ****     return (Timer_Claps_COMP_CAP_BUF_REG & Timer_Claps_16BIT_MASK);
 1388              		.loc 1 1069 0
 1389 0004 034B     		ldr	r3, .L91
 1390 0006 1B68     		ldr	r3, [r3]
 1391 0008 1B04     		lsls	r3, r3, #16
 1392 000a 1B0C     		lsrs	r3, r3, #16
1070:Generated_Source\PSoC4/Timer_Claps.c **** }
 1393              		.loc 1 1070 0
 1394 000c 1800     		movs	r0, r3
 1395 000e BD46     		mov	sp, r7
 1396              		@ sp needed
 1397 0010 80BD     		pop	{r7, pc}
 1398              	.L92:
 1399 0012 C046     		.align	2
 1400              	.L91:
 1401 0014 10012040 		.word	1075839248
 1402              		.cfi_endproc
 1403              	.LFE29:
 1404              		.size	Timer_Claps_ReadCaptureBuf, .-Timer_Claps_ReadCaptureBuf
 1405              		.section	.text.Timer_Claps_SetCaptureMode,"ax",%progbits
 1406              		.align	2
 1407              		.global	Timer_Claps_SetCaptureMode
 1408              		.code	16
 1409              		.thumb_func
 1410              		.type	Timer_Claps_SetCaptureMode, %function
 1411              	Timer_Claps_SetCaptureMode:
 1412              	.LFB30:
1071:Generated_Source\PSoC4/Timer_Claps.c **** 
1072:Generated_Source\PSoC4/Timer_Claps.c **** 
1073:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetCaptureMode
1075:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1076:Generated_Source\PSoC4/Timer_Claps.c **** *
1077:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
1078:Generated_Source\PSoC4/Timer_Claps.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/Timer_Claps.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/Timer_Claps.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/Timer_Claps.c **** *
1082:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1083:Generated_Source\PSoC4/Timer_Claps.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
1085:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/Timer_Claps.c **** *
1090:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
1091:Generated_Source\PSoC4/Timer_Claps.c **** *  None
1092:Generated_Source\PSoC4/Timer_Claps.c **** *
1093:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/Timer_Claps.c **** {
 1413              		.loc 1 1095 0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 45


 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 16
 1416              		@ frame_needed = 1, uses_anonymous_args = 0
 1417 0000 90B5     		push	{r4, r7, lr}
 1418              		.cfi_def_cfa_offset 12
 1419              		.cfi_offset 4, -12
 1420              		.cfi_offset 7, -8
 1421              		.cfi_offset 14, -4
 1422 0002 85B0     		sub	sp, sp, #20
 1423              		.cfi_def_cfa_offset 32
 1424 0004 00AF     		add	r7, sp, #0
 1425              		.cfi_def_cfa_register 7
 1426 0006 7860     		str	r0, [r7, #4]
1096:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/Timer_Claps.c **** 
1098:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 1427              		.loc 1 1098 0
 1428 0008 0F23     		movs	r3, #15
 1429 000a FC18     		adds	r4, r7, r3
 1430 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1431 0010 0300     		movs	r3, r0
 1432 0012 2370     		strb	r3, [r4]
1099:Generated_Source\PSoC4/Timer_Claps.c **** 
1100:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_TRIG_CONTROL1_REG &= (uint32)~Timer_Claps_CAPTURE_MASK;
 1433              		.loc 1 1100 0
 1434 0014 0A4B     		ldr	r3, .L94
 1435 0016 0A4A     		ldr	r2, .L94
 1436 0018 1268     		ldr	r2, [r2]
 1437 001a 0321     		movs	r1, #3
 1438 001c 8A43     		bics	r2, r1
 1439 001e 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_TRIG_CONTROL1_REG |= triggerMode;
 1440              		.loc 1 1101 0
 1441 0020 074B     		ldr	r3, .L94
 1442 0022 074A     		ldr	r2, .L94
 1443 0024 1168     		ldr	r1, [r2]
 1444 0026 7A68     		ldr	r2, [r7, #4]
 1445 0028 0A43     		orrs	r2, r1
 1446 002a 1A60     		str	r2, [r3]
1102:Generated_Source\PSoC4/Timer_Claps.c **** 
1103:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 1447              		.loc 1 1103 0
 1448 002c 0F23     		movs	r3, #15
 1449 002e FB18     		adds	r3, r7, r3
 1450 0030 1B78     		ldrb	r3, [r3]
 1451 0032 1800     		movs	r0, r3
 1452 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:Generated_Source\PSoC4/Timer_Claps.c **** }
 1453              		.loc 1 1104 0
 1454 0038 C046     		nop
 1455 003a BD46     		mov	sp, r7
 1456 003c 05B0     		add	sp, sp, #20
 1457              		@ sp needed
 1458 003e 90BD     		pop	{r4, r7, pc}
 1459              	.L95:
 1460              		.align	2
 1461              	.L94:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 46


 1462 0040 24012040 		.word	1075839268
 1463              		.cfi_endproc
 1464              	.LFE30:
 1465              		.size	Timer_Claps_SetCaptureMode, .-Timer_Claps_SetCaptureMode
 1466              		.section	.text.Timer_Claps_SetReloadMode,"ax",%progbits
 1467              		.align	2
 1468              		.global	Timer_Claps_SetReloadMode
 1469              		.code	16
 1470              		.thumb_func
 1471              		.type	Timer_Claps_SetReloadMode, %function
 1472              	Timer_Claps_SetReloadMode:
 1473              	.LFB31:
1105:Generated_Source\PSoC4/Timer_Claps.c **** 
1106:Generated_Source\PSoC4/Timer_Claps.c **** 
1107:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetReloadMode
1109:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1110:Generated_Source\PSoC4/Timer_Claps.c **** *
1111:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
1112:Generated_Source\PSoC4/Timer_Claps.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/Timer_Claps.c **** *  input.
1114:Generated_Source\PSoC4/Timer_Claps.c **** *
1115:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1116:Generated_Source\PSoC4/Timer_Claps.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
1118:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/Timer_Claps.c **** *
1123:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
1124:Generated_Source\PSoC4/Timer_Claps.c **** *  None
1125:Generated_Source\PSoC4/Timer_Claps.c **** *
1126:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/Timer_Claps.c **** {
 1474              		.loc 1 1128 0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 16
 1477              		@ frame_needed = 1, uses_anonymous_args = 0
 1478 0000 90B5     		push	{r4, r7, lr}
 1479              		.cfi_def_cfa_offset 12
 1480              		.cfi_offset 4, -12
 1481              		.cfi_offset 7, -8
 1482              		.cfi_offset 14, -4
 1483 0002 85B0     		sub	sp, sp, #20
 1484              		.cfi_def_cfa_offset 32
 1485 0004 00AF     		add	r7, sp, #0
 1486              		.cfi_def_cfa_register 7
 1487 0006 7860     		str	r0, [r7, #4]
1129:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/Timer_Claps.c **** 
1131:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 1488              		.loc 1 1131 0
 1489 0008 0F23     		movs	r3, #15
 1490 000a FC18     		adds	r4, r7, r3
 1491 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 47


 1492 0010 0300     		movs	r3, r0
 1493 0012 2370     		strb	r3, [r4]
1132:Generated_Source\PSoC4/Timer_Claps.c **** 
1133:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_TRIG_CONTROL1_REG &= (uint32)~Timer_Claps_RELOAD_MASK;
 1494              		.loc 1 1133 0
 1495 0014 0B4B     		ldr	r3, .L97
 1496 0016 0B4A     		ldr	r2, .L97
 1497 0018 1268     		ldr	r2, [r2]
 1498 001a 3021     		movs	r1, #48
 1499 001c 8A43     		bics	r2, r1
 1500 001e 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Claps_RELOAD_SHIFT));
 1501              		.loc 1 1134 0
 1502 0020 084B     		ldr	r3, .L97
 1503 0022 084A     		ldr	r2, .L97
 1504 0024 1168     		ldr	r1, [r2]
 1505 0026 7A68     		ldr	r2, [r7, #4]
 1506 0028 1201     		lsls	r2, r2, #4
 1507 002a 0A43     		orrs	r2, r1
 1508 002c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/Timer_Claps.c **** 
1136:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 1509              		.loc 1 1136 0
 1510 002e 0F23     		movs	r3, #15
 1511 0030 FB18     		adds	r3, r7, r3
 1512 0032 1B78     		ldrb	r3, [r3]
 1513 0034 1800     		movs	r0, r3
 1514 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:Generated_Source\PSoC4/Timer_Claps.c **** }
 1515              		.loc 1 1137 0
 1516 003a C046     		nop
 1517 003c BD46     		mov	sp, r7
 1518 003e 05B0     		add	sp, sp, #20
 1519              		@ sp needed
 1520 0040 90BD     		pop	{r4, r7, pc}
 1521              	.L98:
 1522 0042 C046     		.align	2
 1523              	.L97:
 1524 0044 24012040 		.word	1075839268
 1525              		.cfi_endproc
 1526              	.LFE31:
 1527              		.size	Timer_Claps_SetReloadMode, .-Timer_Claps_SetReloadMode
 1528              		.section	.text.Timer_Claps_SetStartMode,"ax",%progbits
 1529              		.align	2
 1530              		.global	Timer_Claps_SetStartMode
 1531              		.code	16
 1532              		.thumb_func
 1533              		.type	Timer_Claps_SetStartMode, %function
 1534              	Timer_Claps_SetStartMode:
 1535              	.LFB32:
1138:Generated_Source\PSoC4/Timer_Claps.c **** 
1139:Generated_Source\PSoC4/Timer_Claps.c **** 
1140:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetStartMode
1142:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1143:Generated_Source\PSoC4/Timer_Claps.c **** *
1144:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 48


1145:Generated_Source\PSoC4/Timer_Claps.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/Timer_Claps.c **** *  phiB input.
1147:Generated_Source\PSoC4/Timer_Claps.c **** *
1148:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1149:Generated_Source\PSoC4/Timer_Claps.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
1151:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/Timer_Claps.c **** *
1156:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
1157:Generated_Source\PSoC4/Timer_Claps.c **** *  None
1158:Generated_Source\PSoC4/Timer_Claps.c **** *
1159:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/Timer_Claps.c **** {
 1536              		.loc 1 1161 0
 1537              		.cfi_startproc
 1538              		@ args = 0, pretend = 0, frame = 16
 1539              		@ frame_needed = 1, uses_anonymous_args = 0
 1540 0000 90B5     		push	{r4, r7, lr}
 1541              		.cfi_def_cfa_offset 12
 1542              		.cfi_offset 4, -12
 1543              		.cfi_offset 7, -8
 1544              		.cfi_offset 14, -4
 1545 0002 85B0     		sub	sp, sp, #20
 1546              		.cfi_def_cfa_offset 32
 1547 0004 00AF     		add	r7, sp, #0
 1548              		.cfi_def_cfa_register 7
 1549 0006 7860     		str	r0, [r7, #4]
1162:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/Timer_Claps.c **** 
1164:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 1550              		.loc 1 1164 0
 1551 0008 0F23     		movs	r3, #15
 1552 000a FC18     		adds	r4, r7, r3
 1553 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1554 0010 0300     		movs	r3, r0
 1555 0012 2370     		strb	r3, [r4]
1165:Generated_Source\PSoC4/Timer_Claps.c **** 
1166:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_TRIG_CONTROL1_REG &= (uint32)~Timer_Claps_START_MASK;
 1556              		.loc 1 1166 0
 1557 0014 0B4B     		ldr	r3, .L100
 1558 0016 0B4A     		ldr	r2, .L100
 1559 0018 1268     		ldr	r2, [r2]
 1560 001a 0B49     		ldr	r1, .L100+4
 1561 001c 0A40     		ands	r2, r1
 1562 001e 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Claps_START_SHIFT));
 1563              		.loc 1 1167 0
 1564 0020 084B     		ldr	r3, .L100
 1565 0022 084A     		ldr	r2, .L100
 1566 0024 1168     		ldr	r1, [r2]
 1567 0026 7A68     		ldr	r2, [r7, #4]
 1568 0028 1202     		lsls	r2, r2, #8
 1569 002a 0A43     		orrs	r2, r1
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 49


 1570 002c 1A60     		str	r2, [r3]
1168:Generated_Source\PSoC4/Timer_Claps.c **** 
1169:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 1571              		.loc 1 1169 0
 1572 002e 0F23     		movs	r3, #15
 1573 0030 FB18     		adds	r3, r7, r3
 1574 0032 1B78     		ldrb	r3, [r3]
 1575 0034 1800     		movs	r0, r3
 1576 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:Generated_Source\PSoC4/Timer_Claps.c **** }
 1577              		.loc 1 1170 0
 1578 003a C046     		nop
 1579 003c BD46     		mov	sp, r7
 1580 003e 05B0     		add	sp, sp, #20
 1581              		@ sp needed
 1582 0040 90BD     		pop	{r4, r7, pc}
 1583              	.L101:
 1584 0042 C046     		.align	2
 1585              	.L100:
 1586 0044 24012040 		.word	1075839268
 1587 0048 FFFCFFFF 		.word	-769
 1588              		.cfi_endproc
 1589              	.LFE32:
 1590              		.size	Timer_Claps_SetStartMode, .-Timer_Claps_SetStartMode
 1591              		.section	.text.Timer_Claps_SetStopMode,"ax",%progbits
 1592              		.align	2
 1593              		.global	Timer_Claps_SetStopMode
 1594              		.code	16
 1595              		.thumb_func
 1596              		.type	Timer_Claps_SetStopMode, %function
 1597              	Timer_Claps_SetStopMode:
 1598              	.LFB33:
1171:Generated_Source\PSoC4/Timer_Claps.c **** 
1172:Generated_Source\PSoC4/Timer_Claps.c **** 
1173:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetStopMode
1175:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1176:Generated_Source\PSoC4/Timer_Claps.c **** *
1177:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
1178:Generated_Source\PSoC4/Timer_Claps.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/Timer_Claps.c **** *
1180:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1181:Generated_Source\PSoC4/Timer_Claps.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
1183:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/Timer_Claps.c **** *
1188:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
1189:Generated_Source\PSoC4/Timer_Claps.c **** *  None
1190:Generated_Source\PSoC4/Timer_Claps.c **** *
1191:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/Timer_Claps.c **** {
 1599              		.loc 1 1193 0
 1600              		.cfi_startproc
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 50


 1601              		@ args = 0, pretend = 0, frame = 16
 1602              		@ frame_needed = 1, uses_anonymous_args = 0
 1603 0000 90B5     		push	{r4, r7, lr}
 1604              		.cfi_def_cfa_offset 12
 1605              		.cfi_offset 4, -12
 1606              		.cfi_offset 7, -8
 1607              		.cfi_offset 14, -4
 1608 0002 85B0     		sub	sp, sp, #20
 1609              		.cfi_def_cfa_offset 32
 1610 0004 00AF     		add	r7, sp, #0
 1611              		.cfi_def_cfa_register 7
 1612 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/Timer_Claps.c **** 
1196:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 1613              		.loc 1 1196 0
 1614 0008 0F23     		movs	r3, #15
 1615 000a FC18     		adds	r4, r7, r3
 1616 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1617 0010 0300     		movs	r3, r0
 1618 0012 2370     		strb	r3, [r4]
1197:Generated_Source\PSoC4/Timer_Claps.c **** 
1198:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_TRIG_CONTROL1_REG &= (uint32)~Timer_Claps_STOP_MASK;
 1619              		.loc 1 1198 0
 1620 0014 0B4B     		ldr	r3, .L103
 1621 0016 0B4A     		ldr	r2, .L103
 1622 0018 1268     		ldr	r2, [r2]
 1623 001a C021     		movs	r1, #192
 1624 001c 8A43     		bics	r2, r1
 1625 001e 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Claps_STOP_SHIFT));
 1626              		.loc 1 1199 0
 1627 0020 084B     		ldr	r3, .L103
 1628 0022 084A     		ldr	r2, .L103
 1629 0024 1168     		ldr	r1, [r2]
 1630 0026 7A68     		ldr	r2, [r7, #4]
 1631 0028 9201     		lsls	r2, r2, #6
 1632 002a 0A43     		orrs	r2, r1
 1633 002c 1A60     		str	r2, [r3]
1200:Generated_Source\PSoC4/Timer_Claps.c **** 
1201:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 1634              		.loc 1 1201 0
 1635 002e 0F23     		movs	r3, #15
 1636 0030 FB18     		adds	r3, r7, r3
 1637 0032 1B78     		ldrb	r3, [r3]
 1638 0034 1800     		movs	r0, r3
 1639 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:Generated_Source\PSoC4/Timer_Claps.c **** }
 1640              		.loc 1 1202 0
 1641 003a C046     		nop
 1642 003c BD46     		mov	sp, r7
 1643 003e 05B0     		add	sp, sp, #20
 1644              		@ sp needed
 1645 0040 90BD     		pop	{r4, r7, pc}
 1646              	.L104:
 1647 0042 C046     		.align	2
 1648              	.L103:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 51


 1649 0044 24012040 		.word	1075839268
 1650              		.cfi_endproc
 1651              	.LFE33:
 1652              		.size	Timer_Claps_SetStopMode, .-Timer_Claps_SetStopMode
 1653              		.section	.text.Timer_Claps_SetCountMode,"ax",%progbits
 1654              		.align	2
 1655              		.global	Timer_Claps_SetCountMode
 1656              		.code	16
 1657              		.thumb_func
 1658              		.type	Timer_Claps_SetCountMode, %function
 1659              	Timer_Claps_SetCountMode:
 1660              	.LFB34:
1203:Generated_Source\PSoC4/Timer_Claps.c **** 
1204:Generated_Source\PSoC4/Timer_Claps.c **** 
1205:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetCountMode
1207:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1208:Generated_Source\PSoC4/Timer_Claps.c **** *
1209:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
1210:Generated_Source\PSoC4/Timer_Claps.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/Timer_Claps.c **** *  input.
1212:Generated_Source\PSoC4/Timer_Claps.c **** *
1213:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1214:Generated_Source\PSoC4/Timer_Claps.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
1216:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/Timer_Claps.c **** *
1221:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
1222:Generated_Source\PSoC4/Timer_Claps.c **** *  None
1223:Generated_Source\PSoC4/Timer_Claps.c **** *
1224:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/Timer_Claps.c **** {
 1661              		.loc 1 1226 0
 1662              		.cfi_startproc
 1663              		@ args = 0, pretend = 0, frame = 16
 1664              		@ frame_needed = 1, uses_anonymous_args = 0
 1665 0000 90B5     		push	{r4, r7, lr}
 1666              		.cfi_def_cfa_offset 12
 1667              		.cfi_offset 4, -12
 1668              		.cfi_offset 7, -8
 1669              		.cfi_offset 14, -4
 1670 0002 85B0     		sub	sp, sp, #20
 1671              		.cfi_def_cfa_offset 32
 1672 0004 00AF     		add	r7, sp, #0
 1673              		.cfi_def_cfa_register 7
 1674 0006 7860     		str	r0, [r7, #4]
1227:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/Timer_Claps.c **** 
1229:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 1675              		.loc 1 1229 0
 1676 0008 0F23     		movs	r3, #15
 1677 000a FC18     		adds	r4, r7, r3
 1678 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 52


 1679 0010 0300     		movs	r3, r0
 1680 0012 2370     		strb	r3, [r4]
1230:Generated_Source\PSoC4/Timer_Claps.c **** 
1231:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_TRIG_CONTROL1_REG &= (uint32)~Timer_Claps_COUNT_MASK;
 1681              		.loc 1 1231 0
 1682 0014 0B4B     		ldr	r3, .L106
 1683 0016 0B4A     		ldr	r2, .L106
 1684 0018 1268     		ldr	r2, [r2]
 1685 001a 0C21     		movs	r1, #12
 1686 001c 8A43     		bics	r2, r1
 1687 001e 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Claps_COUNT_SHIFT));
 1688              		.loc 1 1232 0
 1689 0020 084B     		ldr	r3, .L106
 1690 0022 084A     		ldr	r2, .L106
 1691 0024 1168     		ldr	r1, [r2]
 1692 0026 7A68     		ldr	r2, [r7, #4]
 1693 0028 9200     		lsls	r2, r2, #2
 1694 002a 0A43     		orrs	r2, r1
 1695 002c 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/Timer_Claps.c **** 
1234:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 1696              		.loc 1 1234 0
 1697 002e 0F23     		movs	r3, #15
 1698 0030 FB18     		adds	r3, r7, r3
 1699 0032 1B78     		ldrb	r3, [r3]
 1700 0034 1800     		movs	r0, r3
 1701 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:Generated_Source\PSoC4/Timer_Claps.c **** }
 1702              		.loc 1 1235 0
 1703 003a C046     		nop
 1704 003c BD46     		mov	sp, r7
 1705 003e 05B0     		add	sp, sp, #20
 1706              		@ sp needed
 1707 0040 90BD     		pop	{r4, r7, pc}
 1708              	.L107:
 1709 0042 C046     		.align	2
 1710              	.L106:
 1711 0044 24012040 		.word	1075839268
 1712              		.cfi_endproc
 1713              	.LFE34:
 1714              		.size	Timer_Claps_SetCountMode, .-Timer_Claps_SetCountMode
 1715              		.section	.text.Timer_Claps_TriggerCommand,"ax",%progbits
 1716              		.align	2
 1717              		.global	Timer_Claps_TriggerCommand
 1718              		.code	16
 1719              		.thumb_func
 1720              		.type	Timer_Claps_TriggerCommand, %function
 1721              	Timer_Claps_TriggerCommand:
 1722              	.LFB35:
1236:Generated_Source\PSoC4/Timer_Claps.c **** 
1237:Generated_Source\PSoC4/Timer_Claps.c **** 
1238:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_TriggerCommand
1240:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1241:Generated_Source\PSoC4/Timer_Claps.c **** *
1242:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 53


1243:Generated_Source\PSoC4/Timer_Claps.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/Timer_Claps.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/Timer_Claps.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/Timer_Claps.c **** *
1247:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1248:Generated_Source\PSoC4/Timer_Claps.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/Timer_Claps.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/Timer_Claps.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/Timer_Claps.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/Timer_Claps.c **** *        define.
1253:Generated_Source\PSoC4/Timer_Claps.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/Timer_Claps.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
1256:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/Timer_Claps.c **** *
1261:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
1262:Generated_Source\PSoC4/Timer_Claps.c **** *  None
1263:Generated_Source\PSoC4/Timer_Claps.c **** *
1264:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/Timer_Claps.c **** {
 1723              		.loc 1 1266 0
 1724              		.cfi_startproc
 1725              		@ args = 0, pretend = 0, frame = 16
 1726              		@ frame_needed = 1, uses_anonymous_args = 0
 1727 0000 90B5     		push	{r4, r7, lr}
 1728              		.cfi_def_cfa_offset 12
 1729              		.cfi_offset 4, -12
 1730              		.cfi_offset 7, -8
 1731              		.cfi_offset 14, -4
 1732 0002 85B0     		sub	sp, sp, #20
 1733              		.cfi_def_cfa_offset 32
 1734 0004 00AF     		add	r7, sp, #0
 1735              		.cfi_def_cfa_register 7
 1736 0006 7860     		str	r0, [r7, #4]
 1737 0008 3960     		str	r1, [r7]
1267:Generated_Source\PSoC4/Timer_Claps.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/Timer_Claps.c **** 
1269:Generated_Source\PSoC4/Timer_Claps.c ****     enableInterrupts = CyEnterCriticalSection();
 1738              		.loc 1 1269 0
 1739 000a 0F23     		movs	r3, #15
 1740 000c FC18     		adds	r4, r7, r3
 1741 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1742 0012 0300     		movs	r3, r0
 1743 0014 2370     		strb	r3, [r4]
1270:Generated_Source\PSoC4/Timer_Claps.c **** 
1271:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_COMMAND_REG = ((uint32)(mask << command));
 1744              		.loc 1 1271 0
 1745 0016 084B     		ldr	r3, .L109
 1746 0018 7968     		ldr	r1, [r7, #4]
 1747 001a 3A68     		ldr	r2, [r7]
 1748 001c 9140     		lsls	r1, r1, r2
 1749 001e 0A00     		movs	r2, r1
 1750 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 54


1272:Generated_Source\PSoC4/Timer_Claps.c **** 
1273:Generated_Source\PSoC4/Timer_Claps.c ****     CyExitCriticalSection(enableInterrupts);
 1751              		.loc 1 1273 0
 1752 0022 0F23     		movs	r3, #15
 1753 0024 FB18     		adds	r3, r7, r3
 1754 0026 1B78     		ldrb	r3, [r3]
 1755 0028 1800     		movs	r0, r3
 1756 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:Generated_Source\PSoC4/Timer_Claps.c **** }
 1757              		.loc 1 1274 0
 1758 002e C046     		nop
 1759 0030 BD46     		mov	sp, r7
 1760 0032 05B0     		add	sp, sp, #20
 1761              		@ sp needed
 1762 0034 90BD     		pop	{r4, r7, pc}
 1763              	.L110:
 1764 0036 C046     		.align	2
 1765              	.L109:
 1766 0038 08002040 		.word	1075838984
 1767              		.cfi_endproc
 1768              	.LFE35:
 1769              		.size	Timer_Claps_TriggerCommand, .-Timer_Claps_TriggerCommand
 1770              		.section	.text.Timer_Claps_ReadStatus,"ax",%progbits
 1771              		.align	2
 1772              		.global	Timer_Claps_ReadStatus
 1773              		.code	16
 1774              		.thumb_func
 1775              		.type	Timer_Claps_ReadStatus, %function
 1776              	Timer_Claps_ReadStatus:
 1777              	.LFB36:
1275:Generated_Source\PSoC4/Timer_Claps.c **** 
1276:Generated_Source\PSoC4/Timer_Claps.c **** 
1277:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_ReadStatus
1279:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1280:Generated_Source\PSoC4/Timer_Claps.c **** *
1281:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
1282:Generated_Source\PSoC4/Timer_Claps.c **** *  Reads the status of the Timer_Claps.
1283:Generated_Source\PSoC4/Timer_Claps.c **** *
1284:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1285:Generated_Source\PSoC4/Timer_Claps.c **** *  None
1286:Generated_Source\PSoC4/Timer_Claps.c **** *
1287:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
1288:Generated_Source\PSoC4/Timer_Claps.c **** *  Status
1289:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
1290:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/Timer_Claps.c **** *
1293:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/Timer_Claps.c **** uint32 Timer_Claps_ReadStatus(void)
1295:Generated_Source\PSoC4/Timer_Claps.c **** {
 1778              		.loc 1 1295 0
 1779              		.cfi_startproc
 1780              		@ args = 0, pretend = 0, frame = 0
 1781              		@ frame_needed = 1, uses_anonymous_args = 0
 1782 0000 80B5     		push	{r7, lr}
 1783              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 55


 1784              		.cfi_offset 7, -8
 1785              		.cfi_offset 14, -4
 1786 0002 00AF     		add	r7, sp, #0
 1787              		.cfi_def_cfa_register 7
1296:Generated_Source\PSoC4/Timer_Claps.c ****     return ((Timer_Claps_STATUS_REG >> Timer_Claps_RUNNING_STATUS_SHIFT) |
 1788              		.loc 1 1296 0
 1789 0004 054B     		ldr	r3, .L113
 1790 0006 1B68     		ldr	r3, [r3]
 1791 0008 9A0F     		lsrs	r2, r3, #30
1297:Generated_Source\PSoC4/Timer_Claps.c ****             (Timer_Claps_STATUS_REG & Timer_Claps_STATUS_DOWN));
 1792              		.loc 1 1297 0
 1793 000a 044B     		ldr	r3, .L113
 1794 000c 1B68     		ldr	r3, [r3]
 1795 000e 0121     		movs	r1, #1
 1796 0010 0B40     		ands	r3, r1
1296:Generated_Source\PSoC4/Timer_Claps.c ****     return ((Timer_Claps_STATUS_REG >> Timer_Claps_RUNNING_STATUS_SHIFT) |
 1797              		.loc 1 1296 0
 1798 0012 1343     		orrs	r3, r2
1298:Generated_Source\PSoC4/Timer_Claps.c **** }
 1799              		.loc 1 1298 0
 1800 0014 1800     		movs	r0, r3
 1801 0016 BD46     		mov	sp, r7
 1802              		@ sp needed
 1803 0018 80BD     		pop	{r7, pc}
 1804              	.L114:
 1805 001a C046     		.align	2
 1806              	.L113:
 1807 001c 04012040 		.word	1075839236
 1808              		.cfi_endproc
 1809              	.LFE36:
 1810              		.size	Timer_Claps_ReadStatus, .-Timer_Claps_ReadStatus
 1811              		.section	.text.Timer_Claps_SetInterruptMode,"ax",%progbits
 1812              		.align	2
 1813              		.global	Timer_Claps_SetInterruptMode
 1814              		.code	16
 1815              		.thumb_func
 1816              		.type	Timer_Claps_SetInterruptMode, %function
 1817              	Timer_Claps_SetInterruptMode:
 1818              	.LFB37:
1299:Generated_Source\PSoC4/Timer_Claps.c **** 
1300:Generated_Source\PSoC4/Timer_Claps.c **** 
1301:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetInterruptMode
1303:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1304:Generated_Source\PSoC4/Timer_Claps.c **** *
1305:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
1306:Generated_Source\PSoC4/Timer_Claps.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/Timer_Claps.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/Timer_Claps.c **** *
1309:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1310:Generated_Source\PSoC4/Timer_Claps.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
1312:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/Timer_Claps.c **** *
1315:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
1316:Generated_Source\PSoC4/Timer_Claps.c **** *  None
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 56


1317:Generated_Source\PSoC4/Timer_Claps.c **** *
1318:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/Timer_Claps.c **** {
 1819              		.loc 1 1320 0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 8
 1822              		@ frame_needed = 1, uses_anonymous_args = 0
 1823 0000 80B5     		push	{r7, lr}
 1824              		.cfi_def_cfa_offset 8
 1825              		.cfi_offset 7, -8
 1826              		.cfi_offset 14, -4
 1827 0002 82B0     		sub	sp, sp, #8
 1828              		.cfi_def_cfa_offset 16
 1829 0004 00AF     		add	r7, sp, #0
 1830              		.cfi_def_cfa_register 7
 1831 0006 7860     		str	r0, [r7, #4]
1321:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_INTERRUPT_MASK_REG =  interruptMask;
 1832              		.loc 1 1321 0
 1833 0008 034B     		ldr	r3, .L116
 1834 000a 7A68     		ldr	r2, [r7, #4]
 1835 000c 1A60     		str	r2, [r3]
1322:Generated_Source\PSoC4/Timer_Claps.c **** }
 1836              		.loc 1 1322 0
 1837 000e C046     		nop
 1838 0010 BD46     		mov	sp, r7
 1839 0012 02B0     		add	sp, sp, #8
 1840              		@ sp needed
 1841 0014 80BD     		pop	{r7, pc}
 1842              	.L117:
 1843 0016 C046     		.align	2
 1844              	.L116:
 1845 0018 38012040 		.word	1075839288
 1846              		.cfi_endproc
 1847              	.LFE37:
 1848              		.size	Timer_Claps_SetInterruptMode, .-Timer_Claps_SetInterruptMode
 1849              		.section	.text.Timer_Claps_GetInterruptSourceMasked,"ax",%progbits
 1850              		.align	2
 1851              		.global	Timer_Claps_GetInterruptSourceMasked
 1852              		.code	16
 1853              		.thumb_func
 1854              		.type	Timer_Claps_GetInterruptSourceMasked, %function
 1855              	Timer_Claps_GetInterruptSourceMasked:
 1856              	.LFB38:
1323:Generated_Source\PSoC4/Timer_Claps.c **** 
1324:Generated_Source\PSoC4/Timer_Claps.c **** 
1325:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1328:Generated_Source\PSoC4/Timer_Claps.c **** *
1329:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
1330:Generated_Source\PSoC4/Timer_Claps.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/Timer_Claps.c **** *
1332:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1333:Generated_Source\PSoC4/Timer_Claps.c **** *   None
1334:Generated_Source\PSoC4/Timer_Claps.c **** *
1335:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 57


1336:Generated_Source\PSoC4/Timer_Claps.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
1338:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/Timer_Claps.c **** *
1341:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/Timer_Claps.c **** uint32 Timer_Claps_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/Timer_Claps.c **** {
 1857              		.loc 1 1343 0
 1858              		.cfi_startproc
 1859              		@ args = 0, pretend = 0, frame = 0
 1860              		@ frame_needed = 1, uses_anonymous_args = 0
 1861 0000 80B5     		push	{r7, lr}
 1862              		.cfi_def_cfa_offset 8
 1863              		.cfi_offset 7, -8
 1864              		.cfi_offset 14, -4
 1865 0002 00AF     		add	r7, sp, #0
 1866              		.cfi_def_cfa_register 7
1344:Generated_Source\PSoC4/Timer_Claps.c ****     return (Timer_Claps_INTERRUPT_MASKED_REG);
 1867              		.loc 1 1344 0
 1868 0004 024B     		ldr	r3, .L120
 1869 0006 1B68     		ldr	r3, [r3]
1345:Generated_Source\PSoC4/Timer_Claps.c **** }
 1870              		.loc 1 1345 0
 1871 0008 1800     		movs	r0, r3
 1872 000a BD46     		mov	sp, r7
 1873              		@ sp needed
 1874 000c 80BD     		pop	{r7, pc}
 1875              	.L121:
 1876 000e C046     		.align	2
 1877              	.L120:
 1878 0010 3C012040 		.word	1075839292
 1879              		.cfi_endproc
 1880              	.LFE38:
 1881              		.size	Timer_Claps_GetInterruptSourceMasked, .-Timer_Claps_GetInterruptSourceMasked
 1882              		.section	.text.Timer_Claps_GetInterruptSource,"ax",%progbits
 1883              		.align	2
 1884              		.global	Timer_Claps_GetInterruptSource
 1885              		.code	16
 1886              		.thumb_func
 1887              		.type	Timer_Claps_GetInterruptSource, %function
 1888              	Timer_Claps_GetInterruptSource:
 1889              	.LFB39:
1346:Generated_Source\PSoC4/Timer_Claps.c **** 
1347:Generated_Source\PSoC4/Timer_Claps.c **** 
1348:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_GetInterruptSource
1350:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1351:Generated_Source\PSoC4/Timer_Claps.c **** *
1352:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
1353:Generated_Source\PSoC4/Timer_Claps.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/Timer_Claps.c **** *
1355:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1356:Generated_Source\PSoC4/Timer_Claps.c **** *  None
1357:Generated_Source\PSoC4/Timer_Claps.c **** *
1358:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
1359:Generated_Source\PSoC4/Timer_Claps.c **** *  Interrupt request value
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 58


1360:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
1361:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/Timer_Claps.c **** *
1364:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/Timer_Claps.c **** uint32 Timer_Claps_GetInterruptSource(void)
1366:Generated_Source\PSoC4/Timer_Claps.c **** {
 1890              		.loc 1 1366 0
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 0
 1893              		@ frame_needed = 1, uses_anonymous_args = 0
 1894 0000 80B5     		push	{r7, lr}
 1895              		.cfi_def_cfa_offset 8
 1896              		.cfi_offset 7, -8
 1897              		.cfi_offset 14, -4
 1898 0002 00AF     		add	r7, sp, #0
 1899              		.cfi_def_cfa_register 7
1367:Generated_Source\PSoC4/Timer_Claps.c ****     return (Timer_Claps_INTERRUPT_REQ_REG);
 1900              		.loc 1 1367 0
 1901 0004 024B     		ldr	r3, .L124
 1902 0006 1B68     		ldr	r3, [r3]
1368:Generated_Source\PSoC4/Timer_Claps.c **** }
 1903              		.loc 1 1368 0
 1904 0008 1800     		movs	r0, r3
 1905 000a BD46     		mov	sp, r7
 1906              		@ sp needed
 1907 000c 80BD     		pop	{r7, pc}
 1908              	.L125:
 1909 000e C046     		.align	2
 1910              	.L124:
 1911 0010 30012040 		.word	1075839280
 1912              		.cfi_endproc
 1913              	.LFE39:
 1914              		.size	Timer_Claps_GetInterruptSource, .-Timer_Claps_GetInterruptSource
 1915              		.section	.text.Timer_Claps_ClearInterrupt,"ax",%progbits
 1916              		.align	2
 1917              		.global	Timer_Claps_ClearInterrupt
 1918              		.code	16
 1919              		.thumb_func
 1920              		.type	Timer_Claps_ClearInterrupt, %function
 1921              	Timer_Claps_ClearInterrupt:
 1922              	.LFB40:
1369:Generated_Source\PSoC4/Timer_Claps.c **** 
1370:Generated_Source\PSoC4/Timer_Claps.c **** 
1371:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_ClearInterrupt
1373:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1374:Generated_Source\PSoC4/Timer_Claps.c **** *
1375:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
1376:Generated_Source\PSoC4/Timer_Claps.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/Timer_Claps.c **** *
1378:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1379:Generated_Source\PSoC4/Timer_Claps.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
1381:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/Timer_Claps.c **** *
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 59


1384:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
1385:Generated_Source\PSoC4/Timer_Claps.c **** *  None
1386:Generated_Source\PSoC4/Timer_Claps.c **** *
1387:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/Timer_Claps.c **** {
 1923              		.loc 1 1389 0
 1924              		.cfi_startproc
 1925              		@ args = 0, pretend = 0, frame = 8
 1926              		@ frame_needed = 1, uses_anonymous_args = 0
 1927 0000 80B5     		push	{r7, lr}
 1928              		.cfi_def_cfa_offset 8
 1929              		.cfi_offset 7, -8
 1930              		.cfi_offset 14, -4
 1931 0002 82B0     		sub	sp, sp, #8
 1932              		.cfi_def_cfa_offset 16
 1933 0004 00AF     		add	r7, sp, #0
 1934              		.cfi_def_cfa_register 7
 1935 0006 7860     		str	r0, [r7, #4]
1390:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_INTERRUPT_REQ_REG = interruptMask;
 1936              		.loc 1 1390 0
 1937 0008 034B     		ldr	r3, .L127
 1938 000a 7A68     		ldr	r2, [r7, #4]
 1939 000c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/Timer_Claps.c **** }
 1940              		.loc 1 1391 0
 1941 000e C046     		nop
 1942 0010 BD46     		mov	sp, r7
 1943 0012 02B0     		add	sp, sp, #8
 1944              		@ sp needed
 1945 0014 80BD     		pop	{r7, pc}
 1946              	.L128:
 1947 0016 C046     		.align	2
 1948              	.L127:
 1949 0018 30012040 		.word	1075839280
 1950              		.cfi_endproc
 1951              	.LFE40:
 1952              		.size	Timer_Claps_ClearInterrupt, .-Timer_Claps_ClearInterrupt
 1953              		.section	.text.Timer_Claps_SetInterrupt,"ax",%progbits
 1954              		.align	2
 1955              		.global	Timer_Claps_SetInterrupt
 1956              		.code	16
 1957              		.thumb_func
 1958              		.type	Timer_Claps_SetInterrupt, %function
 1959              	Timer_Claps_SetInterrupt:
 1960              	.LFB41:
1392:Generated_Source\PSoC4/Timer_Claps.c **** 
1393:Generated_Source\PSoC4/Timer_Claps.c **** 
1394:Generated_Source\PSoC4/Timer_Claps.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/Timer_Claps.c **** * Function Name: Timer_Claps_SetInterrupt
1396:Generated_Source\PSoC4/Timer_Claps.c **** ********************************************************************************
1397:Generated_Source\PSoC4/Timer_Claps.c **** *
1398:Generated_Source\PSoC4/Timer_Claps.c **** * Summary:
1399:Generated_Source\PSoC4/Timer_Claps.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/Timer_Claps.c **** *
1401:Generated_Source\PSoC4/Timer_Claps.c **** * Parameters:
1402:Generated_Source\PSoC4/Timer_Claps.c **** *   interruptMask: Mask of interrupts to set
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 60


1403:Generated_Source\PSoC4/Timer_Claps.c **** *   Values:
1404:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/Timer_Claps.c **** *     - Timer_Claps_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/Timer_Claps.c **** *
1407:Generated_Source\PSoC4/Timer_Claps.c **** * Return:
1408:Generated_Source\PSoC4/Timer_Claps.c **** *  None
1409:Generated_Source\PSoC4/Timer_Claps.c **** *
1410:Generated_Source\PSoC4/Timer_Claps.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/Timer_Claps.c **** void Timer_Claps_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/Timer_Claps.c **** {
 1961              		.loc 1 1412 0
 1962              		.cfi_startproc
 1963              		@ args = 0, pretend = 0, frame = 8
 1964              		@ frame_needed = 1, uses_anonymous_args = 0
 1965 0000 80B5     		push	{r7, lr}
 1966              		.cfi_def_cfa_offset 8
 1967              		.cfi_offset 7, -8
 1968              		.cfi_offset 14, -4
 1969 0002 82B0     		sub	sp, sp, #8
 1970              		.cfi_def_cfa_offset 16
 1971 0004 00AF     		add	r7, sp, #0
 1972              		.cfi_def_cfa_register 7
 1973 0006 7860     		str	r0, [r7, #4]
1413:Generated_Source\PSoC4/Timer_Claps.c ****     Timer_Claps_INTERRUPT_SET_REG = interruptMask;
 1974              		.loc 1 1413 0
 1975 0008 034B     		ldr	r3, .L130
 1976 000a 7A68     		ldr	r2, [r7, #4]
 1977 000c 1A60     		str	r2, [r3]
1414:Generated_Source\PSoC4/Timer_Claps.c **** }
 1978              		.loc 1 1414 0
 1979 000e C046     		nop
 1980 0010 BD46     		mov	sp, r7
 1981 0012 02B0     		add	sp, sp, #8
 1982              		@ sp needed
 1983 0014 80BD     		pop	{r7, pc}
 1984              	.L131:
 1985 0016 C046     		.align	2
 1986              	.L130:
 1987 0018 34012040 		.word	1075839284
 1988              		.cfi_endproc
 1989              	.LFE41:
 1990              		.size	Timer_Claps_SetInterrupt, .-Timer_Claps_SetInterrupt
 1991              		.text
 1992              	.Letext0:
 1993              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1994              		.section	.debug_info,"",%progbits
 1995              	.Ldebug_info0:
 1996 0000 F7060000 		.4byte	0x6f7
 1997 0004 0400     		.2byte	0x4
 1998 0006 00000000 		.4byte	.Ldebug_abbrev0
 1999 000a 04       		.byte	0x4
 2000 000b 01       		.uleb128 0x1
 2001 000c D2020000 		.4byte	.LASF77
 2002 0010 0C       		.byte	0xc
 2003 0011 E9000000 		.4byte	.LASF78
 2004 0015 AA040000 		.4byte	.LASF79
 2005 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 61


 2006 001d 00000000 		.4byte	0
 2007 0021 00000000 		.4byte	.Ldebug_line0
 2008 0025 02       		.uleb128 0x2
 2009 0026 01       		.byte	0x1
 2010 0027 06       		.byte	0x6
 2011 0028 B0000000 		.4byte	.LASF0
 2012 002c 02       		.uleb128 0x2
 2013 002d 01       		.byte	0x1
 2014 002e 08       		.byte	0x8
 2015 002f 28040000 		.4byte	.LASF1
 2016 0033 02       		.uleb128 0x2
 2017 0034 02       		.byte	0x2
 2018 0035 05       		.byte	0x5
 2019 0036 5E040000 		.4byte	.LASF2
 2020 003a 02       		.uleb128 0x2
 2021 003b 02       		.byte	0x2
 2022 003c 07       		.byte	0x7
 2023 003d 64020000 		.4byte	.LASF3
 2024 0041 02       		.uleb128 0x2
 2025 0042 04       		.byte	0x4
 2026 0043 05       		.byte	0x5
 2027 0044 29010000 		.4byte	.LASF4
 2028 0048 02       		.uleb128 0x2
 2029 0049 04       		.byte	0x4
 2030 004a 07       		.byte	0x7
 2031 004b 2A020000 		.4byte	.LASF5
 2032 004f 02       		.uleb128 0x2
 2033 0050 08       		.byte	0x8
 2034 0051 05       		.byte	0x5
 2035 0052 A2000000 		.4byte	.LASF6
 2036 0056 02       		.uleb128 0x2
 2037 0057 08       		.byte	0x8
 2038 0058 07       		.byte	0x7
 2039 0059 84000000 		.4byte	.LASF7
 2040 005d 03       		.uleb128 0x3
 2041 005e 04       		.byte	0x4
 2042 005f 05       		.byte	0x5
 2043 0060 696E7400 		.ascii	"int\000"
 2044 0064 02       		.uleb128 0x2
 2045 0065 04       		.byte	0x4
 2046 0066 07       		.byte	0x7
 2047 0067 F0010000 		.4byte	.LASF8
 2048 006b 04       		.uleb128 0x4
 2049 006c 32010000 		.4byte	.LASF9
 2050 0070 02       		.byte	0x2
 2051 0071 E601     		.2byte	0x1e6
 2052 0073 2C000000 		.4byte	0x2c
 2053 0077 04       		.uleb128 0x4
 2054 0078 9C010000 		.4byte	.LASF10
 2055 007c 02       		.byte	0x2
 2056 007d E801     		.2byte	0x1e8
 2057 007f 48000000 		.4byte	0x48
 2058 0083 02       		.uleb128 0x2
 2059 0084 04       		.byte	0x4
 2060 0085 04       		.byte	0x4
 2061 0086 18040000 		.4byte	.LASF11
 2062 008a 02       		.uleb128 0x2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 62


 2063 008b 08       		.byte	0x8
 2064 008c 04       		.byte	0x4
 2065 008d 51010000 		.4byte	.LASF12
 2066 0091 02       		.uleb128 0x2
 2067 0092 01       		.byte	0x1
 2068 0093 08       		.byte	0x8
 2069 0094 FE040000 		.4byte	.LASF13
 2070 0098 04       		.uleb128 0x4
 2071 0099 60030000 		.4byte	.LASF14
 2072 009d 02       		.byte	0x2
 2073 009e 9202     		.2byte	0x292
 2074 00a0 A4000000 		.4byte	0xa4
 2075 00a4 05       		.uleb128 0x5
 2076 00a5 77000000 		.4byte	0x77
 2077 00a9 02       		.uleb128 0x2
 2078 00aa 08       		.byte	0x8
 2079 00ab 04       		.byte	0x4
 2080 00ac 6F030000 		.4byte	.LASF15
 2081 00b0 02       		.uleb128 0x2
 2082 00b1 04       		.byte	0x4
 2083 00b2 07       		.byte	0x7
 2084 00b3 66030000 		.4byte	.LASF16
 2085 00b7 06       		.uleb128 0x6
 2086 00b8 73010000 		.4byte	.LASF17
 2087 00bc 01       		.byte	0x1
 2088 00bd 26       		.byte	0x26
 2089 00be 00000000 		.4byte	.LFB2
 2090 00c2 3C000000 		.4byte	.LFE2-.LFB2
 2091 00c6 01       		.uleb128 0x1
 2092 00c7 9C       		.byte	0x9c
 2093 00c8 07       		.uleb128 0x7
 2094 00c9 46050000 		.4byte	.LASF19
 2095 00cd 01       		.byte	0x1
 2096 00ce B1       		.byte	0xb1
 2097 00cf 00000000 		.4byte	.LFB3
 2098 00d3 34000000 		.4byte	.LFE3-.LFB3
 2099 00d7 01       		.uleb128 0x1
 2100 00d8 9C       		.byte	0x9c
 2101 00d9 EC000000 		.4byte	0xec
 2102 00dd 08       		.uleb128 0x8
 2103 00de 9C050000 		.4byte	.LASF21
 2104 00e2 01       		.byte	0x1
 2105 00e3 B3       		.byte	0xb3
 2106 00e4 6B000000 		.4byte	0x6b
 2107 00e8 02       		.uleb128 0x2
 2108 00e9 91       		.byte	0x91
 2109 00ea 6F       		.sleb128 -17
 2110 00eb 00       		.byte	0
 2111 00ec 06       		.uleb128 0x6
 2112 00ed BC000000 		.4byte	.LASF18
 2113 00f1 01       		.byte	0x1
 2114 00f2 E6       		.byte	0xe6
 2115 00f3 00000000 		.4byte	.LFB4
 2116 00f7 24000000 		.4byte	.LFE4-.LFB4
 2117 00fb 01       		.uleb128 0x1
 2118 00fc 9C       		.byte	0x9c
 2119 00fd 09       		.uleb128 0x9
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 63


 2120 00fe 8B050000 		.4byte	.LASF20
 2121 0102 01       		.byte	0x1
 2122 0103 0001     		.2byte	0x100
 2123 0105 00000000 		.4byte	.LFB5
 2124 0109 34000000 		.4byte	.LFE5-.LFB5
 2125 010d 01       		.uleb128 0x1
 2126 010e 9C       		.byte	0x9c
 2127 010f 23010000 		.4byte	0x123
 2128 0113 0A       		.uleb128 0xa
 2129 0114 9C050000 		.4byte	.LASF21
 2130 0118 01       		.byte	0x1
 2131 0119 0201     		.2byte	0x102
 2132 011b 6B000000 		.4byte	0x6b
 2133 011f 02       		.uleb128 0x2
 2134 0120 91       		.byte	0x91
 2135 0121 6F       		.sleb128 -17
 2136 0122 00       		.byte	0
 2137 0123 09       		.uleb128 0x9
 2138 0124 00000000 		.4byte	.LASF22
 2139 0128 01       		.byte	0x1
 2140 0129 2501     		.2byte	0x125
 2141 012b 00000000 		.4byte	.LFB6
 2142 012f 48000000 		.4byte	.LFE6-.LFB6
 2143 0133 01       		.uleb128 0x1
 2144 0134 9C       		.byte	0x9c
 2145 0135 58010000 		.4byte	0x158
 2146 0139 0B       		.uleb128 0xb
 2147 013a 03050000 		.4byte	.LASF24
 2148 013e 01       		.byte	0x1
 2149 013f 2501     		.2byte	0x125
 2150 0141 77000000 		.4byte	0x77
 2151 0145 02       		.uleb128 0x2
 2152 0146 91       		.byte	0x91
 2153 0147 64       		.sleb128 -28
 2154 0148 0A       		.uleb128 0xa
 2155 0149 9C050000 		.4byte	.LASF21
 2156 014d 01       		.byte	0x1
 2157 014e 2701     		.2byte	0x127
 2158 0150 6B000000 		.4byte	0x6b
 2159 0154 02       		.uleb128 0x2
 2160 0155 91       		.byte	0x91
 2161 0156 6F       		.sleb128 -17
 2162 0157 00       		.byte	0
 2163 0158 09       		.uleb128 0x9
 2164 0159 7C060000 		.4byte	.LASF23
 2165 015d 01       		.byte	0x1
 2166 015e 4601     		.2byte	0x146
 2167 0160 00000000 		.4byte	.LFB7
 2168 0164 48000000 		.4byte	.LFE7-.LFB7
 2169 0168 01       		.uleb128 0x1
 2170 0169 9C       		.byte	0x9c
 2171 016a 8D010000 		.4byte	0x18d
 2172 016e 0B       		.uleb128 0xb
 2173 016f 9B000000 		.4byte	.LASF25
 2174 0173 01       		.byte	0x1
 2175 0174 4601     		.2byte	0x146
 2176 0176 77000000 		.4byte	0x77
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 64


 2177 017a 02       		.uleb128 0x2
 2178 017b 91       		.byte	0x91
 2179 017c 64       		.sleb128 -28
 2180 017d 0A       		.uleb128 0xa
 2181 017e 9C050000 		.4byte	.LASF21
 2182 0182 01       		.byte	0x1
 2183 0183 4801     		.2byte	0x148
 2184 0185 6B000000 		.4byte	0x6b
 2185 0189 02       		.uleb128 0x2
 2186 018a 91       		.byte	0x91
 2187 018b 6F       		.sleb128 -17
 2188 018c 00       		.byte	0
 2189 018d 09       		.uleb128 0x9
 2190 018e 38010000 		.4byte	.LASF26
 2191 0192 01       		.byte	0x1
 2192 0193 6B01     		.2byte	0x16b
 2193 0195 00000000 		.4byte	.LFB8
 2194 0199 48000000 		.4byte	.LFE8-.LFB8
 2195 019d 01       		.uleb128 0x1
 2196 019e 9C       		.byte	0x9c
 2197 019f C2010000 		.4byte	0x1c2
 2198 01a3 0B       		.uleb128 0xb
 2199 01a4 1E040000 		.4byte	.LASF27
 2200 01a8 01       		.byte	0x1
 2201 01a9 6B01     		.2byte	0x16b
 2202 01ab 77000000 		.4byte	0x77
 2203 01af 02       		.uleb128 0x2
 2204 01b0 91       		.byte	0x91
 2205 01b1 64       		.sleb128 -28
 2206 01b2 0A       		.uleb128 0xa
 2207 01b3 9C050000 		.4byte	.LASF21
 2208 01b7 01       		.byte	0x1
 2209 01b8 6D01     		.2byte	0x16d
 2210 01ba 6B000000 		.4byte	0x6b
 2211 01be 02       		.uleb128 0x2
 2212 01bf 91       		.byte	0x91
 2213 01c0 6F       		.sleb128 -17
 2214 01c1 00       		.byte	0
 2215 01c2 09       		.uleb128 0x9
 2216 01c3 E3050000 		.4byte	.LASF28
 2217 01c7 01       		.byte	0x1
 2218 01c8 8B01     		.2byte	0x18b
 2219 01ca 00000000 		.4byte	.LFB9
 2220 01ce 50000000 		.4byte	.LFE9-.LFB9
 2221 01d2 01       		.uleb128 0x1
 2222 01d3 9C       		.byte	0x9c
 2223 01d4 F7010000 		.4byte	0x1f7
 2224 01d8 0B       		.uleb128 0xb
 2225 01d9 C4020000 		.4byte	.LASF29
 2226 01dd 01       		.byte	0x1
 2227 01de 8B01     		.2byte	0x18b
 2228 01e0 77000000 		.4byte	0x77
 2229 01e4 02       		.uleb128 0x2
 2230 01e5 91       		.byte	0x91
 2231 01e6 64       		.sleb128 -28
 2232 01e7 0A       		.uleb128 0xa
 2233 01e8 9C050000 		.4byte	.LASF21
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 65


 2234 01ec 01       		.byte	0x1
 2235 01ed 8D01     		.2byte	0x18d
 2236 01ef 6B000000 		.4byte	0x6b
 2237 01f3 02       		.uleb128 0x2
 2238 01f4 91       		.byte	0x91
 2239 01f5 6F       		.sleb128 -17
 2240 01f6 00       		.byte	0
 2241 01f7 0C       		.uleb128 0xc
 2242 01f8 1A000000 		.4byte	.LASF30
 2243 01fc 01       		.byte	0x1
 2244 01fd C101     		.2byte	0x1c1
 2245 01ff 00000000 		.4byte	.LFB10
 2246 0203 20000000 		.4byte	.LFE10-.LFB10
 2247 0207 01       		.uleb128 0x1
 2248 0208 9C       		.byte	0x9c
 2249 0209 1D020000 		.4byte	0x21d
 2250 020d 0B       		.uleb128 0xb
 2251 020e 3C020000 		.4byte	.LASF31
 2252 0212 01       		.byte	0x1
 2253 0213 C101     		.2byte	0x1c1
 2254 0215 77000000 		.4byte	0x77
 2255 0219 02       		.uleb128 0x2
 2256 021a 91       		.byte	0x91
 2257 021b 74       		.sleb128 -12
 2258 021c 00       		.byte	0
 2259 021d 09       		.uleb128 0x9
 2260 021e 58010000 		.4byte	.LASF32
 2261 0222 01       		.byte	0x1
 2262 0223 E501     		.2byte	0x1e5
 2263 0225 00000000 		.4byte	.LFB11
 2264 0229 4C000000 		.4byte	.LFE11-.LFB11
 2265 022d 01       		.uleb128 0x1
 2266 022e 9C       		.byte	0x9c
 2267 022f 52020000 		.4byte	0x252
 2268 0233 0B       		.uleb128 0xb
 2269 0234 FA050000 		.4byte	.LASF33
 2270 0238 01       		.byte	0x1
 2271 0239 E501     		.2byte	0x1e5
 2272 023b 77000000 		.4byte	0x77
 2273 023f 02       		.uleb128 0x2
 2274 0240 91       		.byte	0x91
 2275 0241 64       		.sleb128 -28
 2276 0242 0A       		.uleb128 0xa
 2277 0243 9C050000 		.4byte	.LASF21
 2278 0247 01       		.byte	0x1
 2279 0248 E701     		.2byte	0x1e7
 2280 024a 6B000000 		.4byte	0x6b
 2281 024e 02       		.uleb128 0x2
 2282 024f 91       		.byte	0x91
 2283 0250 6F       		.sleb128 -17
 2284 0251 00       		.byte	0
 2285 0252 09       		.uleb128 0x9
 2286 0253 FB030000 		.4byte	.LASF34
 2287 0257 01       		.byte	0x1
 2288 0258 0702     		.2byte	0x207
 2289 025a 00000000 		.4byte	.LFB12
 2290 025e 4C000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 66


 2291 0262 01       		.uleb128 0x1
 2292 0263 9C       		.byte	0x9c
 2293 0264 87020000 		.4byte	0x287
 2294 0268 0B       		.uleb128 0xb
 2295 0269 4D040000 		.4byte	.LASF35
 2296 026d 01       		.byte	0x1
 2297 026e 0702     		.2byte	0x207
 2298 0270 77000000 		.4byte	0x77
 2299 0274 02       		.uleb128 0x2
 2300 0275 91       		.byte	0x91
 2301 0276 64       		.sleb128 -28
 2302 0277 0A       		.uleb128 0xa
 2303 0278 9C050000 		.4byte	.LASF21
 2304 027c 01       		.byte	0x1
 2305 027d 0902     		.2byte	0x209
 2306 027f 6B000000 		.4byte	0x6b
 2307 0283 02       		.uleb128 0x2
 2308 0284 91       		.byte	0x91
 2309 0285 6F       		.sleb128 -17
 2310 0286 00       		.byte	0
 2311 0287 09       		.uleb128 0x9
 2312 0288 31000000 		.4byte	.LASF36
 2313 028c 01       		.byte	0x1
 2314 028d 2802     		.2byte	0x228
 2315 028f 00000000 		.4byte	.LFB13
 2316 0293 50000000 		.4byte	.LFE13-.LFB13
 2317 0297 01       		.uleb128 0x1
 2318 0298 9C       		.byte	0x9c
 2319 0299 BC020000 		.4byte	0x2bc
 2320 029d 0B       		.uleb128 0xb
 2321 029e CD010000 		.4byte	.LASF37
 2322 02a2 01       		.byte	0x1
 2323 02a3 2802     		.2byte	0x228
 2324 02a5 77000000 		.4byte	0x77
 2325 02a9 02       		.uleb128 0x2
 2326 02aa 91       		.byte	0x91
 2327 02ab 64       		.sleb128 -28
 2328 02ac 0A       		.uleb128 0xa
 2329 02ad 9C050000 		.4byte	.LASF21
 2330 02b1 01       		.byte	0x1
 2331 02b2 2A02     		.2byte	0x22a
 2332 02b4 6B000000 		.4byte	0x6b
 2333 02b8 02       		.uleb128 0x2
 2334 02b9 91       		.byte	0x91
 2335 02ba 6F       		.sleb128 -17
 2336 02bb 00       		.byte	0
 2337 02bc 09       		.uleb128 0x9
 2338 02bd 4C000000 		.4byte	.LASF38
 2339 02c1 01       		.byte	0x1
 2340 02c2 4902     		.2byte	0x249
 2341 02c4 00000000 		.4byte	.LFB14
 2342 02c8 48000000 		.4byte	.LFE14-.LFB14
 2343 02cc 01       		.uleb128 0x1
 2344 02cd 9C       		.byte	0x9c
 2345 02ce F1020000 		.4byte	0x2f1
 2346 02d2 0B       		.uleb128 0xb
 2347 02d3 AF010000 		.4byte	.LASF39
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 67


 2348 02d7 01       		.byte	0x1
 2349 02d8 4902     		.2byte	0x249
 2350 02da 77000000 		.4byte	0x77
 2351 02de 02       		.uleb128 0x2
 2352 02df 91       		.byte	0x91
 2353 02e0 64       		.sleb128 -28
 2354 02e1 0A       		.uleb128 0xa
 2355 02e2 9C050000 		.4byte	.LASF21
 2356 02e6 01       		.byte	0x1
 2357 02e7 4B02     		.2byte	0x24b
 2358 02e9 6B000000 		.4byte	0x6b
 2359 02ed 02       		.uleb128 0x2
 2360 02ee 91       		.byte	0x91
 2361 02ef 6F       		.sleb128 -17
 2362 02f0 00       		.byte	0
 2363 02f1 0C       		.uleb128 0xc
 2364 02f2 09060000 		.4byte	.LASF40
 2365 02f6 01       		.byte	0x1
 2366 02f7 6702     		.2byte	0x267
 2367 02f9 00000000 		.4byte	.LFB15
 2368 02fd 20000000 		.4byte	.LFE15-.LFB15
 2369 0301 01       		.uleb128 0x1
 2370 0302 9C       		.byte	0x9c
 2371 0303 17030000 		.4byte	0x317
 2372 0307 0B       		.uleb128 0xb
 2373 0308 14000000 		.4byte	.LASF41
 2374 030c 01       		.byte	0x1
 2375 030d 6702     		.2byte	0x267
 2376 030f 77000000 		.4byte	0x77
 2377 0313 02       		.uleb128 0x2
 2378 0314 91       		.byte	0x91
 2379 0315 74       		.sleb128 -12
 2380 0316 00       		.byte	0
 2381 0317 0D       		.uleb128 0xd
 2382 0318 65000000 		.4byte	.LASF46
 2383 031c 01       		.byte	0x1
 2384 031d 7B02     		.2byte	0x27b
 2385 031f 77000000 		.4byte	0x77
 2386 0323 00000000 		.4byte	.LFB16
 2387 0327 18000000 		.4byte	.LFE16-.LFB16
 2388 032b 01       		.uleb128 0x1
 2389 032c 9C       		.byte	0x9c
 2390 032d 09       		.uleb128 0x9
 2391 032e A9020000 		.4byte	.LASF42
 2392 0332 01       		.byte	0x1
 2393 0333 9802     		.2byte	0x298
 2394 0335 00000000 		.4byte	.LFB17
 2395 0339 48000000 		.4byte	.LFE17-.LFB17
 2396 033d 01       		.uleb128 0x1
 2397 033e 9C       		.byte	0x9c
 2398 033f 62030000 		.4byte	0x362
 2399 0343 0B       		.uleb128 0xb
 2400 0344 3A050000 		.4byte	.LASF43
 2401 0348 01       		.byte	0x1
 2402 0349 9802     		.2byte	0x298
 2403 034b 77000000 		.4byte	0x77
 2404 034f 02       		.uleb128 0x2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 68


 2405 0350 91       		.byte	0x91
 2406 0351 64       		.sleb128 -28
 2407 0352 0A       		.uleb128 0xa
 2408 0353 9C050000 		.4byte	.LASF21
 2409 0357 01       		.byte	0x1
 2410 0358 9A02     		.2byte	0x29a
 2411 035a 6B000000 		.4byte	0x6b
 2412 035e 02       		.uleb128 0x2
 2413 035f 91       		.byte	0x91
 2414 0360 6F       		.sleb128 -17
 2415 0361 00       		.byte	0
 2416 0362 0C       		.uleb128 0xc
 2417 0363 91020000 		.4byte	.LASF44
 2418 0367 01       		.byte	0x1
 2419 0368 B502     		.2byte	0x2b5
 2420 036a 00000000 		.4byte	.LFB18
 2421 036e 20000000 		.4byte	.LFE18-.LFB18
 2422 0372 01       		.uleb128 0x1
 2423 0373 9C       		.byte	0x9c
 2424 0374 88030000 		.4byte	0x388
 2425 0378 0B       		.uleb128 0xb
 2426 0379 7D000000 		.4byte	.LASF45
 2427 037d 01       		.byte	0x1
 2428 037e B502     		.2byte	0x2b5
 2429 0380 77000000 		.4byte	0x77
 2430 0384 02       		.uleb128 0x2
 2431 0385 91       		.byte	0x91
 2432 0386 74       		.sleb128 -12
 2433 0387 00       		.byte	0
 2434 0388 0D       		.uleb128 0xd
 2435 0389 7B030000 		.4byte	.LASF47
 2436 038d 01       		.byte	0x1
 2437 038e C902     		.2byte	0x2c9
 2438 0390 77000000 		.4byte	0x77
 2439 0394 00000000 		.4byte	.LFB19
 2440 0398 18000000 		.4byte	.LFE19-.LFB19
 2441 039c 01       		.uleb128 0x1
 2442 039d 9C       		.byte	0x9c
 2443 039e 09       		.uleb128 0x9
 2444 039f 68040000 		.4byte	.LASF48
 2445 03a3 01       		.byte	0x1
 2446 03a4 E302     		.2byte	0x2e3
 2447 03a6 00000000 		.4byte	.LFB20
 2448 03aa 48000000 		.4byte	.LFE20-.LFB20
 2449 03ae 01       		.uleb128 0x1
 2450 03af 9C       		.byte	0x9c
 2451 03b0 D3030000 		.4byte	0x3d3
 2452 03b4 0B       		.uleb128 0xb
 2453 03b5 22060000 		.4byte	.LASF49
 2454 03b9 01       		.byte	0x1
 2455 03ba E302     		.2byte	0x2e3
 2456 03bc 77000000 		.4byte	0x77
 2457 03c0 02       		.uleb128 0x2
 2458 03c1 91       		.byte	0x91
 2459 03c2 64       		.sleb128 -28
 2460 03c3 0A       		.uleb128 0xa
 2461 03c4 9C050000 		.4byte	.LASF21
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 69


 2462 03c8 01       		.byte	0x1
 2463 03c9 E502     		.2byte	0x2e5
 2464 03cb 6B000000 		.4byte	0x6b
 2465 03cf 02       		.uleb128 0x2
 2466 03d0 91       		.byte	0x91
 2467 03d1 6F       		.sleb128 -17
 2468 03d2 00       		.byte	0
 2469 03d3 0C       		.uleb128 0xc
 2470 03d4 0E010000 		.4byte	.LASF50
 2471 03d8 01       		.byte	0x1
 2472 03d9 FE02     		.2byte	0x2fe
 2473 03db 00000000 		.4byte	.LFB21
 2474 03df 20000000 		.4byte	.LFE21-.LFB21
 2475 03e3 01       		.uleb128 0x1
 2476 03e4 9C       		.byte	0x9c
 2477 03e5 F9030000 		.4byte	0x3f9
 2478 03e9 0B       		.uleb128 0xb
 2479 03ea 81050000 		.4byte	.LASF51
 2480 03ee 01       		.byte	0x1
 2481 03ef FE02     		.2byte	0x2fe
 2482 03f1 77000000 		.4byte	0x77
 2483 03f5 02       		.uleb128 0x2
 2484 03f6 91       		.byte	0x91
 2485 03f7 74       		.sleb128 -12
 2486 03f8 00       		.byte	0
 2487 03f9 0D       		.uleb128 0xd
 2488 03fa D6010000 		.4byte	.LASF52
 2489 03fe 01       		.byte	0x1
 2490 03ff 1203     		.2byte	0x312
 2491 0401 77000000 		.4byte	0x77
 2492 0405 00000000 		.4byte	.LFB22
 2493 0409 18000000 		.4byte	.LFE22-.LFB22
 2494 040d 01       		.uleb128 0x1
 2495 040e 9C       		.byte	0x9c
 2496 040f 09       		.uleb128 0x9
 2497 0410 77020000 		.4byte	.LASF53
 2498 0414 01       		.byte	0x1
 2499 0415 2C03     		.2byte	0x32c
 2500 0417 00000000 		.4byte	.LFB23
 2501 041b 4C000000 		.4byte	.LFE23-.LFB23
 2502 041f 01       		.uleb128 0x1
 2503 0420 9C       		.byte	0x9c
 2504 0421 44040000 		.4byte	0x444
 2505 0425 0B       		.uleb128 0xb
 2506 0426 22060000 		.4byte	.LASF49
 2507 042a 01       		.byte	0x1
 2508 042b 2C03     		.2byte	0x32c
 2509 042d 77000000 		.4byte	0x77
 2510 0431 02       		.uleb128 0x2
 2511 0432 91       		.byte	0x91
 2512 0433 64       		.sleb128 -28
 2513 0434 0A       		.uleb128 0xa
 2514 0435 9C050000 		.4byte	.LASF21
 2515 0439 01       		.byte	0x1
 2516 043a 2E03     		.2byte	0x32e
 2517 043c 6B000000 		.4byte	0x6b
 2518 0440 02       		.uleb128 0x2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 70


 2519 0441 91       		.byte	0x91
 2520 0442 6F       		.sleb128 -17
 2521 0443 00       		.byte	0
 2522 0444 0C       		.uleb128 0xc
 2523 0445 21050000 		.4byte	.LASF54
 2524 0449 01       		.byte	0x1
 2525 044a 5103     		.2byte	0x351
 2526 044c 00000000 		.4byte	.LFB24
 2527 0450 20000000 		.4byte	.LFE24-.LFB24
 2528 0454 01       		.uleb128 0x1
 2529 0455 9C       		.byte	0x9c
 2530 0456 6A040000 		.4byte	0x46a
 2531 045a 0B       		.uleb128 0xb
 2532 045b AD030000 		.4byte	.LASF55
 2533 045f 01       		.byte	0x1
 2534 0460 5103     		.2byte	0x351
 2535 0462 77000000 		.4byte	0x77
 2536 0466 02       		.uleb128 0x2
 2537 0467 91       		.byte	0x91
 2538 0468 74       		.sleb128 -12
 2539 0469 00       		.byte	0
 2540 046a 0D       		.uleb128 0xd
 2541 046b 2D060000 		.4byte	.LASF56
 2542 046f 01       		.byte	0x1
 2543 0470 8403     		.2byte	0x384
 2544 0472 77000000 		.4byte	0x77
 2545 0476 00000000 		.4byte	.LFB25
 2546 047a 18000000 		.4byte	.LFE25-.LFB25
 2547 047e 01       		.uleb128 0x1
 2548 047f 9C       		.byte	0x9c
 2549 0480 0C       		.uleb128 0xc
 2550 0481 60060000 		.4byte	.LASF57
 2551 0485 01       		.byte	0x1
 2552 0486 BA03     		.2byte	0x3ba
 2553 0488 00000000 		.4byte	.LFB26
 2554 048c 20000000 		.4byte	.LFE26-.LFB26
 2555 0490 01       		.uleb128 0x1
 2556 0491 9C       		.byte	0x9c
 2557 0492 A6040000 		.4byte	0x4a6
 2558 0496 0B       		.uleb128 0xb
 2559 0497 76050000 		.4byte	.LASF58
 2560 049b 01       		.byte	0x1
 2561 049c BA03     		.2byte	0x3ba
 2562 049e 77000000 		.4byte	0x77
 2563 04a2 02       		.uleb128 0x2
 2564 04a3 91       		.byte	0x91
 2565 04a4 74       		.sleb128 -12
 2566 04a5 00       		.byte	0
 2567 04a6 0D       		.uleb128 0xd
 2568 04a7 45060000 		.4byte	.LASF59
 2569 04ab 01       		.byte	0x1
 2570 04ac E803     		.2byte	0x3e8
 2571 04ae 77000000 		.4byte	0x77
 2572 04b2 00000000 		.4byte	.LFB27
 2573 04b6 18000000 		.4byte	.LFE27-.LFB27
 2574 04ba 01       		.uleb128 0x1
 2575 04bb 9C       		.byte	0x9c
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 71


 2576 04bc 0D       		.uleb128 0xd
 2577 04bd B5030000 		.4byte	.LASF60
 2578 04c1 01       		.byte	0x1
 2579 04c2 1604     		.2byte	0x416
 2580 04c4 77000000 		.4byte	0x77
 2581 04c8 00000000 		.4byte	.LFB28
 2582 04cc 18000000 		.4byte	.LFE28-.LFB28
 2583 04d0 01       		.uleb128 0x1
 2584 04d1 9C       		.byte	0x9c
 2585 04d2 0D       		.uleb128 0xd
 2586 04d3 CE000000 		.4byte	.LASF61
 2587 04d7 01       		.byte	0x1
 2588 04d8 2B04     		.2byte	0x42b
 2589 04da 77000000 		.4byte	0x77
 2590 04de 00000000 		.4byte	.LFB29
 2591 04e2 18000000 		.4byte	.LFE29-.LFB29
 2592 04e6 01       		.uleb128 0x1
 2593 04e7 9C       		.byte	0x9c
 2594 04e8 09       		.uleb128 0x9
 2595 04e9 92030000 		.4byte	.LASF62
 2596 04ed 01       		.byte	0x1
 2597 04ee 4604     		.2byte	0x446
 2598 04f0 00000000 		.4byte	.LFB30
 2599 04f4 44000000 		.4byte	.LFE30-.LFB30
 2600 04f8 01       		.uleb128 0x1
 2601 04f9 9C       		.byte	0x9c
 2602 04fa 1D050000 		.4byte	0x51d
 2603 04fe 0B       		.uleb128 0xb
 2604 04ff A3010000 		.4byte	.LASF63
 2605 0503 01       		.byte	0x1
 2606 0504 4604     		.2byte	0x446
 2607 0506 77000000 		.4byte	0x77
 2608 050a 02       		.uleb128 0x2
 2609 050b 91       		.byte	0x91
 2610 050c 64       		.sleb128 -28
 2611 050d 0A       		.uleb128 0xa
 2612 050e 9C050000 		.4byte	.LASF21
 2613 0512 01       		.byte	0x1
 2614 0513 4804     		.2byte	0x448
 2615 0515 6B000000 		.4byte	0x6b
 2616 0519 02       		.uleb128 0x2
 2617 051a 91       		.byte	0x91
 2618 051b 6F       		.sleb128 -17
 2619 051c 00       		.byte	0
 2620 051d 09       		.uleb128 0x9
 2621 051e CD030000 		.4byte	.LASF64
 2622 0522 01       		.byte	0x1
 2623 0523 6704     		.2byte	0x467
 2624 0525 00000000 		.4byte	.LFB31
 2625 0529 48000000 		.4byte	.LFE31-.LFB31
 2626 052d 01       		.uleb128 0x1
 2627 052e 9C       		.byte	0x9c
 2628 052f 52050000 		.4byte	0x552
 2629 0533 0B       		.uleb128 0xb
 2630 0534 A3010000 		.4byte	.LASF63
 2631 0538 01       		.byte	0x1
 2632 0539 6704     		.2byte	0x467
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 72


 2633 053b 77000000 		.4byte	0x77
 2634 053f 02       		.uleb128 0x2
 2635 0540 91       		.byte	0x91
 2636 0541 64       		.sleb128 -28
 2637 0542 0A       		.uleb128 0xa
 2638 0543 9C050000 		.4byte	.LASF21
 2639 0547 01       		.byte	0x1
 2640 0548 6904     		.2byte	0x469
 2641 054a 6B000000 		.4byte	0x6b
 2642 054e 02       		.uleb128 0x2
 2643 054f 91       		.byte	0x91
 2644 0550 6F       		.sleb128 -17
 2645 0551 00       		.byte	0
 2646 0552 09       		.uleb128 0x9
 2647 0553 08050000 		.4byte	.LASF65
 2648 0557 01       		.byte	0x1
 2649 0558 8804     		.2byte	0x488
 2650 055a 00000000 		.4byte	.LFB32
 2651 055e 4C000000 		.4byte	.LFE32-.LFB32
 2652 0562 01       		.uleb128 0x1
 2653 0563 9C       		.byte	0x9c
 2654 0564 87050000 		.4byte	0x587
 2655 0568 0B       		.uleb128 0xb
 2656 0569 A3010000 		.4byte	.LASF63
 2657 056d 01       		.byte	0x1
 2658 056e 8804     		.2byte	0x488
 2659 0570 77000000 		.4byte	0x77
 2660 0574 02       		.uleb128 0x2
 2661 0575 91       		.byte	0x91
 2662 0576 64       		.sleb128 -28
 2663 0577 0A       		.uleb128 0xa
 2664 0578 9C050000 		.4byte	.LASF21
 2665 057c 01       		.byte	0x1
 2666 057d 8A04     		.2byte	0x48a
 2667 057f 6B000000 		.4byte	0x6b
 2668 0583 02       		.uleb128 0x2
 2669 0584 91       		.byte	0x91
 2670 0585 6F       		.sleb128 -17
 2671 0586 00       		.byte	0
 2672 0587 09       		.uleb128 0x9
 2673 0588 84010000 		.4byte	.LASF66
 2674 058c 01       		.byte	0x1
 2675 058d A804     		.2byte	0x4a8
 2676 058f 00000000 		.4byte	.LFB33
 2677 0593 48000000 		.4byte	.LFE33-.LFB33
 2678 0597 01       		.uleb128 0x1
 2679 0598 9C       		.byte	0x9c
 2680 0599 BC050000 		.4byte	0x5bc
 2681 059d 0B       		.uleb128 0xb
 2682 059e A3010000 		.4byte	.LASF63
 2683 05a2 01       		.byte	0x1
 2684 05a3 A804     		.2byte	0x4a8
 2685 05a5 77000000 		.4byte	0x77
 2686 05a9 02       		.uleb128 0x2
 2687 05aa 91       		.byte	0x91
 2688 05ab 64       		.sleb128 -28
 2689 05ac 0A       		.uleb128 0xa
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 73


 2690 05ad 9C050000 		.4byte	.LASF21
 2691 05b1 01       		.byte	0x1
 2692 05b2 AA04     		.2byte	0x4aa
 2693 05b4 6B000000 		.4byte	0x6b
 2694 05b8 02       		.uleb128 0x2
 2695 05b9 91       		.byte	0x91
 2696 05ba 6F       		.sleb128 -17
 2697 05bb 00       		.byte	0
 2698 05bc 09       		.uleb128 0x9
 2699 05bd 91040000 		.4byte	.LASF67
 2700 05c1 01       		.byte	0x1
 2701 05c2 C904     		.2byte	0x4c9
 2702 05c4 00000000 		.4byte	.LFB34
 2703 05c8 48000000 		.4byte	.LFE34-.LFB34
 2704 05cc 01       		.uleb128 0x1
 2705 05cd 9C       		.byte	0x9c
 2706 05ce F1050000 		.4byte	0x5f1
 2707 05d2 0B       		.uleb128 0xb
 2708 05d3 A3010000 		.4byte	.LASF63
 2709 05d7 01       		.byte	0x1
 2710 05d8 C904     		.2byte	0x4c9
 2711 05da 77000000 		.4byte	0x77
 2712 05de 02       		.uleb128 0x2
 2713 05df 91       		.byte	0x91
 2714 05e0 64       		.sleb128 -28
 2715 05e1 0A       		.uleb128 0xa
 2716 05e2 9C050000 		.4byte	.LASF21
 2717 05e6 01       		.byte	0x1
 2718 05e7 CB04     		.2byte	0x4cb
 2719 05e9 6B000000 		.4byte	0x6b
 2720 05ed 02       		.uleb128 0x2
 2721 05ee 91       		.byte	0x91
 2722 05ef 6F       		.sleb128 -17
 2723 05f0 00       		.byte	0
 2724 05f1 09       		.uleb128 0x9
 2725 05f2 AD050000 		.4byte	.LASF68
 2726 05f6 01       		.byte	0x1
 2727 05f7 F104     		.2byte	0x4f1
 2728 05f9 00000000 		.4byte	.LFB35
 2729 05fd 3C000000 		.4byte	.LFE35-.LFB35
 2730 0601 01       		.uleb128 0x1
 2731 0602 9C       		.byte	0x9c
 2732 0603 35060000 		.4byte	0x635
 2733 0607 0B       		.uleb128 0xb
 2734 0608 AF010000 		.4byte	.LASF39
 2735 060c 01       		.byte	0x1
 2736 060d F104     		.2byte	0x4f1
 2737 060f 77000000 		.4byte	0x77
 2738 0613 02       		.uleb128 0x2
 2739 0614 91       		.byte	0x91
 2740 0615 64       		.sleb128 -28
 2741 0616 0B       		.uleb128 0xb
 2742 0617 FD010000 		.4byte	.LASF69
 2743 061b 01       		.byte	0x1
 2744 061c F104     		.2byte	0x4f1
 2745 061e 77000000 		.4byte	0x77
 2746 0622 02       		.uleb128 0x2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 74


 2747 0623 91       		.byte	0x91
 2748 0624 60       		.sleb128 -32
 2749 0625 0A       		.uleb128 0xa
 2750 0626 9C050000 		.4byte	.LASF21
 2751 062a 01       		.byte	0x1
 2752 062b F304     		.2byte	0x4f3
 2753 062d 6B000000 		.4byte	0x6b
 2754 0631 02       		.uleb128 0x2
 2755 0632 91       		.byte	0x91
 2756 0633 6F       		.sleb128 -17
 2757 0634 00       		.byte	0
 2758 0635 0D       		.uleb128 0xd
 2759 0636 36040000 		.4byte	.LASF70
 2760 063a 01       		.byte	0x1
 2761 063b 0E05     		.2byte	0x50e
 2762 063d 77000000 		.4byte	0x77
 2763 0641 00000000 		.4byte	.LFB36
 2764 0645 20000000 		.4byte	.LFE36-.LFB36
 2765 0649 01       		.uleb128 0x1
 2766 064a 9C       		.byte	0x9c
 2767 064b 0C       		.uleb128 0xc
 2768 064c 59050000 		.4byte	.LASF71
 2769 0650 01       		.byte	0x1
 2770 0651 2705     		.2byte	0x527
 2771 0653 00000000 		.4byte	.LFB37
 2772 0657 1C000000 		.4byte	.LFE37-.LFB37
 2773 065b 01       		.uleb128 0x1
 2774 065c 9C       		.byte	0x9c
 2775 065d 71060000 		.4byte	0x671
 2776 0661 0B       		.uleb128 0xb
 2777 0662 83040000 		.4byte	.LASF72
 2778 0666 01       		.byte	0x1
 2779 0667 2705     		.2byte	0x527
 2780 0669 77000000 		.4byte	0x77
 2781 066d 02       		.uleb128 0x2
 2782 066e 91       		.byte	0x91
 2783 066f 74       		.sleb128 -12
 2784 0670 00       		.byte	0
 2785 0671 0D       		.uleb128 0xd
 2786 0672 05020000 		.4byte	.LASF73
 2787 0676 01       		.byte	0x1
 2788 0677 3E05     		.2byte	0x53e
 2789 0679 77000000 		.4byte	0x77
 2790 067d 00000000 		.4byte	.LFB38
 2791 0681 14000000 		.4byte	.LFE38-.LFB38
 2792 0685 01       		.uleb128 0x1
 2793 0686 9C       		.byte	0x9c
 2794 0687 0D       		.uleb128 0xd
 2795 0688 45020000 		.4byte	.LASF74
 2796 068c 01       		.byte	0x1
 2797 068d 5505     		.2byte	0x555
 2798 068f 77000000 		.4byte	0x77
 2799 0693 00000000 		.4byte	.LFB39
 2800 0697 14000000 		.4byte	.LFE39-.LFB39
 2801 069b 01       		.uleb128 0x1
 2802 069c 9C       		.byte	0x9c
 2803 069d 0C       		.uleb128 0xc
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 75


 2804 069e C8050000 		.4byte	.LASF75
 2805 06a2 01       		.byte	0x1
 2806 06a3 6C05     		.2byte	0x56c
 2807 06a5 00000000 		.4byte	.LFB40
 2808 06a9 1C000000 		.4byte	.LFE40-.LFB40
 2809 06ad 01       		.uleb128 0x1
 2810 06ae 9C       		.byte	0x9c
 2811 06af C3060000 		.4byte	0x6c3
 2812 06b3 0B       		.uleb128 0xb
 2813 06b4 83040000 		.4byte	.LASF72
 2814 06b8 01       		.byte	0x1
 2815 06b9 6C05     		.2byte	0x56c
 2816 06bb 77000000 		.4byte	0x77
 2817 06bf 02       		.uleb128 0x2
 2818 06c0 91       		.byte	0x91
 2819 06c1 74       		.sleb128 -12
 2820 06c2 00       		.byte	0
 2821 06c3 0C       		.uleb128 0xc
 2822 06c4 B4010000 		.4byte	.LASF76
 2823 06c8 01       		.byte	0x1
 2824 06c9 8305     		.2byte	0x583
 2825 06cb 00000000 		.4byte	.LFB41
 2826 06cf 1C000000 		.4byte	.LFE41-.LFB41
 2827 06d3 01       		.uleb128 0x1
 2828 06d4 9C       		.byte	0x9c
 2829 06d5 E9060000 		.4byte	0x6e9
 2830 06d9 0B       		.uleb128 0xb
 2831 06da 83040000 		.4byte	.LASF72
 2832 06de 01       		.byte	0x1
 2833 06df 8305     		.2byte	0x583
 2834 06e1 77000000 		.4byte	0x77
 2835 06e5 02       		.uleb128 0x2
 2836 06e6 91       		.byte	0x91
 2837 06e7 74       		.sleb128 -12
 2838 06e8 00       		.byte	0
 2839 06e9 0E       		.uleb128 0xe
 2840 06ea E7030000 		.4byte	.LASF80
 2841 06ee 01       		.byte	0x1
 2842 06ef 15       		.byte	0x15
 2843 06f0 6B000000 		.4byte	0x6b
 2844 06f4 05       		.uleb128 0x5
 2845 06f5 03       		.byte	0x3
 2846 06f6 00000000 		.4byte	Timer_Claps_initVar
 2847 06fa 00       		.byte	0
 2848              		.section	.debug_abbrev,"",%progbits
 2849              	.Ldebug_abbrev0:
 2850 0000 01       		.uleb128 0x1
 2851 0001 11       		.uleb128 0x11
 2852 0002 01       		.byte	0x1
 2853 0003 25       		.uleb128 0x25
 2854 0004 0E       		.uleb128 0xe
 2855 0005 13       		.uleb128 0x13
 2856 0006 0B       		.uleb128 0xb
 2857 0007 03       		.uleb128 0x3
 2858 0008 0E       		.uleb128 0xe
 2859 0009 1B       		.uleb128 0x1b
 2860 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 76


 2861 000b 55       		.uleb128 0x55
 2862 000c 17       		.uleb128 0x17
 2863 000d 11       		.uleb128 0x11
 2864 000e 01       		.uleb128 0x1
 2865 000f 10       		.uleb128 0x10
 2866 0010 17       		.uleb128 0x17
 2867 0011 00       		.byte	0
 2868 0012 00       		.byte	0
 2869 0013 02       		.uleb128 0x2
 2870 0014 24       		.uleb128 0x24
 2871 0015 00       		.byte	0
 2872 0016 0B       		.uleb128 0xb
 2873 0017 0B       		.uleb128 0xb
 2874 0018 3E       		.uleb128 0x3e
 2875 0019 0B       		.uleb128 0xb
 2876 001a 03       		.uleb128 0x3
 2877 001b 0E       		.uleb128 0xe
 2878 001c 00       		.byte	0
 2879 001d 00       		.byte	0
 2880 001e 03       		.uleb128 0x3
 2881 001f 24       		.uleb128 0x24
 2882 0020 00       		.byte	0
 2883 0021 0B       		.uleb128 0xb
 2884 0022 0B       		.uleb128 0xb
 2885 0023 3E       		.uleb128 0x3e
 2886 0024 0B       		.uleb128 0xb
 2887 0025 03       		.uleb128 0x3
 2888 0026 08       		.uleb128 0x8
 2889 0027 00       		.byte	0
 2890 0028 00       		.byte	0
 2891 0029 04       		.uleb128 0x4
 2892 002a 16       		.uleb128 0x16
 2893 002b 00       		.byte	0
 2894 002c 03       		.uleb128 0x3
 2895 002d 0E       		.uleb128 0xe
 2896 002e 3A       		.uleb128 0x3a
 2897 002f 0B       		.uleb128 0xb
 2898 0030 3B       		.uleb128 0x3b
 2899 0031 05       		.uleb128 0x5
 2900 0032 49       		.uleb128 0x49
 2901 0033 13       		.uleb128 0x13
 2902 0034 00       		.byte	0
 2903 0035 00       		.byte	0
 2904 0036 05       		.uleb128 0x5
 2905 0037 35       		.uleb128 0x35
 2906 0038 00       		.byte	0
 2907 0039 49       		.uleb128 0x49
 2908 003a 13       		.uleb128 0x13
 2909 003b 00       		.byte	0
 2910 003c 00       		.byte	0
 2911 003d 06       		.uleb128 0x6
 2912 003e 2E       		.uleb128 0x2e
 2913 003f 00       		.byte	0
 2914 0040 3F       		.uleb128 0x3f
 2915 0041 19       		.uleb128 0x19
 2916 0042 03       		.uleb128 0x3
 2917 0043 0E       		.uleb128 0xe
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 77


 2918 0044 3A       		.uleb128 0x3a
 2919 0045 0B       		.uleb128 0xb
 2920 0046 3B       		.uleb128 0x3b
 2921 0047 0B       		.uleb128 0xb
 2922 0048 27       		.uleb128 0x27
 2923 0049 19       		.uleb128 0x19
 2924 004a 11       		.uleb128 0x11
 2925 004b 01       		.uleb128 0x1
 2926 004c 12       		.uleb128 0x12
 2927 004d 06       		.uleb128 0x6
 2928 004e 40       		.uleb128 0x40
 2929 004f 18       		.uleb128 0x18
 2930 0050 9642     		.uleb128 0x2116
 2931 0052 19       		.uleb128 0x19
 2932 0053 00       		.byte	0
 2933 0054 00       		.byte	0
 2934 0055 07       		.uleb128 0x7
 2935 0056 2E       		.uleb128 0x2e
 2936 0057 01       		.byte	0x1
 2937 0058 3F       		.uleb128 0x3f
 2938 0059 19       		.uleb128 0x19
 2939 005a 03       		.uleb128 0x3
 2940 005b 0E       		.uleb128 0xe
 2941 005c 3A       		.uleb128 0x3a
 2942 005d 0B       		.uleb128 0xb
 2943 005e 3B       		.uleb128 0x3b
 2944 005f 0B       		.uleb128 0xb
 2945 0060 27       		.uleb128 0x27
 2946 0061 19       		.uleb128 0x19
 2947 0062 11       		.uleb128 0x11
 2948 0063 01       		.uleb128 0x1
 2949 0064 12       		.uleb128 0x12
 2950 0065 06       		.uleb128 0x6
 2951 0066 40       		.uleb128 0x40
 2952 0067 18       		.uleb128 0x18
 2953 0068 9642     		.uleb128 0x2116
 2954 006a 19       		.uleb128 0x19
 2955 006b 01       		.uleb128 0x1
 2956 006c 13       		.uleb128 0x13
 2957 006d 00       		.byte	0
 2958 006e 00       		.byte	0
 2959 006f 08       		.uleb128 0x8
 2960 0070 34       		.uleb128 0x34
 2961 0071 00       		.byte	0
 2962 0072 03       		.uleb128 0x3
 2963 0073 0E       		.uleb128 0xe
 2964 0074 3A       		.uleb128 0x3a
 2965 0075 0B       		.uleb128 0xb
 2966 0076 3B       		.uleb128 0x3b
 2967 0077 0B       		.uleb128 0xb
 2968 0078 49       		.uleb128 0x49
 2969 0079 13       		.uleb128 0x13
 2970 007a 02       		.uleb128 0x2
 2971 007b 18       		.uleb128 0x18
 2972 007c 00       		.byte	0
 2973 007d 00       		.byte	0
 2974 007e 09       		.uleb128 0x9
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 78


 2975 007f 2E       		.uleb128 0x2e
 2976 0080 01       		.byte	0x1
 2977 0081 3F       		.uleb128 0x3f
 2978 0082 19       		.uleb128 0x19
 2979 0083 03       		.uleb128 0x3
 2980 0084 0E       		.uleb128 0xe
 2981 0085 3A       		.uleb128 0x3a
 2982 0086 0B       		.uleb128 0xb
 2983 0087 3B       		.uleb128 0x3b
 2984 0088 05       		.uleb128 0x5
 2985 0089 27       		.uleb128 0x27
 2986 008a 19       		.uleb128 0x19
 2987 008b 11       		.uleb128 0x11
 2988 008c 01       		.uleb128 0x1
 2989 008d 12       		.uleb128 0x12
 2990 008e 06       		.uleb128 0x6
 2991 008f 40       		.uleb128 0x40
 2992 0090 18       		.uleb128 0x18
 2993 0091 9642     		.uleb128 0x2116
 2994 0093 19       		.uleb128 0x19
 2995 0094 01       		.uleb128 0x1
 2996 0095 13       		.uleb128 0x13
 2997 0096 00       		.byte	0
 2998 0097 00       		.byte	0
 2999 0098 0A       		.uleb128 0xa
 3000 0099 34       		.uleb128 0x34
 3001 009a 00       		.byte	0
 3002 009b 03       		.uleb128 0x3
 3003 009c 0E       		.uleb128 0xe
 3004 009d 3A       		.uleb128 0x3a
 3005 009e 0B       		.uleb128 0xb
 3006 009f 3B       		.uleb128 0x3b
 3007 00a0 05       		.uleb128 0x5
 3008 00a1 49       		.uleb128 0x49
 3009 00a2 13       		.uleb128 0x13
 3010 00a3 02       		.uleb128 0x2
 3011 00a4 18       		.uleb128 0x18
 3012 00a5 00       		.byte	0
 3013 00a6 00       		.byte	0
 3014 00a7 0B       		.uleb128 0xb
 3015 00a8 05       		.uleb128 0x5
 3016 00a9 00       		.byte	0
 3017 00aa 03       		.uleb128 0x3
 3018 00ab 0E       		.uleb128 0xe
 3019 00ac 3A       		.uleb128 0x3a
 3020 00ad 0B       		.uleb128 0xb
 3021 00ae 3B       		.uleb128 0x3b
 3022 00af 05       		.uleb128 0x5
 3023 00b0 49       		.uleb128 0x49
 3024 00b1 13       		.uleb128 0x13
 3025 00b2 02       		.uleb128 0x2
 3026 00b3 18       		.uleb128 0x18
 3027 00b4 00       		.byte	0
 3028 00b5 00       		.byte	0
 3029 00b6 0C       		.uleb128 0xc
 3030 00b7 2E       		.uleb128 0x2e
 3031 00b8 01       		.byte	0x1
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 79


 3032 00b9 3F       		.uleb128 0x3f
 3033 00ba 19       		.uleb128 0x19
 3034 00bb 03       		.uleb128 0x3
 3035 00bc 0E       		.uleb128 0xe
 3036 00bd 3A       		.uleb128 0x3a
 3037 00be 0B       		.uleb128 0xb
 3038 00bf 3B       		.uleb128 0x3b
 3039 00c0 05       		.uleb128 0x5
 3040 00c1 27       		.uleb128 0x27
 3041 00c2 19       		.uleb128 0x19
 3042 00c3 11       		.uleb128 0x11
 3043 00c4 01       		.uleb128 0x1
 3044 00c5 12       		.uleb128 0x12
 3045 00c6 06       		.uleb128 0x6
 3046 00c7 40       		.uleb128 0x40
 3047 00c8 18       		.uleb128 0x18
 3048 00c9 9742     		.uleb128 0x2117
 3049 00cb 19       		.uleb128 0x19
 3050 00cc 01       		.uleb128 0x1
 3051 00cd 13       		.uleb128 0x13
 3052 00ce 00       		.byte	0
 3053 00cf 00       		.byte	0
 3054 00d0 0D       		.uleb128 0xd
 3055 00d1 2E       		.uleb128 0x2e
 3056 00d2 00       		.byte	0
 3057 00d3 3F       		.uleb128 0x3f
 3058 00d4 19       		.uleb128 0x19
 3059 00d5 03       		.uleb128 0x3
 3060 00d6 0E       		.uleb128 0xe
 3061 00d7 3A       		.uleb128 0x3a
 3062 00d8 0B       		.uleb128 0xb
 3063 00d9 3B       		.uleb128 0x3b
 3064 00da 05       		.uleb128 0x5
 3065 00db 27       		.uleb128 0x27
 3066 00dc 19       		.uleb128 0x19
 3067 00dd 49       		.uleb128 0x49
 3068 00de 13       		.uleb128 0x13
 3069 00df 11       		.uleb128 0x11
 3070 00e0 01       		.uleb128 0x1
 3071 00e1 12       		.uleb128 0x12
 3072 00e2 06       		.uleb128 0x6
 3073 00e3 40       		.uleb128 0x40
 3074 00e4 18       		.uleb128 0x18
 3075 00e5 9742     		.uleb128 0x2117
 3076 00e7 19       		.uleb128 0x19
 3077 00e8 00       		.byte	0
 3078 00e9 00       		.byte	0
 3079 00ea 0E       		.uleb128 0xe
 3080 00eb 34       		.uleb128 0x34
 3081 00ec 00       		.byte	0
 3082 00ed 03       		.uleb128 0x3
 3083 00ee 0E       		.uleb128 0xe
 3084 00ef 3A       		.uleb128 0x3a
 3085 00f0 0B       		.uleb128 0xb
 3086 00f1 3B       		.uleb128 0x3b
 3087 00f2 0B       		.uleb128 0xb
 3088 00f3 49       		.uleb128 0x49
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 80


 3089 00f4 13       		.uleb128 0x13
 3090 00f5 3F       		.uleb128 0x3f
 3091 00f6 19       		.uleb128 0x19
 3092 00f7 02       		.uleb128 0x2
 3093 00f8 18       		.uleb128 0x18
 3094 00f9 00       		.byte	0
 3095 00fa 00       		.byte	0
 3096 00fb 00       		.byte	0
 3097              		.section	.debug_aranges,"",%progbits
 3098 0000 54010000 		.4byte	0x154
 3099 0004 0200     		.2byte	0x2
 3100 0006 00000000 		.4byte	.Ldebug_info0
 3101 000a 04       		.byte	0x4
 3102 000b 00       		.byte	0
 3103 000c 0000     		.2byte	0
 3104 000e 0000     		.2byte	0
 3105 0010 00000000 		.4byte	.LFB2
 3106 0014 3C000000 		.4byte	.LFE2-.LFB2
 3107 0018 00000000 		.4byte	.LFB3
 3108 001c 34000000 		.4byte	.LFE3-.LFB3
 3109 0020 00000000 		.4byte	.LFB4
 3110 0024 24000000 		.4byte	.LFE4-.LFB4
 3111 0028 00000000 		.4byte	.LFB5
 3112 002c 34000000 		.4byte	.LFE5-.LFB5
 3113 0030 00000000 		.4byte	.LFB6
 3114 0034 48000000 		.4byte	.LFE6-.LFB6
 3115 0038 00000000 		.4byte	.LFB7
 3116 003c 48000000 		.4byte	.LFE7-.LFB7
 3117 0040 00000000 		.4byte	.LFB8
 3118 0044 48000000 		.4byte	.LFE8-.LFB8
 3119 0048 00000000 		.4byte	.LFB9
 3120 004c 50000000 		.4byte	.LFE9-.LFB9
 3121 0050 00000000 		.4byte	.LFB10
 3122 0054 20000000 		.4byte	.LFE10-.LFB10
 3123 0058 00000000 		.4byte	.LFB11
 3124 005c 4C000000 		.4byte	.LFE11-.LFB11
 3125 0060 00000000 		.4byte	.LFB12
 3126 0064 4C000000 		.4byte	.LFE12-.LFB12
 3127 0068 00000000 		.4byte	.LFB13
 3128 006c 50000000 		.4byte	.LFE13-.LFB13
 3129 0070 00000000 		.4byte	.LFB14
 3130 0074 48000000 		.4byte	.LFE14-.LFB14
 3131 0078 00000000 		.4byte	.LFB15
 3132 007c 20000000 		.4byte	.LFE15-.LFB15
 3133 0080 00000000 		.4byte	.LFB16
 3134 0084 18000000 		.4byte	.LFE16-.LFB16
 3135 0088 00000000 		.4byte	.LFB17
 3136 008c 48000000 		.4byte	.LFE17-.LFB17
 3137 0090 00000000 		.4byte	.LFB18
 3138 0094 20000000 		.4byte	.LFE18-.LFB18
 3139 0098 00000000 		.4byte	.LFB19
 3140 009c 18000000 		.4byte	.LFE19-.LFB19
 3141 00a0 00000000 		.4byte	.LFB20
 3142 00a4 48000000 		.4byte	.LFE20-.LFB20
 3143 00a8 00000000 		.4byte	.LFB21
 3144 00ac 20000000 		.4byte	.LFE21-.LFB21
 3145 00b0 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 81


 3146 00b4 18000000 		.4byte	.LFE22-.LFB22
 3147 00b8 00000000 		.4byte	.LFB23
 3148 00bc 4C000000 		.4byte	.LFE23-.LFB23
 3149 00c0 00000000 		.4byte	.LFB24
 3150 00c4 20000000 		.4byte	.LFE24-.LFB24
 3151 00c8 00000000 		.4byte	.LFB25
 3152 00cc 18000000 		.4byte	.LFE25-.LFB25
 3153 00d0 00000000 		.4byte	.LFB26
 3154 00d4 20000000 		.4byte	.LFE26-.LFB26
 3155 00d8 00000000 		.4byte	.LFB27
 3156 00dc 18000000 		.4byte	.LFE27-.LFB27
 3157 00e0 00000000 		.4byte	.LFB28
 3158 00e4 18000000 		.4byte	.LFE28-.LFB28
 3159 00e8 00000000 		.4byte	.LFB29
 3160 00ec 18000000 		.4byte	.LFE29-.LFB29
 3161 00f0 00000000 		.4byte	.LFB30
 3162 00f4 44000000 		.4byte	.LFE30-.LFB30
 3163 00f8 00000000 		.4byte	.LFB31
 3164 00fc 48000000 		.4byte	.LFE31-.LFB31
 3165 0100 00000000 		.4byte	.LFB32
 3166 0104 4C000000 		.4byte	.LFE32-.LFB32
 3167 0108 00000000 		.4byte	.LFB33
 3168 010c 48000000 		.4byte	.LFE33-.LFB33
 3169 0110 00000000 		.4byte	.LFB34
 3170 0114 48000000 		.4byte	.LFE34-.LFB34
 3171 0118 00000000 		.4byte	.LFB35
 3172 011c 3C000000 		.4byte	.LFE35-.LFB35
 3173 0120 00000000 		.4byte	.LFB36
 3174 0124 20000000 		.4byte	.LFE36-.LFB36
 3175 0128 00000000 		.4byte	.LFB37
 3176 012c 1C000000 		.4byte	.LFE37-.LFB37
 3177 0130 00000000 		.4byte	.LFB38
 3178 0134 14000000 		.4byte	.LFE38-.LFB38
 3179 0138 00000000 		.4byte	.LFB39
 3180 013c 14000000 		.4byte	.LFE39-.LFB39
 3181 0140 00000000 		.4byte	.LFB40
 3182 0144 1C000000 		.4byte	.LFE40-.LFB40
 3183 0148 00000000 		.4byte	.LFB41
 3184 014c 1C000000 		.4byte	.LFE41-.LFB41
 3185 0150 00000000 		.4byte	0
 3186 0154 00000000 		.4byte	0
 3187              		.section	.debug_ranges,"",%progbits
 3188              	.Ldebug_ranges0:
 3189 0000 00000000 		.4byte	.LFB2
 3190 0004 3C000000 		.4byte	.LFE2
 3191 0008 00000000 		.4byte	.LFB3
 3192 000c 34000000 		.4byte	.LFE3
 3193 0010 00000000 		.4byte	.LFB4
 3194 0014 24000000 		.4byte	.LFE4
 3195 0018 00000000 		.4byte	.LFB5
 3196 001c 34000000 		.4byte	.LFE5
 3197 0020 00000000 		.4byte	.LFB6
 3198 0024 48000000 		.4byte	.LFE6
 3199 0028 00000000 		.4byte	.LFB7
 3200 002c 48000000 		.4byte	.LFE7
 3201 0030 00000000 		.4byte	.LFB8
 3202 0034 48000000 		.4byte	.LFE8
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 82


 3203 0038 00000000 		.4byte	.LFB9
 3204 003c 50000000 		.4byte	.LFE9
 3205 0040 00000000 		.4byte	.LFB10
 3206 0044 20000000 		.4byte	.LFE10
 3207 0048 00000000 		.4byte	.LFB11
 3208 004c 4C000000 		.4byte	.LFE11
 3209 0050 00000000 		.4byte	.LFB12
 3210 0054 4C000000 		.4byte	.LFE12
 3211 0058 00000000 		.4byte	.LFB13
 3212 005c 50000000 		.4byte	.LFE13
 3213 0060 00000000 		.4byte	.LFB14
 3214 0064 48000000 		.4byte	.LFE14
 3215 0068 00000000 		.4byte	.LFB15
 3216 006c 20000000 		.4byte	.LFE15
 3217 0070 00000000 		.4byte	.LFB16
 3218 0074 18000000 		.4byte	.LFE16
 3219 0078 00000000 		.4byte	.LFB17
 3220 007c 48000000 		.4byte	.LFE17
 3221 0080 00000000 		.4byte	.LFB18
 3222 0084 20000000 		.4byte	.LFE18
 3223 0088 00000000 		.4byte	.LFB19
 3224 008c 18000000 		.4byte	.LFE19
 3225 0090 00000000 		.4byte	.LFB20
 3226 0094 48000000 		.4byte	.LFE20
 3227 0098 00000000 		.4byte	.LFB21
 3228 009c 20000000 		.4byte	.LFE21
 3229 00a0 00000000 		.4byte	.LFB22
 3230 00a4 18000000 		.4byte	.LFE22
 3231 00a8 00000000 		.4byte	.LFB23
 3232 00ac 4C000000 		.4byte	.LFE23
 3233 00b0 00000000 		.4byte	.LFB24
 3234 00b4 20000000 		.4byte	.LFE24
 3235 00b8 00000000 		.4byte	.LFB25
 3236 00bc 18000000 		.4byte	.LFE25
 3237 00c0 00000000 		.4byte	.LFB26
 3238 00c4 20000000 		.4byte	.LFE26
 3239 00c8 00000000 		.4byte	.LFB27
 3240 00cc 18000000 		.4byte	.LFE27
 3241 00d0 00000000 		.4byte	.LFB28
 3242 00d4 18000000 		.4byte	.LFE28
 3243 00d8 00000000 		.4byte	.LFB29
 3244 00dc 18000000 		.4byte	.LFE29
 3245 00e0 00000000 		.4byte	.LFB30
 3246 00e4 44000000 		.4byte	.LFE30
 3247 00e8 00000000 		.4byte	.LFB31
 3248 00ec 48000000 		.4byte	.LFE31
 3249 00f0 00000000 		.4byte	.LFB32
 3250 00f4 4C000000 		.4byte	.LFE32
 3251 00f8 00000000 		.4byte	.LFB33
 3252 00fc 48000000 		.4byte	.LFE33
 3253 0100 00000000 		.4byte	.LFB34
 3254 0104 48000000 		.4byte	.LFE34
 3255 0108 00000000 		.4byte	.LFB35
 3256 010c 3C000000 		.4byte	.LFE35
 3257 0110 00000000 		.4byte	.LFB36
 3258 0114 20000000 		.4byte	.LFE36
 3259 0118 00000000 		.4byte	.LFB37
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 83


 3260 011c 1C000000 		.4byte	.LFE37
 3261 0120 00000000 		.4byte	.LFB38
 3262 0124 14000000 		.4byte	.LFE38
 3263 0128 00000000 		.4byte	.LFB39
 3264 012c 14000000 		.4byte	.LFE39
 3265 0130 00000000 		.4byte	.LFB40
 3266 0134 1C000000 		.4byte	.LFE40
 3267 0138 00000000 		.4byte	.LFB41
 3268 013c 1C000000 		.4byte	.LFE41
 3269 0140 00000000 		.4byte	0
 3270 0144 00000000 		.4byte	0
 3271              		.section	.debug_line,"",%progbits
 3272              	.Ldebug_line0:
 3273 0000 6D030000 		.section	.debug_str,"MS",%progbits,1
 3273      02004800 
 3273      00000201 
 3273      FB0E0D00 
 3273      01010101 
 3274              	.LASF22:
 3275 0000 54696D65 		.ascii	"Timer_Claps_SetMode\000"
 3275      725F436C 
 3275      6170735F 
 3275      5365744D 
 3275      6F646500 
 3276              	.LASF41:
 3277 0014 636F756E 		.ascii	"count\000"
 3277      7400
 3278              	.LASF30:
 3279 001a 54696D65 		.ascii	"Timer_Claps_SetPWMMode\000"
 3279      725F436C 
 3279      6170735F 
 3279      53657450 
 3279      574D4D6F 
 3280              	.LASF36:
 3281 0031 54696D65 		.ascii	"Timer_Claps_SetPWMDeadTime\000"
 3281      725F436C 
 3281      6170735F 
 3281      53657450 
 3281      574D4465 
 3282              	.LASF38:
 3283 004c 54696D65 		.ascii	"Timer_Claps_SetPWMInvert\000"
 3283      725F436C 
 3283      6170735F 
 3283      53657450 
 3283      574D496E 
 3284              	.LASF46:
 3285 0065 54696D65 		.ascii	"Timer_Claps_ReadCounter\000"
 3285      725F436C 
 3285      6170735F 
 3285      52656164 
 3285      436F756E 
 3286              	.LASF45:
 3287 007d 70657269 		.ascii	"period\000"
 3287      6F6400
 3288              	.LASF7:
 3289 0084 6C6F6E67 		.ascii	"long long unsigned int\000"
 3289      206C6F6E 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 84


 3289      6720756E 
 3289      7369676E 
 3289      65642069 
 3290              	.LASF25:
 3291 009b 71644D6F 		.ascii	"qdMode\000"
 3291      646500
 3292              	.LASF6:
 3293 00a2 6C6F6E67 		.ascii	"long long int\000"
 3293      206C6F6E 
 3293      6720696E 
 3293      7400
 3294              	.LASF0:
 3295 00b0 7369676E 		.ascii	"signed char\000"
 3295      65642063 
 3295      68617200 
 3296              	.LASF18:
 3297 00bc 54696D65 		.ascii	"Timer_Claps_Start\000"
 3297      725F436C 
 3297      6170735F 
 3297      53746172 
 3297      7400
 3298              	.LASF61:
 3299 00ce 54696D65 		.ascii	"Timer_Claps_ReadCaptureBuf\000"
 3299      725F436C 
 3299      6170735F 
 3299      52656164 
 3299      43617074 
 3300              	.LASF78:
 3301 00e9 47656E65 		.ascii	"Generated_Source\\PSoC4\\Timer_Claps.c\000"
 3301      72617465 
 3301      645F536F 
 3301      75726365 
 3301      5C50536F 
 3302              	.LASF50:
 3303 010e 54696D65 		.ascii	"Timer_Claps_WritePeriodBuf\000"
 3303      725F436C 
 3303      6170735F 
 3303      57726974 
 3303      65506572 
 3304              	.LASF4:
 3305 0129 6C6F6E67 		.ascii	"long int\000"
 3305      20696E74 
 3305      00
 3306              	.LASF9:
 3307 0132 75696E74 		.ascii	"uint8\000"
 3307      3800
 3308              	.LASF26:
 3309 0138 54696D65 		.ascii	"Timer_Claps_SetPrescaler\000"
 3309      725F436C 
 3309      6170735F 
 3309      53657450 
 3309      72657363 
 3310              	.LASF12:
 3311 0151 646F7562 		.ascii	"double\000"
 3311      6C6500
 3312              	.LASF32:
 3313 0158 54696D65 		.ascii	"Timer_Claps_SetPWMSyncKill\000"
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 85


 3313      725F436C 
 3313      6170735F 
 3313      53657450 
 3313      574D5379 
 3314              	.LASF17:
 3315 0173 54696D65 		.ascii	"Timer_Claps_Init\000"
 3315      725F436C 
 3315      6170735F 
 3315      496E6974 
 3315      00
 3316              	.LASF66:
 3317 0184 54696D65 		.ascii	"Timer_Claps_SetStopMode\000"
 3317      725F436C 
 3317      6170735F 
 3317      53657453 
 3317      746F704D 
 3318              	.LASF10:
 3319 019c 75696E74 		.ascii	"uint32\000"
 3319      333200
 3320              	.LASF63:
 3321 01a3 74726967 		.ascii	"triggerMode\000"
 3321      6765724D 
 3321      6F646500 
 3322              	.LASF39:
 3323 01af 6D61736B 		.ascii	"mask\000"
 3323      00
 3324              	.LASF76:
 3325 01b4 54696D65 		.ascii	"Timer_Claps_SetInterrupt\000"
 3325      725F436C 
 3325      6170735F 
 3325      53657449 
 3325      6E746572 
 3326              	.LASF37:
 3327 01cd 64656164 		.ascii	"deadTime\000"
 3327      54696D65 
 3327      00
 3328              	.LASF52:
 3329 01d6 54696D65 		.ascii	"Timer_Claps_ReadPeriodBuf\000"
 3329      725F436C 
 3329      6170735F 
 3329      52656164 
 3329      50657269 
 3330              	.LASF8:
 3331 01f0 756E7369 		.ascii	"unsigned int\000"
 3331      676E6564 
 3331      20696E74 
 3331      00
 3332              	.LASF69:
 3333 01fd 636F6D6D 		.ascii	"command\000"
 3333      616E6400 
 3334              	.LASF73:
 3335 0205 54696D65 		.ascii	"Timer_Claps_GetInterruptSourceMasked\000"
 3335      725F436C 
 3335      6170735F 
 3335      47657449 
 3335      6E746572 
 3336              	.LASF5:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 86


 3337 022a 6C6F6E67 		.ascii	"long unsigned int\000"
 3337      20756E73 
 3337      69676E65 
 3337      6420696E 
 3337      7400
 3338              	.LASF31:
 3339 023c 6D6F6465 		.ascii	"modeMask\000"
 3339      4D61736B 
 3339      00
 3340              	.LASF74:
 3341 0245 54696D65 		.ascii	"Timer_Claps_GetInterruptSource\000"
 3341      725F436C 
 3341      6170735F 
 3341      47657449 
 3341      6E746572 
 3342              	.LASF3:
 3343 0264 73686F72 		.ascii	"short unsigned int\000"
 3343      7420756E 
 3343      7369676E 
 3343      65642069 
 3343      6E7400
 3344              	.LASF53:
 3345 0277 54696D65 		.ascii	"Timer_Claps_SetPeriodSwap\000"
 3345      725F436C 
 3345      6170735F 
 3345      53657450 
 3345      6572696F 
 3346              	.LASF44:
 3347 0291 54696D65 		.ascii	"Timer_Claps_WritePeriod\000"
 3347      725F436C 
 3347      6170735F 
 3347      57726974 
 3347      65506572 
 3348              	.LASF42:
 3349 02a9 54696D65 		.ascii	"Timer_Claps_SetCounterMode\000"
 3349      725F436C 
 3349      6170735F 
 3349      53657443 
 3349      6F756E74 
 3350              	.LASF29:
 3351 02c4 6F6E6553 		.ascii	"oneShotEnable\000"
 3351      686F7445 
 3351      6E61626C 
 3351      6500
 3352              	.LASF77:
 3353 02d2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3353      43313120 
 3353      352E342E 
 3353      31203230 
 3353      31363036 
 3354 0305 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3354      20726576 
 3354      6973696F 
 3354      6E203233 
 3354      37373135 
 3355 0338 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3355      66756E63 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 87


 3355      74696F6E 
 3355      2D736563 
 3355      74696F6E 
 3356              	.LASF14:
 3357 0360 72656733 		.ascii	"reg32\000"
 3357      3200
 3358              	.LASF16:
 3359 0366 73697A65 		.ascii	"sizetype\000"
 3359      74797065 
 3359      00
 3360              	.LASF15:
 3361 036f 6C6F6E67 		.ascii	"long double\000"
 3361      20646F75 
 3361      626C6500 
 3362              	.LASF47:
 3363 037b 54696D65 		.ascii	"Timer_Claps_ReadPeriod\000"
 3363      725F436C 
 3363      6170735F 
 3363      52656164 
 3363      50657269 
 3364              	.LASF62:
 3365 0392 54696D65 		.ascii	"Timer_Claps_SetCaptureMode\000"
 3365      725F436C 
 3365      6170735F 
 3365      53657443 
 3365      61707475 
 3366              	.LASF55:
 3367 03ad 636F6D70 		.ascii	"compare\000"
 3367      61726500 
 3368              	.LASF60:
 3369 03b5 54696D65 		.ascii	"Timer_Claps_ReadCapture\000"
 3369      725F436C 
 3369      6170735F 
 3369      52656164 
 3369      43617074 
 3370              	.LASF64:
 3371 03cd 54696D65 		.ascii	"Timer_Claps_SetReloadMode\000"
 3371      725F436C 
 3371      6170735F 
 3371      53657452 
 3371      656C6F61 
 3372              	.LASF80:
 3373 03e7 54696D65 		.ascii	"Timer_Claps_initVar\000"
 3373      725F436C 
 3373      6170735F 
 3373      696E6974 
 3373      56617200 
 3374              	.LASF34:
 3375 03fb 54696D65 		.ascii	"Timer_Claps_SetPWMStopOnKill\000"
 3375      725F436C 
 3375      6170735F 
 3375      53657450 
 3375      574D5374 
 3376              	.LASF11:
 3377 0418 666C6F61 		.ascii	"float\000"
 3377      7400
 3378              	.LASF27:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 88


 3379 041e 70726573 		.ascii	"prescaler\000"
 3379      63616C65 
 3379      7200
 3380              	.LASF1:
 3381 0428 756E7369 		.ascii	"unsigned char\000"
 3381      676E6564 
 3381      20636861 
 3381      7200
 3382              	.LASF70:
 3383 0436 54696D65 		.ascii	"Timer_Claps_ReadStatus\000"
 3383      725F436C 
 3383      6170735F 
 3383      52656164 
 3383      53746174 
 3384              	.LASF35:
 3385 044d 73746F70 		.ascii	"stopOnKillEnable\000"
 3385      4F6E4B69 
 3385      6C6C456E 
 3385      61626C65 
 3385      00
 3386              	.LASF2:
 3387 045e 73686F72 		.ascii	"short int\000"
 3387      7420696E 
 3387      7400
 3388              	.LASF48:
 3389 0468 54696D65 		.ascii	"Timer_Claps_SetCompareSwap\000"
 3389      725F436C 
 3389      6170735F 
 3389      53657443 
 3389      6F6D7061 
 3390              	.LASF72:
 3391 0483 696E7465 		.ascii	"interruptMask\000"
 3391      72727570 
 3391      744D6173 
 3391      6B00
 3392              	.LASF67:
 3393 0491 54696D65 		.ascii	"Timer_Claps_SetCountMode\000"
 3393      725F436C 
 3393      6170735F 
 3393      53657443 
 3393      6F756E74 
 3394              	.LASF79:
 3395 04aa 433A5C55 		.ascii	"C:\\Users\\janusdg-win\\UCU\\Smart_lightning_system"
 3395      73657273 
 3395      5C6A616E 
 3395      75736467 
 3395      2D77696E 
 3396 04d9 5C4D6573 		.ascii	"\\Mesh_Flood_PSoC4BLE_Main_Clap.cydsn\000"
 3396      685F466C 
 3396      6F6F645F 
 3396      50536F43 
 3396      34424C45 
 3397              	.LASF13:
 3398 04fe 63686172 		.ascii	"char\000"
 3398      00
 3399              	.LASF24:
 3400 0503 6D6F6465 		.ascii	"mode\000"
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 89


 3400      00
 3401              	.LASF65:
 3402 0508 54696D65 		.ascii	"Timer_Claps_SetStartMode\000"
 3402      725F436C 
 3402      6170735F 
 3402      53657453 
 3402      74617274 
 3403              	.LASF54:
 3404 0521 54696D65 		.ascii	"Timer_Claps_WriteCompare\000"
 3404      725F436C 
 3404      6170735F 
 3404      57726974 
 3404      65436F6D 
 3405              	.LASF43:
 3406 053a 636F756E 		.ascii	"counterMode\000"
 3406      7465724D 
 3406      6F646500 
 3407              	.LASF19:
 3408 0546 54696D65 		.ascii	"Timer_Claps_Enable\000"
 3408      725F436C 
 3408      6170735F 
 3408      456E6162 
 3408      6C6500
 3409              	.LASF71:
 3410 0559 54696D65 		.ascii	"Timer_Claps_SetInterruptMode\000"
 3410      725F436C 
 3410      6170735F 
 3410      53657449 
 3410      6E746572 
 3411              	.LASF58:
 3412 0576 636F6D70 		.ascii	"compareBuf\000"
 3412      61726542 
 3412      756600
 3413              	.LASF51:
 3414 0581 70657269 		.ascii	"periodBuf\000"
 3414      6F644275 
 3414      6600
 3415              	.LASF20:
 3416 058b 54696D65 		.ascii	"Timer_Claps_Stop\000"
 3416      725F436C 
 3416      6170735F 
 3416      53746F70 
 3416      00
 3417              	.LASF21:
 3418 059c 656E6162 		.ascii	"enableInterrupts\000"
 3418      6C65496E 
 3418      74657272 
 3418      75707473 
 3418      00
 3419              	.LASF68:
 3420 05ad 54696D65 		.ascii	"Timer_Claps_TriggerCommand\000"
 3420      725F436C 
 3420      6170735F 
 3420      54726967 
 3420      67657243 
 3421              	.LASF75:
 3422 05c8 54696D65 		.ascii	"Timer_Claps_ClearInterrupt\000"
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\ccxD6cDk.s 			page 90


 3422      725F436C 
 3422      6170735F 
 3422      436C6561 
 3422      72496E74 
 3423              	.LASF28:
 3424 05e3 54696D65 		.ascii	"Timer_Claps_SetOneShot\000"
 3424      725F436C 
 3424      6170735F 
 3424      5365744F 
 3424      6E655368 
 3425              	.LASF33:
 3426 05fa 73796E63 		.ascii	"syncKillEnable\000"
 3426      4B696C6C 
 3426      456E6162 
 3426      6C6500
 3427              	.LASF40:
 3428 0609 54696D65 		.ascii	"Timer_Claps_WriteCounter\000"
 3428      725F436C 
 3428      6170735F 
 3428      57726974 
 3428      65436F75 
 3429              	.LASF49:
 3430 0622 73776170 		.ascii	"swapEnable\000"
 3430      456E6162 
 3430      6C6500
 3431              	.LASF56:
 3432 062d 54696D65 		.ascii	"Timer_Claps_ReadCompare\000"
 3432      725F436C 
 3432      6170735F 
 3432      52656164 
 3432      436F6D70 
 3433              	.LASF59:
 3434 0645 54696D65 		.ascii	"Timer_Claps_ReadCompareBuf\000"
 3434      725F436C 
 3434      6170735F 
 3434      52656164 
 3434      436F6D70 
 3435              	.LASF57:
 3436 0660 54696D65 		.ascii	"Timer_Claps_WriteCompareBuf\000"
 3436      725F436C 
 3436      6170735F 
 3436      57726974 
 3436      65436F6D 
 3437              	.LASF23:
 3438 067c 54696D65 		.ascii	"Timer_Claps_SetQDMode\000"
 3438      725F436C 
 3438      6170735F 
 3438      53657451 
 3438      444D6F64 
 3439              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
