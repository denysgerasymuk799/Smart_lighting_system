ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_MIC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_MIC_initVar
  20              		.bss
  21              		.type	ADC_MIC_initVar, %object
  22              		.size	ADC_MIC_initVar, 1
  23              	ADC_MIC_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_MIC_offset,2,4
  26              		.comm	ADC_MIC_countsPer10Volt,4,4
  27              		.section	.rodata
  28              		.align	2
  29              		.type	ADC_MIC_channelsConfig, %object
  30              		.size	ADC_MIC_channelsConfig, 4
  31              	ADC_MIC_channelsConfig:
  32 0000 00040000 		.word	1024
  33              		.section	.text.ADC_MIC_Start,"ax",%progbits
  34              		.align	2
  35              		.global	ADC_MIC_Start
  36              		.code	16
  37              		.thumb_func
  38              		.type	ADC_MIC_Start, %function
  39              	ADC_MIC_Start:
  40              	.LFB2:
  41              		.file 1 "Generated_Source\\PSoC4\\ADC_MIC.c"
   1:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_MIC.c **** * File Name: ADC_MIC.c
   3:Generated_Source\PSoC4/ADC_MIC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC_MIC.c **** *
   5:Generated_Source\PSoC4/ADC_MIC.c **** * Description:
   6:Generated_Source\PSoC4/ADC_MIC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_MIC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_MIC.c **** *
   9:Generated_Source\PSoC4/ADC_MIC.c **** * Note:
  10:Generated_Source\PSoC4/ADC_MIC.c **** *
  11:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_MIC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_MIC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_MIC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_MIC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 2


  17:Generated_Source\PSoC4/ADC_MIC.c **** 
  18:Generated_Source\PSoC4/ADC_MIC.c **** #include "ADC_MIC.h"
  19:Generated_Source\PSoC4/ADC_MIC.c **** 
  20:Generated_Source\PSoC4/ADC_MIC.c **** 
  21:Generated_Source\PSoC4/ADC_MIC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_MIC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_MIC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_MIC.c **** uint8 ADC_MIC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_MIC.c **** volatile int16 ADC_MIC_offset[ADC_MIC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_MIC.c **** volatile int32 ADC_MIC_countsPer10Volt[ADC_MIC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC_MIC.c **** 
  28:Generated_Source\PSoC4/ADC_MIC.c **** 
  29:Generated_Source\PSoC4/ADC_MIC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_MIC.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC_MIC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_MIC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_MIC.c **** static const uint32 CYCODE ADC_MIC_channelsConfig[] = { 0x00000400u };
  34:Generated_Source\PSoC4/ADC_MIC.c **** 
  35:Generated_Source\PSoC4/ADC_MIC.c **** 
  36:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_Start
  38:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_MIC.c **** *
  40:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_MIC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_MIC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_MIC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_MIC.c **** *
  45:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
  47:Generated_Source\PSoC4/ADC_MIC.c **** *
  48:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
  49:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
  50:Generated_Source\PSoC4/ADC_MIC.c **** *
  51:Generated_Source\PSoC4/ADC_MIC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_MIC.c **** *  The ADC_MIC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_MIC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_MIC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_MIC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_MIC.c **** *  ADC_MIC_Start() routine.
  57:Generated_Source\PSoC4/ADC_MIC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_MIC.c **** *  to zero before call of ADC_MIC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_MIC.c **** *  ADC_MIC_Init() and ADC_MIC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_MIC.c **** *  ADC_MIC_Start() routine.
  61:Generated_Source\PSoC4/ADC_MIC.c **** *
  62:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_MIC.c **** void ADC_MIC_Start(void)
  64:Generated_Source\PSoC4/ADC_MIC.c **** {
  42              		.loc 1 64 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 3


  51              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC_MIC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_MIC.c ****     if(ADC_MIC_initVar == 0u)
  52              		.loc 1 66 0
  53 0004 064B     		ldr	r3, .L3
  54 0006 1B78     		ldrb	r3, [r3]
  55 0008 002B     		cmp	r3, #0
  56 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC_MIC.c ****     {
  68:Generated_Source\PSoC4/ADC_MIC.c ****         ADC_MIC_Init();
  57              		.loc 1 68 0
  58 000c FFF7FEFF 		bl	ADC_MIC_Init
  69:Generated_Source\PSoC4/ADC_MIC.c ****         ADC_MIC_initVar = 1u;
  59              		.loc 1 69 0
  60 0010 034B     		ldr	r3, .L3
  61 0012 0122     		movs	r2, #1
  62 0014 1A70     		strb	r2, [r3]
  63              	.L2:
  70:Generated_Source\PSoC4/ADC_MIC.c ****     }
  71:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_Enable();
  64              		.loc 1 71 0
  65 0016 FFF7FEFF 		bl	ADC_MIC_Enable
  72:Generated_Source\PSoC4/ADC_MIC.c **** }
  66              		.loc 1 72 0
  67 001a C046     		nop
  68 001c BD46     		mov	sp, r7
  69              		@ sp needed
  70 001e 80BD     		pop	{r7, pc}
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 0020 00000000 		.word	ADC_MIC_initVar
  75              		.cfi_endproc
  76              	.LFE2:
  77              		.size	ADC_MIC_Start, .-ADC_MIC_Start
  78              		.global	__aeabi_idiv
  79              		.section	.text.ADC_MIC_Init,"ax",%progbits
  80              		.align	2
  81              		.global	ADC_MIC_Init
  82              		.code	16
  83              		.thumb_func
  84              		.type	ADC_MIC_Init, %function
  85              	ADC_MIC_Init:
  86              	.LFB3:
  73:Generated_Source\PSoC4/ADC_MIC.c **** 
  74:Generated_Source\PSoC4/ADC_MIC.c **** 
  75:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_Init
  77:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_MIC.c **** *
  79:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_MIC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_MIC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_MIC.c **** *  ADC_MIC_Start().
  83:Generated_Source\PSoC4/ADC_MIC.c **** *
  84:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 4


  86:Generated_Source\PSoC4/ADC_MIC.c **** *
  87:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
  88:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
  89:Generated_Source\PSoC4/ADC_MIC.c **** *
  90:Generated_Source\PSoC4/ADC_MIC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_MIC.c **** *  The ADC_MIC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_MIC.c **** *
  93:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_MIC.c **** void ADC_MIC_Init(void)
  95:Generated_Source\PSoC4/ADC_MIC.c **** {
  87              		.loc 1 95 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 16
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 0000 80B5     		push	{r7, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 84B0     		sub	sp, sp, #16
  96              		.cfi_def_cfa_offset 24
  97 0004 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC_MIC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_MIC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_MIC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_MIC.c **** 
 100:Generated_Source\PSoC4/ADC_MIC.c ****     #if(ADC_MIC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_MIC.c ****         static const uint8 CYCODE ADC_MIC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_MIC.c ****         {
 103:Generated_Source\PSoC4/ADC_MIC.c ****             (uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_MIC.c ****             (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_MIC.c ****             ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_MIC.c ****              (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 7u */
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 5


 131:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_MIC.c ****                 ,(uint8)(ADC_MIC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_MIC.c ****                  (uint8)ADC_MIC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_MIC.c ****         };
 168:Generated_Source\PSoC4/ADC_MIC.c ****     #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_MIC.c **** 
 170:Generated_Source\PSoC4/ADC_MIC.c ****     #if(ADC_MIC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_MIC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_MIC.c ****         CyIntSetPriority(ADC_MIC_INTC_NUMBER, ADC_MIC_INTC_PRIOR_NUMBER);
  99              		.loc 1 172 0
 100 0006 0321     		movs	r1, #3
 101 0008 0F20     		movs	r0, #15
 102 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC_MIC.c ****         (void)CyIntSetVector(ADC_MIC_INTC_NUMBER, &ADC_MIC_ISR);
 103              		.loc 1 173 0
 104 000e 574B     		ldr	r3, .L16
 105 0010 1900     		movs	r1, r3
 106 0012 0F20     		movs	r0, #15
 107 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC_MIC.c ****     #endif   /* End ADC_MIC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_MIC.c **** 
 176:Generated_Source\PSoC4/ADC_MIC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_CHAN_EN_REG = ADC_MIC_DEFAULT_EN_CHANNELS;
 108              		.loc 1 177 0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 6


 109 0018 554B     		ldr	r3, .L16+4
 110 001a 0122     		movs	r2, #1
 111 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_CTRL_REG |= ADC_MIC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_MIC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC_MIC.c ****         (((ADC_MIC_PUMP_CTRL_REG & ADC_MIC_PUMP_CTRL_ENABLED) != 0u) ? 
 112              		.loc 1 180 0
 113 001e 554B     		ldr	r3, .L16+8
 114 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_CTRL_REG |= ADC_MIC_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 178 0
 116 0022 002B     		cmp	r3, #0
 117 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_CTRL_REG |= ADC_MIC_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 is_stmt 0 discriminator 1
 119 0026 5449     		ldr	r1, .L16+12
 120 0028 00E0     		b	.L7
 121              	.L6:
 178:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_CTRL_REG |= ADC_MIC_DEFAULT_CTRL_REG_CFG | 
 122              		.loc 1 178 0 discriminator 2
 123 002a 5449     		ldr	r1, .L16+16
 124              	.L7:
 178:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_CTRL_REG |= ADC_MIC_DEFAULT_CTRL_REG_CFG | 
 125              		.loc 1 178 0 discriminator 4
 126 002c 544B     		ldr	r3, .L16+20
 127 002e 544A     		ldr	r2, .L16+20
 128 0030 1268     		ldr	r2, [r2]
 129 0032 0A43     		orrs	r2, r1
 130 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC_MIC.c ****         ADC_MIC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_SAMPLE_CTRL_REG = ADC_MIC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 131              		.loc 1 182 0 is_stmt 1 discriminator 4
 132 0036 534B     		ldr	r3, .L16+24
 133 0038 534A     		ldr	r2, .L16+28
 134 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_RANGE_THRES_REG = ADC_MIC_DEFAULT_RANGE_THRES_REG_CFG;
 135              		.loc 1 183 0 discriminator 4
 136 003c 534B     		ldr	r3, .L16+32
 137 003e 544A     		ldr	r2, .L16+36
 138 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_RANGE_COND_REG  = ADC_MIC_COMPARE_MODE;
 139              		.loc 1 184 0 discriminator 4
 140 0042 544B     		ldr	r3, .L16+40
 141 0044 0022     		movs	r2, #0
 142 0046 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_SAMPLE_TIME01_REG = ADC_MIC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 143              		.loc 1 185 0 discriminator 4
 144 0048 534B     		ldr	r3, .L16+44
 145 004a 544A     		ldr	r2, .L16+48
 146 004c 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_SAMPLE_TIME23_REG = ADC_MIC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 147              		.loc 1 186 0 discriminator 4
 148 004e 544B     		ldr	r3, .L16+52
 149 0050 524A     		ldr	r2, .L16+48
 150 0052 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC_MIC.c ****     
 188:Generated_Source\PSoC4/ADC_MIC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 7


 189:Generated_Source\PSoC4/ADC_MIC.c ****     #if(ADC_MIC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_MIC.c ****         ADC_MIC_MUX_SWITCH0_REG |= ADC_MIC_DEFAULT_MUX_SWITCH0;
 151              		.loc 1 190 0 discriminator 4
 152 0054 534B     		ldr	r3, .L16+56
 153 0056 534A     		ldr	r2, .L16+56
 154 0058 1268     		ldr	r2, [r2]
 155 005a 8021     		movs	r1, #128
 156 005c 4902     		lsls	r1, r1, #9
 157 005e 0A43     		orrs	r2, r1
 158 0060 1A60     		str	r2, [r3]
 191:Generated_Source\PSoC4/ADC_MIC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC_MIC.c ****         #if(ADC_MIC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC_MIC.c ****             ADC_MIC_MUX_SWITCH_HW_CTRL_REG |= ADC_MIC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC_MIC.c ****         #endif /* ADC_MIC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_MIC.c ****     #endif /*ADC_MIC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_MIC.c **** 
 197:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_SATURATE_INTR_MASK_REG = 0u;
 159              		.loc 1 197 0 discriminator 4
 160 0062 514B     		ldr	r3, .L16+60
 161 0064 0022     		movs	r2, #0
 162 0066 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_RANGE_INTR_MASK_REG = 0u;
 163              		.loc 1 198 0 discriminator 4
 164 0068 504B     		ldr	r3, .L16+64
 165 006a 0022     		movs	r2, #0
 166 006c 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_INTR_MASK_REG = ADC_MIC_SAR_INTR_MASK;
 167              		.loc 1 199 0 discriminator 4
 168 006e 504B     		ldr	r3, .L16+68
 169 0070 0122     		movs	r2, #1
 170 0072 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC_MIC.c **** 
 201:Generated_Source\PSoC4/ADC_MIC.c ****     #if(ADC_MIC_CY_SAR_IP_VER == ADC_MIC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_MIC.c ****         ADC_MIC_ANA_TRIM_REG = ADC_MIC_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC_MIC.c ****     #endif /* (ADC_MIC_CY_SAR_IP_VER == ADC_MIC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_MIC.c **** 
 205:Generated_Source\PSoC4/ADC_MIC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_MIC.c ****     tmpRegVal = ADC_MIC_SAR_DFT_CTRL_REG;
 171              		.loc 1 206 0 discriminator 4
 172 0074 4F4B     		ldr	r3, .L16+72
 173 0076 1B68     		ldr	r3, [r3]
 174 0078 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC_MIC.c ****     tmpRegVal &= (uint32)~ADC_MIC_DCEN;
 175              		.loc 1 207 0 discriminator 4
 176 007a 7B68     		ldr	r3, [r7, #4]
 177 007c 4E4A     		ldr	r2, .L16+76
 178 007e 1340     		ands	r3, r2
 179 0080 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC_MIC.c ****     
 209:Generated_Source\PSoC4/ADC_MIC.c ****     #if(ADC_MIC_CY_SAR_IP_VER == ADC_MIC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_MIC.c ****         #if(ADC_MIC_NOMINAL_CLOCK_FREQ > (ADC_MIC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_MIC.c ****             tmpRegVal |= ADC_MIC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_MIC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_MIC.c ****             tmpRegVal |= ADC_MIC_DLY_INC;
 214:Generated_Source\PSoC4/ADC_MIC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_MIC.c ****     #else
 216:Generated_Source\PSoC4/ADC_MIC.c ****         #if ((ADC_MIC_DEFAULT_VREF_SEL == ADC_MIC__INTERNAL1024) || \
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 8


 217:Generated_Source\PSoC4/ADC_MIC.c ****              (ADC_MIC_DEFAULT_VREF_SEL == ADC_MIC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_MIC.c ****             tmpRegVal |= ADC_MIC_DLY_INC;
 219:Generated_Source\PSoC4/ADC_MIC.c ****         #else
 220:Generated_Source\PSoC4/ADC_MIC.c ****             tmpRegVal |= ADC_MIC_DCEN;
 180              		.loc 1 220 0 discriminator 4
 181 0082 7B68     		ldr	r3, [r7, #4]
 182 0084 8022     		movs	r2, #128
 183 0086 9205     		lsls	r2, r2, #22
 184 0088 1343     		orrs	r3, r2
 185 008a 7B60     		str	r3, [r7, #4]
 221:Generated_Source\PSoC4/ADC_MIC.c ****             tmpRegVal &= (uint32)~ADC_MIC_DLY_INC;
 186              		.loc 1 221 0 discriminator 4
 187 008c 7B68     		ldr	r3, [r7, #4]
 188 008e 0122     		movs	r2, #1
 189 0090 9343     		bics	r3, r2
 190 0092 7B60     		str	r3, [r7, #4]
 222:Generated_Source\PSoC4/ADC_MIC.c ****         #endif /* ((ADC_MIC_DEFAULT_VREF_SEL == ADC_MIC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC_MIC.c ****                    (ADC_MIC_DEFAULT_VREF_SEL == ADC_MIC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_MIC.c ****     #endif /* (ADC_MIC_CY_SAR_IP_VER == ADC_MIC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_MIC.c ****     
 226:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_DFT_CTRL_REG = tmpRegVal;
 191              		.loc 1 226 0 discriminator 4
 192 0094 474B     		ldr	r3, .L16+72
 193 0096 7A68     		ldr	r2, [r7, #4]
 194 0098 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC_MIC.c **** 
 228:Generated_Source\PSoC4/ADC_MIC.c ****     #if(ADC_MIC_MAX_RESOLUTION != ADC_MIC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_MIC.c ****         ADC_MIC_WOUNDING_REG = ADC_MIC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_MIC.c ****     #endif /* ADC_MIC_MAX_RESOLUTION != ADC_MIC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_MIC.c **** 
 232:Generated_Source\PSoC4/ADC_MIC.c ****     for(chNum = 0u; chNum < ADC_MIC_TOTAL_CHANNELS_NUM; chNum++)
 195              		.loc 1 232 0 discriminator 4
 196 009a 0023     		movs	r3, #0
 197 009c FB60     		str	r3, [r7, #12]
 198 009e 5EE0     		b	.L8
 199              	.L15:
 233:Generated_Source\PSoC4/ADC_MIC.c ****     {
 234:Generated_Source\PSoC4/ADC_MIC.c ****         tmpRegVal = (ADC_MIC_channelsConfig[chNum] & ADC_MIC_CHANNEL_CONFIG_MASK);
 200              		.loc 1 234 0
 201 00a0 8023     		movs	r3, #128
 202 00a2 DA00     		lsls	r2, r3, #3
 203 00a4 DC23     		movs	r3, #220
 204 00a6 9B01     		lsls	r3, r3, #6
 205 00a8 1340     		ands	r3, r2
 206 00aa 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC_MIC.c ****         #if(ADC_MIC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_MIC.c ****             tmpRegVal |= ADC_MIC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC_MIC.c ****         #endif /* End ADC_MIC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_MIC.c ****         
 239:Generated_Source\PSoC4/ADC_MIC.c ****         
 240:Generated_Source\PSoC4/ADC_MIC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_MIC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_MIC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_MIC.c ****         */
 244:Generated_Source\PSoC4/ADC_MIC.c ****         #if((ADC_MIC_MAX_RESOLUTION != ADC_MIC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_MIC.c ****             (ADC_MIC_ALT_WOUNDING == ADC_MIC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_MIC.c ****             tmpRegVal &= (uint32)(~ADC_MIC_ALT_RESOLUTION_ON);
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 9


 247:Generated_Source\PSoC4/ADC_MIC.c ****         #endif /* ADC_MIC_MAX_RESOLUTION != ADC_MIC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_MIC.c **** 
 249:Generated_Source\PSoC4/ADC_MIC.c ****         #if(ADC_MIC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_MIC.c ****         if(chNum < ADC_MIC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_MIC.c ****         #endif /* ADC_MIC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_MIC.c ****         {
 253:Generated_Source\PSoC4/ADC_MIC.c ****             CY_SET_REG32((reg32 *)(ADC_MIC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 207              		.loc 1 253 0
 208 00ac FB68     		ldr	r3, [r7, #12]
 209 00ae 9B00     		lsls	r3, r3, #2
 210 00b0 424A     		ldr	r2, .L16+80
 211 00b2 9446     		mov	ip, r2
 212 00b4 6344     		add	r3, r3, ip
 213 00b6 7A68     		ldr	r2, [r7, #4]
 214 00b8 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/ADC_MIC.c **** 
 255:Generated_Source\PSoC4/ADC_MIC.c ****             if((ADC_MIC_channelsConfig[chNum] & ADC_MIC_IS_SATURATE_EN_MASK) != 0u)
 215              		.loc 1 255 0
 216 00ba 8023     		movs	r3, #128
 217 00bc DB00     		lsls	r3, r3, #3
 218 00be 0122     		movs	r2, #1
 219 00c0 1340     		ands	r3, r2
 220 00c2 0AD0     		beq	.L9
 256:Generated_Source\PSoC4/ADC_MIC.c ****             {
 257:Generated_Source\PSoC4/ADC_MIC.c ****                 ADC_MIC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 221              		.loc 1 257 0
 222 00c4 384B     		ldr	r3, .L16+60
 223 00c6 384A     		ldr	r2, .L16+60
 224 00c8 1168     		ldr	r1, [r2]
 225 00ca 0120     		movs	r0, #1
 226 00cc FA68     		ldr	r2, [r7, #12]
 227 00ce 9040     		lsls	r0, r0, r2
 228 00d0 0200     		movs	r2, r0
 229 00d2 1204     		lsls	r2, r2, #16
 230 00d4 120C     		lsrs	r2, r2, #16
 231 00d6 0A43     		orrs	r2, r1
 232 00d8 1A60     		str	r2, [r3]
 233              	.L9:
 258:Generated_Source\PSoC4/ADC_MIC.c ****             }
 259:Generated_Source\PSoC4/ADC_MIC.c **** 
 260:Generated_Source\PSoC4/ADC_MIC.c ****             if((ADC_MIC_channelsConfig[chNum] & ADC_MIC_IS_RANGE_CTRL_EN_MASK) != 0u)
 234              		.loc 1 260 0
 235 00da 8023     		movs	r3, #128
 236 00dc DB00     		lsls	r3, r3, #3
 237 00de 0222     		movs	r2, #2
 238 00e0 1340     		ands	r3, r2
 239 00e2 0AD0     		beq	.L10
 261:Generated_Source\PSoC4/ADC_MIC.c ****             {
 262:Generated_Source\PSoC4/ADC_MIC.c ****                 ADC_MIC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 240              		.loc 1 262 0
 241 00e4 314B     		ldr	r3, .L16+64
 242 00e6 314A     		ldr	r2, .L16+64
 243 00e8 1168     		ldr	r1, [r2]
 244 00ea 0120     		movs	r0, #1
 245 00ec FA68     		ldr	r2, [r7, #12]
 246 00ee 9040     		lsls	r0, r0, r2
 247 00f0 0200     		movs	r2, r0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 10


 248 00f2 1204     		lsls	r2, r2, #16
 249 00f4 120C     		lsrs	r2, r2, #16
 250 00f6 0A43     		orrs	r2, r1
 251 00f8 1A60     		str	r2, [r3]
 252              	.L10:
 263:Generated_Source\PSoC4/ADC_MIC.c ****             }
 264:Generated_Source\PSoC4/ADC_MIC.c ****         }
 265:Generated_Source\PSoC4/ADC_MIC.c ****         #if(ADC_MIC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_MIC.c ****             else
 267:Generated_Source\PSoC4/ADC_MIC.c ****             {
 268:Generated_Source\PSoC4/ADC_MIC.c ****                 CY_SET_REG32(ADC_MIC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_MIC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC_MIC.c **** 
 270:Generated_Source\PSoC4/ADC_MIC.c ****                 if((ADC_MIC_channelsConfig[chNum] & ADC_MIC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC_MIC.c ****                 {
 272:Generated_Source\PSoC4/ADC_MIC.c ****                     ADC_MIC_SAR_INTR_MASK_REG |= ADC_MIC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC_MIC.c ****                 }
 274:Generated_Source\PSoC4/ADC_MIC.c **** 
 275:Generated_Source\PSoC4/ADC_MIC.c ****                 if((ADC_MIC_channelsConfig[chNum] & ADC_MIC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC_MIC.c ****                 {
 277:Generated_Source\PSoC4/ADC_MIC.c ****                     ADC_MIC_SAR_INTR_MASK_REG |= ADC_MIC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC_MIC.c ****                 }
 279:Generated_Source\PSoC4/ADC_MIC.c ****             }
 280:Generated_Source\PSoC4/ADC_MIC.c ****         #endif /* ADC_MIC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_MIC.c **** 
 282:Generated_Source\PSoC4/ADC_MIC.c ****         if((ADC_MIC_channelsConfig[chNum] & ADC_MIC_ALT_RESOLUTION_ON) != 0u)
 253              		.loc 1 282 0
 254 00fa 8023     		movs	r3, #128
 255 00fc DA00     		lsls	r2, r3, #3
 256 00fe 8023     		movs	r3, #128
 257 0100 9B00     		lsls	r3, r3, #2
 258 0102 1340     		ands	r3, r2
 259 0104 03D0     		beq	.L11
 283:Generated_Source\PSoC4/ADC_MIC.c ****         {
 284:Generated_Source\PSoC4/ADC_MIC.c ****                counts = (int32)ADC_MIC_DEFAULT_MAX_WRK_ALT;
 260              		.loc 1 284 0
 261 0106 8023     		movs	r3, #128
 262 0108 5B00     		lsls	r3, r3, #1
 263 010a BB60     		str	r3, [r7, #8]
 264 010c 02E0     		b	.L12
 265              	.L11:
 285:Generated_Source\PSoC4/ADC_MIC.c ****         }
 286:Generated_Source\PSoC4/ADC_MIC.c ****         else
 287:Generated_Source\PSoC4/ADC_MIC.c ****         {
 288:Generated_Source\PSoC4/ADC_MIC.c ****                counts = (int32)ADC_MIC_SAR_WRK_MAX_12BIT;
 266              		.loc 1 288 0
 267 010e 8023     		movs	r3, #128
 268 0110 5B01     		lsls	r3, r3, #5
 269 0112 BB60     		str	r3, [r7, #8]
 270              	.L12:
 289:Generated_Source\PSoC4/ADC_MIC.c ****         }
 290:Generated_Source\PSoC4/ADC_MIC.c **** 
 291:Generated_Source\PSoC4/ADC_MIC.c ****         if((ADC_MIC_channelsConfig[chNum] & ADC_MIC_DIFFERENTIAL_EN) == 0u)
 271              		.loc 1 291 0
 272 0114 8023     		movs	r3, #128
 273 0116 DA00     		lsls	r2, r3, #3
 274 0118 8023     		movs	r3, #128
 275 011a 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 11


 276 011c 1340     		ands	r3, r2
 277 011e 05D1     		bne	.L13
 292:Generated_Source\PSoC4/ADC_MIC.c ****         {
 293:Generated_Source\PSoC4/ADC_MIC.c ****             #if((ADC_MIC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_MIC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_MIC.c ****                 (ADC_MIC_DEFAULT_NEG_INPUT_SEL == ADC_MIC__VREF))
 295:Generated_Source\PSoC4/ADC_MIC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_MIC.c ****                 ADC_MIC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_MIC.c ****             #else
 298:Generated_Source\PSoC4/ADC_MIC.c ****                 ADC_MIC_offset[chNum] = 0;
 278              		.loc 1 298 0
 279 0120 274B     		ldr	r3, .L16+84
 280 0122 FA68     		ldr	r2, [r7, #12]
 281 0124 5200     		lsls	r2, r2, #1
 282 0126 0021     		movs	r1, #0
 283 0128 D152     		strh	r1, [r2, r3]
 284 012a 04E0     		b	.L14
 285              	.L13:
 299:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_MIC__FSIGNED */
 300:Generated_Source\PSoC4/ADC_MIC.c ****         }
 301:Generated_Source\PSoC4/ADC_MIC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_MIC.c ****         {
 303:Generated_Source\PSoC4/ADC_MIC.c ****             #if(ADC_MIC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_MIC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_MIC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_MIC.c ****                 ADC_MIC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC_MIC.c ****             #else
 307:Generated_Source\PSoC4/ADC_MIC.c ****                 ADC_MIC_offset[chNum] = 0;
 286              		.loc 1 307 0
 287 012c 244B     		ldr	r3, .L16+84
 288 012e FA68     		ldr	r2, [r7, #12]
 289 0130 5200     		lsls	r2, r2, #1
 290 0132 0021     		movs	r1, #0
 291 0134 D152     		strh	r1, [r2, r3]
 292              	.L14:
 308:Generated_Source\PSoC4/ADC_MIC.c ****             #endif /* end ADC_MIC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_MIC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC_MIC.c ****         }
 310:Generated_Source\PSoC4/ADC_MIC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_MIC.c ****         ADC_MIC_countsPer10Volt[chNum] = (int16)(((counts * ADC_MIC_10MV_COUNTS) +
 293              		.loc 1 311 0 discriminator 2
 294 0136 BB68     		ldr	r3, [r7, #8]
 295 0138 224A     		ldr	r2, .L16+88
 296 013a 5343     		muls	r3, r2
 297 013c 224A     		ldr	r2, .L16+92
 298 013e 9446     		mov	ip, r2
 299 0140 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC_MIC.c ****                             ADC_MIC_DEFAULT_VREF_MV_VALUE) / (ADC_MIC_DEFAULT_VREF_MV_VALUE * 2));
 300              		.loc 1 312 0 discriminator 2
 301 0142 2249     		ldr	r1, .L16+96
 302 0144 1800     		movs	r0, r3
 303 0146 FFF7FEFF 		bl	__aeabi_idiv
 304 014a 0300     		movs	r3, r0
 311:Generated_Source\PSoC4/ADC_MIC.c ****                             ADC_MIC_DEFAULT_VREF_MV_VALUE) / (ADC_MIC_DEFAULT_VREF_MV_VALUE * 2));
 305              		.loc 1 311 0 discriminator 2
 306 014c 1BB2     		sxth	r3, r3
 307 014e 1900     		movs	r1, r3
 308 0150 1F4B     		ldr	r3, .L16+100
 309 0152 FA68     		ldr	r2, [r7, #12]
 310 0154 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 12


 311 0156 D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC_MIC.c ****     {
 312              		.loc 1 232 0 discriminator 2
 313 0158 FB68     		ldr	r3, [r7, #12]
 314 015a 0133     		adds	r3, r3, #1
 315 015c FB60     		str	r3, [r7, #12]
 316              	.L8:
 232:Generated_Source\PSoC4/ADC_MIC.c ****     {
 317              		.loc 1 232 0 is_stmt 0 discriminator 1
 318 015e FB68     		ldr	r3, [r7, #12]
 319 0160 002B     		cmp	r3, #0
 320 0162 9DD0     		beq	.L15
 313:Generated_Source\PSoC4/ADC_MIC.c ****     }
 314:Generated_Source\PSoC4/ADC_MIC.c **** }
 321              		.loc 1 314 0 is_stmt 1
 322 0164 C046     		nop
 323 0166 BD46     		mov	sp, r7
 324 0168 04B0     		add	sp, sp, #16
 325              		@ sp needed
 326 016a 80BD     		pop	{r7, pc}
 327              	.L17:
 328              		.align	2
 329              	.L16:
 330 016c 00000000 		.word	ADC_MIC_ISR
 331 0170 20003A40 		.word	1077542944
 332 0174 80033A40 		.word	1077543808
 333 0178 70021053 		.word	1393558128
 334 017c 70020053 		.word	1392509552
 335 0180 00003A40 		.word	1077542912
 336 0184 04003A40 		.word	1077542916
 337 0188 8C000080 		.word	-2147483508
 338 018c 18003A40 		.word	1077542936
 339 0190 0000FF07 		.word	134152192
 340 0194 1C003A40 		.word	1077542940
 341 0198 10003A40 		.word	1077542928
 342 019c 02000200 		.word	131074
 343 01a0 14003A40 		.word	1077542932
 344 01a4 00033A40 		.word	1077543680
 345 01a8 28023A40 		.word	1077543464
 346 01ac 38023A40 		.word	1077543480
 347 01b0 18023A40 		.word	1077543448
 348 01b4 30003A40 		.word	1077542960
 349 01b8 FFFFFFDF 		.word	-536870913
 350 01bc 80003A40 		.word	1077543040
 351 01c0 00000000 		.word	ADC_MIC_offset
 352 01c4 10270000 		.word	10000
 353 01c8 E40C0000 		.word	3300
 354 01cc C8190000 		.word	6600
 355 01d0 00000000 		.word	ADC_MIC_countsPer10Volt
 356              		.cfi_endproc
 357              	.LFE3:
 358              		.size	ADC_MIC_Init, .-ADC_MIC_Init
 359              		.section	.text.ADC_MIC_Enable,"ax",%progbits
 360              		.align	2
 361              		.global	ADC_MIC_Enable
 362              		.code	16
 363              		.thumb_func
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 13


 364              		.type	ADC_MIC_Enable, %function
 365              	ADC_MIC_Enable:
 366              	.LFB4:
 315:Generated_Source\PSoC4/ADC_MIC.c **** 
 316:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_MIC.c **** *
 320:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_MIC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_MIC.c **** *
 323:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 325:Generated_Source\PSoC4/ADC_MIC.c **** *
 326:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
 327:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 328:Generated_Source\PSoC4/ADC_MIC.c **** *
 329:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_MIC.c **** void ADC_MIC_Enable(void)
 331:Generated_Source\PSoC4/ADC_MIC.c **** {
 367              		.loc 1 331 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371 0000 80B5     		push	{r7, lr}
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 7, -8
 374              		.cfi_offset 14, -4
 375 0002 00AF     		add	r7, sp, #0
 376              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC_MIC.c ****     if (0u == (ADC_MIC_SAR_CTRL_REG & ADC_MIC_ENABLE))
 377              		.loc 1 332 0
 378 0004 0A4B     		ldr	r3, .L22
 379 0006 1B68     		ldr	r3, [r3]
 380 0008 002B     		cmp	r3, #0
 381 000a 0EDB     		blt	.L21
 333:Generated_Source\PSoC4/ADC_MIC.c ****     {
 334:Generated_Source\PSoC4/ADC_MIC.c ****         #if(ADC_MIC_CY_SAR_IP_VER != ADC_MIC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_MIC.c **** 
 336:Generated_Source\PSoC4/ADC_MIC.c ****             while (0u != (ADC_MIC_SAR_STATUS_REG & ADC_MIC_STATUS_BUSY))
 382              		.loc 1 336 0
 383 000c C046     		nop
 384              	.L20:
 385              		.loc 1 336 0 is_stmt 0 discriminator 1
 386 000e 094B     		ldr	r3, .L22+4
 387 0010 1B68     		ldr	r3, [r3]
 388 0012 002B     		cmp	r3, #0
 389 0014 FBDB     		blt	.L20
 337:Generated_Source\PSoC4/ADC_MIC.c ****             {
 338:Generated_Source\PSoC4/ADC_MIC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_MIC.c ****             }
 340:Generated_Source\PSoC4/ADC_MIC.c ****         #endif /* (ADC_MIC_CY_SAR_IP_VER != ADC_MIC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_MIC.c ****         
 342:Generated_Source\PSoC4/ADC_MIC.c ****         ADC_MIC_SAR_CTRL_REG |= ADC_MIC_ENABLE;
 390              		.loc 1 342 0 is_stmt 1
 391 0016 064B     		ldr	r3, .L22
 392 0018 054A     		ldr	r2, .L22
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 14


 393 001a 1268     		ldr	r2, [r2]
 394 001c 8021     		movs	r1, #128
 395 001e 0906     		lsls	r1, r1, #24
 396 0020 0A43     		orrs	r2, r1
 397 0022 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC_MIC.c ****         
 344:Generated_Source\PSoC4/ADC_MIC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_MIC.c ****         CyDelayUs(ADC_MIC_10US_DELAY);         
 398              		.loc 1 345 0
 399 0024 0A20     		movs	r0, #10
 400 0026 FFF7FEFF 		bl	CyDelayUs
 401              	.L21:
 346:Generated_Source\PSoC4/ADC_MIC.c ****     }
 347:Generated_Source\PSoC4/ADC_MIC.c **** }
 402              		.loc 1 347 0
 403 002a C046     		nop
 404 002c BD46     		mov	sp, r7
 405              		@ sp needed
 406 002e 80BD     		pop	{r7, pc}
 407              	.L23:
 408              		.align	2
 409              	.L22:
 410 0030 00003A40 		.word	1077542912
 411 0034 08023A40 		.word	1077543432
 412              		.cfi_endproc
 413              	.LFE4:
 414              		.size	ADC_MIC_Enable, .-ADC_MIC_Enable
 415              		.section	.text.ADC_MIC_Stop,"ax",%progbits
 416              		.align	2
 417              		.global	ADC_MIC_Stop
 418              		.code	16
 419              		.thumb_func
 420              		.type	ADC_MIC_Stop, %function
 421              	ADC_MIC_Stop:
 422              	.LFB5:
 348:Generated_Source\PSoC4/ADC_MIC.c **** 
 349:Generated_Source\PSoC4/ADC_MIC.c **** 
 350:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_Stop
 352:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_MIC.c **** *
 354:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_MIC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_MIC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_MIC.c **** *
 358:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 360:Generated_Source\PSoC4/ADC_MIC.c **** *
 361:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
 362:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 363:Generated_Source\PSoC4/ADC_MIC.c **** *
 364:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_MIC.c **** void ADC_MIC_Stop(void)
 366:Generated_Source\PSoC4/ADC_MIC.c **** {
 423              		.loc 1 366 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 15


 426              		@ frame_needed = 1, uses_anonymous_args = 0
 427 0000 80B5     		push	{r7, lr}
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 00AF     		add	r7, sp, #0
 432              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_CTRL_REG &= (uint32)~ADC_MIC_ENABLE;
 433              		.loc 1 367 0
 434 0004 044B     		ldr	r3, .L25
 435 0006 044A     		ldr	r2, .L25
 436 0008 1268     		ldr	r2, [r2]
 437 000a 5200     		lsls	r2, r2, #1
 438 000c 5208     		lsrs	r2, r2, #1
 439 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC_MIC.c **** }
 440              		.loc 1 368 0
 441 0010 C046     		nop
 442 0012 BD46     		mov	sp, r7
 443              		@ sp needed
 444 0014 80BD     		pop	{r7, pc}
 445              	.L26:
 446 0016 C046     		.align	2
 447              	.L25:
 448 0018 00003A40 		.word	1077542912
 449              		.cfi_endproc
 450              	.LFE5:
 451              		.size	ADC_MIC_Stop, .-ADC_MIC_Stop
 452              		.section	.text.ADC_MIC_StartConvert,"ax",%progbits
 453              		.align	2
 454              		.global	ADC_MIC_StartConvert
 455              		.code	16
 456              		.thumb_func
 457              		.type	ADC_MIC_StartConvert, %function
 458              	ADC_MIC_StartConvert:
 459              	.LFB6:
 369:Generated_Source\PSoC4/ADC_MIC.c **** 
 370:Generated_Source\PSoC4/ADC_MIC.c **** 
 371:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_StartConvert
 373:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_MIC.c **** *
 375:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_MIC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_MIC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_MIC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_MIC.c **** *
 380:Generated_Source\PSoC4/ADC_MIC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_MIC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_MIC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC_MIC.c **** *
 384:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 386:Generated_Source\PSoC4/ADC_MIC.c **** *
 387:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
 388:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 389:Generated_Source\PSoC4/ADC_MIC.c **** *
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 16


 390:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_MIC.c **** void ADC_MIC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_MIC.c **** {
 460              		.loc 1 392 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 1, uses_anonymous_args = 0
 464 0000 80B5     		push	{r7, lr}
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 7, -8
 467              		.cfi_offset 14, -4
 468 0002 00AF     		add	r7, sp, #0
 469              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC_MIC.c ****     #if(ADC_MIC_DEFAULT_SAMPLE_MODE_SEL == ADC_MIC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_MIC.c ****         ADC_MIC_SAR_SAMPLE_CTRL_REG |= ADC_MIC_CONTINUOUS_EN;
 470              		.loc 1 394 0
 471 0004 044B     		ldr	r3, .L28
 472 0006 044A     		ldr	r2, .L28
 473 0008 1268     		ldr	r2, [r2]
 474 000a 8021     		movs	r1, #128
 475 000c 4902     		lsls	r1, r1, #9
 476 000e 0A43     		orrs	r2, r1
 477 0010 1A60     		str	r2, [r3]
 395:Generated_Source\PSoC4/ADC_MIC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_MIC.c ****         ADC_MIC_SAR_START_CTRL_REG = ADC_MIC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_MIC.c ****     #endif /* End ADC_MIC_DEFAULT_SAMPLE_MODE == ADC_MIC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_MIC.c **** 
 399:Generated_Source\PSoC4/ADC_MIC.c **** }
 478              		.loc 1 399 0
 479 0012 C046     		nop
 480 0014 BD46     		mov	sp, r7
 481              		@ sp needed
 482 0016 80BD     		pop	{r7, pc}
 483              	.L29:
 484              		.align	2
 485              	.L28:
 486 0018 04003A40 		.word	1077542916
 487              		.cfi_endproc
 488              	.LFE6:
 489              		.size	ADC_MIC_StartConvert, .-ADC_MIC_StartConvert
 490              		.section	.text.ADC_MIC_StopConvert,"ax",%progbits
 491              		.align	2
 492              		.global	ADC_MIC_StopConvert
 493              		.code	16
 494              		.thumb_func
 495              		.type	ADC_MIC_StopConvert, %function
 496              	ADC_MIC_StopConvert:
 497              	.LFB7:
 400:Generated_Source\PSoC4/ADC_MIC.c **** 
 401:Generated_Source\PSoC4/ADC_MIC.c **** 
 402:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_StopConvert
 404:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_MIC.c **** *
 406:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_MIC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_MIC.c **** *
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 17


 409:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 411:Generated_Source\PSoC4/ADC_MIC.c **** *
 412:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
 413:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 414:Generated_Source\PSoC4/ADC_MIC.c **** *
 415:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_MIC.c **** void ADC_MIC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_MIC.c **** {
 498              		.loc 1 417 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 0000 80B5     		push	{r7, lr}
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 00AF     		add	r7, sp, #0
 507              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC_MIC.c ****     #if(ADC_MIC_DEFAULT_SAMPLE_MODE_SEL == ADC_MIC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_MIC.c ****         ADC_MIC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_MIC_CONTINUOUS_EN);
 508              		.loc 1 419 0
 509 0004 044B     		ldr	r3, .L31
 510 0006 044A     		ldr	r2, .L31
 511 0008 1268     		ldr	r2, [r2]
 512 000a 0449     		ldr	r1, .L31+4
 513 000c 0A40     		ands	r2, r1
 514 000e 1A60     		str	r2, [r3]
 420:Generated_Source\PSoC4/ADC_MIC.c ****     #endif /* ADC_MIC_DEFAULT_SAMPLE_MODE == ADC_MIC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_MIC.c **** }
 515              		.loc 1 421 0
 516 0010 C046     		nop
 517 0012 BD46     		mov	sp, r7
 518              		@ sp needed
 519 0014 80BD     		pop	{r7, pc}
 520              	.L32:
 521 0016 C046     		.align	2
 522              	.L31:
 523 0018 04003A40 		.word	1077542916
 524 001c FFFFFEFF 		.word	-65537
 525              		.cfi_endproc
 526              	.LFE7:
 527              		.size	ADC_MIC_StopConvert, .-ADC_MIC_StopConvert
 528              		.section	.text.ADC_MIC_IsEndConversion,"ax",%progbits
 529              		.align	2
 530              		.global	ADC_MIC_IsEndConversion
 531              		.code	16
 532              		.thumb_func
 533              		.type	ADC_MIC_IsEndConversion, %function
 534              	ADC_MIC_IsEndConversion:
 535              	.LFB8:
 422:Generated_Source\PSoC4/ADC_MIC.c **** 
 423:Generated_Source\PSoC4/ADC_MIC.c **** 
 424:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_IsEndConversion
 426:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_MIC.c **** *
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 18


 428:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_MIC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_MIC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_MIC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_MIC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_MIC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_MIC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_MIC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_MIC.c **** *
 437:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_MIC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_MIC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_MIC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_MIC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_MIC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_MIC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_MIC.c **** *
 445:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
 446:Generated_Source\PSoC4/ADC_MIC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_MIC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_MIC.c **** *
 449:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_MIC.c **** uint32 ADC_MIC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_MIC.c **** {
 536              		.loc 1 451 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 16
 539              		@ frame_needed = 1, uses_anonymous_args = 0
 540 0000 80B5     		push	{r7, lr}
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 84B0     		sub	sp, sp, #16
 545              		.cfi_def_cfa_offset 24
 546 0004 00AF     		add	r7, sp, #0
 547              		.cfi_def_cfa_register 7
 548 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/ADC_MIC.c ****     uint32 status = 0u;
 549              		.loc 1 452 0
 550 0008 0023     		movs	r3, #0
 551 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC_MIC.c **** 
 454:Generated_Source\PSoC4/ADC_MIC.c ****     if((retMode & (ADC_MIC_RETURN_STATUS | ADC_MIC_WAIT_FOR_RESULT)) != 0u)
 552              		.loc 1 454 0
 553 000c 7B68     		ldr	r3, [r7, #4]
 554 000e 0322     		movs	r2, #3
 555 0010 1340     		ands	r3, r2
 556 0012 11D0     		beq	.L34
 557              	.L36:
 455:Generated_Source\PSoC4/ADC_MIC.c ****     {
 456:Generated_Source\PSoC4/ADC_MIC.c ****         do
 457:Generated_Source\PSoC4/ADC_MIC.c ****         {
 458:Generated_Source\PSoC4/ADC_MIC.c ****             status = ADC_MIC_SAR_INTR_REG & ADC_MIC_EOS_MASK;
 558              		.loc 1 458 0 discriminator 2
 559 0014 0B4B     		ldr	r3, .L38
 560 0016 1B68     		ldr	r3, [r3]
 561 0018 0122     		movs	r2, #1
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 19


 562 001a 1340     		ands	r3, r2
 563 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC_MIC.c ****         }while((status == 0u) && ((retMode & ADC_MIC_WAIT_FOR_RESULT) != 0u));
 564              		.loc 1 459 0 discriminator 2
 565 001e FB68     		ldr	r3, [r7, #12]
 566 0020 002B     		cmp	r3, #0
 567 0022 03D1     		bne	.L35
 568              		.loc 1 459 0 is_stmt 0 discriminator 1
 569 0024 7B68     		ldr	r3, [r7, #4]
 570 0026 0222     		movs	r2, #2
 571 0028 1340     		ands	r3, r2
 572 002a F3D1     		bne	.L36
 573              	.L35:
 460:Generated_Source\PSoC4/ADC_MIC.c **** 
 461:Generated_Source\PSoC4/ADC_MIC.c ****         if(status != 0u)
 574              		.loc 1 461 0 is_stmt 1
 575 002c FB68     		ldr	r3, [r7, #12]
 576 002e 002B     		cmp	r3, #0
 577 0030 02D0     		beq	.L34
 462:Generated_Source\PSoC4/ADC_MIC.c ****         {
 463:Generated_Source\PSoC4/ADC_MIC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_MIC.c ****             ADC_MIC_SAR_INTR_REG = ADC_MIC_EOS_MASK;
 578              		.loc 1 464 0
 579 0032 044B     		ldr	r3, .L38
 580 0034 0122     		movs	r2, #1
 581 0036 1A60     		str	r2, [r3]
 582              	.L34:
 465:Generated_Source\PSoC4/ADC_MIC.c ****         }
 466:Generated_Source\PSoC4/ADC_MIC.c ****     }
 467:Generated_Source\PSoC4/ADC_MIC.c **** 
 468:Generated_Source\PSoC4/ADC_MIC.c ****     #if(ADC_MIC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_MIC.c ****         if((retMode & (ADC_MIC_RETURN_STATUS_INJ | ADC_MIC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_MIC.c ****         {
 471:Generated_Source\PSoC4/ADC_MIC.c ****             do
 472:Generated_Source\PSoC4/ADC_MIC.c ****             {
 473:Generated_Source\PSoC4/ADC_MIC.c ****                 status |= ADC_MIC_SAR_INTR_REG & ADC_MIC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_MIC.c ****             }while(((status & ADC_MIC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC_MIC.c ****                    ((retMode & ADC_MIC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_MIC.c **** 
 477:Generated_Source\PSoC4/ADC_MIC.c ****             if((status & ADC_MIC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_MIC.c ****             {
 479:Generated_Source\PSoC4/ADC_MIC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_MIC.c ****                 ADC_MIC_SAR_INTR_REG = ADC_MIC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_MIC.c ****             }
 482:Generated_Source\PSoC4/ADC_MIC.c ****         }
 483:Generated_Source\PSoC4/ADC_MIC.c ****     #endif /* ADC_MIC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_MIC.c **** 
 485:Generated_Source\PSoC4/ADC_MIC.c ****     return (status);
 583              		.loc 1 485 0
 584 0038 FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/ADC_MIC.c **** }
 585              		.loc 1 486 0
 586 003a 1800     		movs	r0, r3
 587 003c BD46     		mov	sp, r7
 588 003e 04B0     		add	sp, sp, #16
 589              		@ sp needed
 590 0040 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 20


 591              	.L39:
 592 0042 C046     		.align	2
 593              	.L38:
 594 0044 10023A40 		.word	1077543440
 595              		.cfi_endproc
 596              	.LFE8:
 597              		.size	ADC_MIC_IsEndConversion, .-ADC_MIC_IsEndConversion
 598              		.section	.text.ADC_MIC_GetResult16,"ax",%progbits
 599              		.align	2
 600              		.global	ADC_MIC_GetResult16
 601              		.code	16
 602              		.thumb_func
 603              		.type	ADC_MIC_GetResult16, %function
 604              	ADC_MIC_GetResult16:
 605              	.LFB9:
 487:Generated_Source\PSoC4/ADC_MIC.c **** 
 488:Generated_Source\PSoC4/ADC_MIC.c **** 
 489:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_GetResult16
 491:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_MIC.c **** *
 493:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_MIC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_MIC.c **** *
 496:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_MIC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_MIC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_MIC.c **** *
 500:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
 501:Generated_Source\PSoC4/ADC_MIC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_MIC.c **** *
 503:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_MIC.c **** int16 ADC_MIC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_MIC.c **** {
 606              		.loc 1 505 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 16
 609              		@ frame_needed = 1, uses_anonymous_args = 0
 610 0000 80B5     		push	{r7, lr}
 611              		.cfi_def_cfa_offset 8
 612              		.cfi_offset 7, -8
 613              		.cfi_offset 14, -4
 614 0002 84B0     		sub	sp, sp, #16
 615              		.cfi_def_cfa_offset 24
 616 0004 00AF     		add	r7, sp, #0
 617              		.cfi_def_cfa_register 7
 618 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC_MIC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_MIC.c **** 
 508:Generated_Source\PSoC4/ADC_MIC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC_MIC.c ****     CYASSERT(chan < ADC_MIC_TOTAL_CHANNELS_NUM);
 619              		.loc 1 509 0
 620 0008 7B68     		ldr	r3, [r7, #4]
 621 000a 002B     		cmp	r3, #0
 622 000c 02D0     		beq	.L41
 623              		.loc 1 509 0 is_stmt 0 discriminator 1
 624 000e 0020     		movs	r0, #0
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 21


 625 0010 FFF7FEFF 		bl	CyHalt
 626              	.L41:
 510:Generated_Source\PSoC4/ADC_MIC.c **** 
 511:Generated_Source\PSoC4/ADC_MIC.c ****     if(chan < ADC_MIC_SEQUENCED_CHANNELS_NUM)
 627              		.loc 1 511 0 is_stmt 1
 628 0014 7B68     		ldr	r3, [r7, #4]
 629 0016 002B     		cmp	r3, #0
 630 0018 09D1     		bne	.L42
 512:Generated_Source\PSoC4/ADC_MIC.c ****     {
 513:Generated_Source\PSoC4/ADC_MIC.c ****         result = CY_GET_REG32((reg32 *)(ADC_MIC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 631              		.loc 1 513 0
 632 001a 7B68     		ldr	r3, [r7, #4]
 633 001c 9B00     		lsls	r3, r3, #2
 634 001e 084A     		ldr	r2, .L45
 635 0020 9446     		mov	ip, r2
 636 0022 6344     		add	r3, r3, ip
 637 0024 1B68     		ldr	r3, [r3]
 638 0026 1B04     		lsls	r3, r3, #16
 639 0028 1B0C     		lsrs	r3, r3, #16
 640 002a FB60     		str	r3, [r7, #12]
 641 002c 01E0     		b	.L43
 642              	.L42:
 514:Generated_Source\PSoC4/ADC_MIC.c ****                 ADC_MIC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_MIC.c ****     }
 516:Generated_Source\PSoC4/ADC_MIC.c ****     else
 517:Generated_Source\PSoC4/ADC_MIC.c ****     {
 518:Generated_Source\PSoC4/ADC_MIC.c ****         #if(ADC_MIC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_MIC.c ****             result = ADC_MIC_SAR_INJ_RESULT_REG & ADC_MIC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC_MIC.c ****         #else
 521:Generated_Source\PSoC4/ADC_MIC.c ****             result = 0u;
 643              		.loc 1 521 0
 644 002e 0023     		movs	r3, #0
 645 0030 FB60     		str	r3, [r7, #12]
 646              	.L43:
 522:Generated_Source\PSoC4/ADC_MIC.c ****         #endif /* ADC_MIC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_MIC.c ****     }
 524:Generated_Source\PSoC4/ADC_MIC.c **** 
 525:Generated_Source\PSoC4/ADC_MIC.c ****     return ( (int16)result );
 647              		.loc 1 525 0
 648 0032 FB68     		ldr	r3, [r7, #12]
 649 0034 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC_MIC.c **** }
 650              		.loc 1 526 0
 651 0036 1800     		movs	r0, r3
 652 0038 BD46     		mov	sp, r7
 653 003a 04B0     		add	sp, sp, #16
 654              		@ sp needed
 655 003c 80BD     		pop	{r7, pc}
 656              	.L46:
 657 003e C046     		.align	2
 658              	.L45:
 659 0040 80013A40 		.word	1077543296
 660              		.cfi_endproc
 661              	.LFE9:
 662              		.size	ADC_MIC_GetResult16, .-ADC_MIC_GetResult16
 663              		.section	.text.ADC_MIC_SetChanMask,"ax",%progbits
 664              		.align	2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 22


 665              		.global	ADC_MIC_SetChanMask
 666              		.code	16
 667              		.thumb_func
 668              		.type	ADC_MIC_SetChanMask, %function
 669              	ADC_MIC_SetChanMask:
 670              	.LFB10:
 527:Generated_Source\PSoC4/ADC_MIC.c **** 
 528:Generated_Source\PSoC4/ADC_MIC.c **** 
 529:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_SetChanMask
 531:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_MIC.c **** *
 533:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_MIC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_MIC.c **** *
 536:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_MIC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_MIC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_MIC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_MIC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_MIC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_MIC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_MIC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_MIC.c **** *
 545:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
 546:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 547:Generated_Source\PSoC4/ADC_MIC.c **** *
 548:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_MIC.c **** void ADC_MIC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_MIC.c **** {
 671              		.loc 1 550 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 8
 674              		@ frame_needed = 1, uses_anonymous_args = 0
 675 0000 80B5     		push	{r7, lr}
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 7, -8
 678              		.cfi_offset 14, -4
 679 0002 82B0     		sub	sp, sp, #8
 680              		.cfi_def_cfa_offset 16
 681 0004 00AF     		add	r7, sp, #0
 682              		.cfi_def_cfa_register 7
 683 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_CHAN_EN_REG = mask & ADC_MIC_MAX_CHANNELS_EN_MASK;
 684              		.loc 1 551 0
 685 0008 044B     		ldr	r3, .L48
 686 000a 7A68     		ldr	r2, [r7, #4]
 687 000c 0121     		movs	r1, #1
 688 000e 0A40     		ands	r2, r1
 689 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/ADC_MIC.c **** }
 690              		.loc 1 552 0
 691 0012 C046     		nop
 692 0014 BD46     		mov	sp, r7
 693 0016 02B0     		add	sp, sp, #8
 694              		@ sp needed
 695 0018 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 23


 696              	.L49:
 697 001a C046     		.align	2
 698              	.L48:
 699 001c 20003A40 		.word	1077542944
 700              		.cfi_endproc
 701              	.LFE10:
 702              		.size	ADC_MIC_SetChanMask, .-ADC_MIC_SetChanMask
 703              		.section	.text.ADC_MIC_SetLowLimit,"ax",%progbits
 704              		.align	2
 705              		.global	ADC_MIC_SetLowLimit
 706              		.code	16
 707              		.thumb_func
 708              		.type	ADC_MIC_SetLowLimit, %function
 709              	ADC_MIC_SetLowLimit:
 710              	.LFB11:
 553:Generated_Source\PSoC4/ADC_MIC.c **** 
 554:Generated_Source\PSoC4/ADC_MIC.c **** #if(ADC_MIC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_MIC.c **** 
 556:Generated_Source\PSoC4/ADC_MIC.c **** 
 557:Generated_Source\PSoC4/ADC_MIC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_MIC.c ****     * Function Name: ADC_MIC_EnableInjection
 559:Generated_Source\PSoC4/ADC_MIC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_MIC.c ****     *
 561:Generated_Source\PSoC4/ADC_MIC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_MIC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_MIC.c ****     *
 564:Generated_Source\PSoC4/ADC_MIC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_MIC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_MIC.c ****     *
 567:Generated_Source\PSoC4/ADC_MIC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_MIC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_MIC.c ****     *
 570:Generated_Source\PSoC4/ADC_MIC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_MIC.c ****     void ADC_MIC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_MIC.c ****     {
 573:Generated_Source\PSoC4/ADC_MIC.c ****         ADC_MIC_SAR_INJ_CHAN_CONFIG_REG |= ADC_MIC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_MIC.c ****     }
 575:Generated_Source\PSoC4/ADC_MIC.c **** 
 576:Generated_Source\PSoC4/ADC_MIC.c **** #endif /* ADC_MIC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_MIC.c **** 
 578:Generated_Source\PSoC4/ADC_MIC.c **** 
 579:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_SetLowLimit
 581:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_MIC.c **** *
 583:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_MIC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_MIC.c **** *
 586:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_MIC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_MIC.c **** *
 589:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
 590:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 591:Generated_Source\PSoC4/ADC_MIC.c **** *
 592:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_MIC.c **** void ADC_MIC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_MIC.c **** {
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 24


 711              		.loc 1 594 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 8
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715 0000 80B5     		push	{r7, lr}
 716              		.cfi_def_cfa_offset 8
 717              		.cfi_offset 7, -8
 718              		.cfi_offset 14, -4
 719 0002 82B0     		sub	sp, sp, #8
 720              		.cfi_def_cfa_offset 16
 721 0004 00AF     		add	r7, sp, #0
 722              		.cfi_def_cfa_register 7
 723 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_MIC_RANGE_LOW_MASK);
 724              		.loc 1 595 0
 725 0008 084B     		ldr	r3, .L51
 726 000a 084A     		ldr	r2, .L51
 727 000c 1268     		ldr	r2, [r2]
 728 000e 120C     		lsrs	r2, r2, #16
 729 0010 1204     		lsls	r2, r2, #16
 730 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_RANGE_THRES_REG |= lowLimit & ADC_MIC_RANGE_LOW_MASK;
 731              		.loc 1 596 0
 732 0014 054B     		ldr	r3, .L51
 733 0016 054A     		ldr	r2, .L51
 734 0018 1168     		ldr	r1, [r2]
 735 001a 7A68     		ldr	r2, [r7, #4]
 736 001c 1204     		lsls	r2, r2, #16
 737 001e 120C     		lsrs	r2, r2, #16
 738 0020 0A43     		orrs	r2, r1
 739 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC_MIC.c **** }
 740              		.loc 1 597 0
 741 0024 C046     		nop
 742 0026 BD46     		mov	sp, r7
 743 0028 02B0     		add	sp, sp, #8
 744              		@ sp needed
 745 002a 80BD     		pop	{r7, pc}
 746              	.L52:
 747              		.align	2
 748              	.L51:
 749 002c 18003A40 		.word	1077542936
 750              		.cfi_endproc
 751              	.LFE11:
 752              		.size	ADC_MIC_SetLowLimit, .-ADC_MIC_SetLowLimit
 753              		.section	.text.ADC_MIC_SetHighLimit,"ax",%progbits
 754              		.align	2
 755              		.global	ADC_MIC_SetHighLimit
 756              		.code	16
 757              		.thumb_func
 758              		.type	ADC_MIC_SetHighLimit, %function
 759              	ADC_MIC_SetHighLimit:
 760              	.LFB12:
 598:Generated_Source\PSoC4/ADC_MIC.c **** 
 599:Generated_Source\PSoC4/ADC_MIC.c **** 
 600:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_SetHighLimit
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 25


 602:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_MIC.c **** *
 604:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_MIC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_MIC.c **** *
 607:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_MIC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_MIC.c **** *
 610:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
 611:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 612:Generated_Source\PSoC4/ADC_MIC.c **** *
 613:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_MIC.c **** void ADC_MIC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_MIC.c **** {
 761              		.loc 1 615 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 8
 764              		@ frame_needed = 1, uses_anonymous_args = 0
 765 0000 80B5     		push	{r7, lr}
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 82B0     		sub	sp, sp, #8
 770              		.cfi_def_cfa_offset 16
 771 0004 00AF     		add	r7, sp, #0
 772              		.cfi_def_cfa_register 7
 773 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_MIC_RANGE_HIGH_MASK);
 774              		.loc 1 616 0
 775 0008 084B     		ldr	r3, .L54
 776 000a 084A     		ldr	r2, .L54
 777 000c 1268     		ldr	r2, [r2]
 778 000e 1204     		lsls	r2, r2, #16
 779 0010 120C     		lsrs	r2, r2, #16
 780 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_MIC_RANGE_HIGH_OFFSET);
 781              		.loc 1 617 0
 782 0014 054B     		ldr	r3, .L54
 783 0016 054A     		ldr	r2, .L54
 784 0018 1168     		ldr	r1, [r2]
 785 001a 7A68     		ldr	r2, [r7, #4]
 786 001c 1204     		lsls	r2, r2, #16
 787 001e 0A43     		orrs	r2, r1
 788 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC_MIC.c **** }
 789              		.loc 1 618 0
 790 0022 C046     		nop
 791 0024 BD46     		mov	sp, r7
 792 0026 02B0     		add	sp, sp, #8
 793              		@ sp needed
 794 0028 80BD     		pop	{r7, pc}
 795              	.L55:
 796 002a C046     		.align	2
 797              	.L54:
 798 002c 18003A40 		.word	1077542936
 799              		.cfi_endproc
 800              	.LFE12:
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 26


 801              		.size	ADC_MIC_SetHighLimit, .-ADC_MIC_SetHighLimit
 802              		.section	.text.ADC_MIC_SetLimitMask,"ax",%progbits
 803              		.align	2
 804              		.global	ADC_MIC_SetLimitMask
 805              		.code	16
 806              		.thumb_func
 807              		.type	ADC_MIC_SetLimitMask, %function
 808              	ADC_MIC_SetLimitMask:
 809              	.LFB13:
 619:Generated_Source\PSoC4/ADC_MIC.c **** 
 620:Generated_Source\PSoC4/ADC_MIC.c **** 
 621:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_SetLimitMask
 623:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_MIC.c **** *
 625:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_MIC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_MIC.c **** *
 628:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_MIC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_MIC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_MIC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_MIC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_MIC.c **** *
 634:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
 635:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 636:Generated_Source\PSoC4/ADC_MIC.c **** *
 637:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_MIC.c **** void ADC_MIC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_MIC.c **** {
 810              		.loc 1 639 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 8
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814 0000 80B5     		push	{r7, lr}
 815              		.cfi_def_cfa_offset 8
 816              		.cfi_offset 7, -8
 817              		.cfi_offset 14, -4
 818 0002 82B0     		sub	sp, sp, #8
 819              		.cfi_def_cfa_offset 16
 820 0004 00AF     		add	r7, sp, #0
 821              		.cfi_def_cfa_register 7
 822 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MIC_MAX_CHANNELS_EN_MASK;
 823              		.loc 1 640 0
 824 0008 044B     		ldr	r3, .L57
 825 000a 7A68     		ldr	r2, [r7, #4]
 826 000c 0121     		movs	r1, #1
 827 000e 0A40     		ands	r2, r1
 828 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/ADC_MIC.c **** }
 829              		.loc 1 641 0
 830 0012 C046     		nop
 831 0014 BD46     		mov	sp, r7
 832 0016 02B0     		add	sp, sp, #8
 833              		@ sp needed
 834 0018 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 27


 835              	.L58:
 836 001a C046     		.align	2
 837              	.L57:
 838 001c 38023A40 		.word	1077543480
 839              		.cfi_endproc
 840              	.LFE13:
 841              		.size	ADC_MIC_SetLimitMask, .-ADC_MIC_SetLimitMask
 842              		.section	.text.ADC_MIC_SetSatMask,"ax",%progbits
 843              		.align	2
 844              		.global	ADC_MIC_SetSatMask
 845              		.code	16
 846              		.thumb_func
 847              		.type	ADC_MIC_SetSatMask, %function
 848              	ADC_MIC_SetSatMask:
 849              	.LFB14:
 642:Generated_Source\PSoC4/ADC_MIC.c **** 
 643:Generated_Source\PSoC4/ADC_MIC.c **** 
 644:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_SetSatMask
 646:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_MIC.c **** *
 648:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_MIC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_MIC.c **** *
 651:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_MIC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_MIC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_MIC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_MIC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_MIC.c **** *
 657:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
 658:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 659:Generated_Source\PSoC4/ADC_MIC.c **** *
 660:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_MIC.c **** void ADC_MIC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_MIC.c **** {
 850              		.loc 1 662 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 8
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854 0000 80B5     		push	{r7, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 7, -8
 857              		.cfi_offset 14, -4
 858 0002 82B0     		sub	sp, sp, #8
 859              		.cfi_def_cfa_offset 16
 860 0004 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 862 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MIC_MAX_CHANNELS_EN_MASK;
 863              		.loc 1 663 0
 864 0008 044B     		ldr	r3, .L60
 865 000a 7A68     		ldr	r2, [r7, #4]
 866 000c 0121     		movs	r1, #1
 867 000e 0A40     		ands	r2, r1
 868 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/ADC_MIC.c **** }
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 28


 869              		.loc 1 664 0
 870 0012 C046     		nop
 871 0014 BD46     		mov	sp, r7
 872 0016 02B0     		add	sp, sp, #8
 873              		@ sp needed
 874 0018 80BD     		pop	{r7, pc}
 875              	.L61:
 876 001a C046     		.align	2
 877              	.L60:
 878 001c 28023A40 		.word	1077543464
 879              		.cfi_endproc
 880              	.LFE14:
 881              		.size	ADC_MIC_SetSatMask, .-ADC_MIC_SetSatMask
 882              		.section	.text.ADC_MIC_SetOffset,"ax",%progbits
 883              		.align	2
 884              		.global	ADC_MIC_SetOffset
 885              		.code	16
 886              		.thumb_func
 887              		.type	ADC_MIC_SetOffset, %function
 888              	ADC_MIC_SetOffset:
 889              	.LFB15:
 665:Generated_Source\PSoC4/ADC_MIC.c **** 
 666:Generated_Source\PSoC4/ADC_MIC.c **** 
 667:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_SetOffset
 669:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_MIC.c **** *
 671:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_MIC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_MIC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_MIC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_MIC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_MIC.c **** *
 677:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_MIC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_MIC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_MIC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_MIC.c **** *
 682:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
 683:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 684:Generated_Source\PSoC4/ADC_MIC.c **** *
 685:Generated_Source\PSoC4/ADC_MIC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_MIC.c **** *  ADC_MIC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_MIC.c **** *
 688:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_MIC.c **** void ADC_MIC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_MIC.c **** {
 890              		.loc 1 690 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 8
 893              		@ frame_needed = 1, uses_anonymous_args = 0
 894 0000 80B5     		push	{r7, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 82B0     		sub	sp, sp, #8
 899              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 29


 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 902 0006 7860     		str	r0, [r7, #4]
 903 0008 0A00     		movs	r2, r1
 904 000a BB1C     		adds	r3, r7, #2
 905 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC_MIC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_MIC.c ****     CYASSERT(chan < ADC_MIC_TOTAL_CHANNELS_NUM);
 906              		.loc 1 692 0
 907 000e 7B68     		ldr	r3, [r7, #4]
 908 0010 002B     		cmp	r3, #0
 909 0012 02D0     		beq	.L63
 910              		.loc 1 692 0 is_stmt 0 discriminator 1
 911 0014 0020     		movs	r0, #0
 912 0016 FFF7FEFF 		bl	CyHalt
 913              	.L63:
 693:Generated_Source\PSoC4/ADC_MIC.c **** 
 694:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_offset[chan] = offset;
 914              		.loc 1 694 0 is_stmt 1
 915 001a 054B     		ldr	r3, .L64
 916 001c 7A68     		ldr	r2, [r7, #4]
 917 001e 5200     		lsls	r2, r2, #1
 918 0020 B91C     		adds	r1, r7, #2
 919 0022 0988     		ldrh	r1, [r1]
 920 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC_MIC.c **** }
 921              		.loc 1 695 0
 922 0026 C046     		nop
 923 0028 BD46     		mov	sp, r7
 924 002a 02B0     		add	sp, sp, #8
 925              		@ sp needed
 926 002c 80BD     		pop	{r7, pc}
 927              	.L65:
 928 002e C046     		.align	2
 929              	.L64:
 930 0030 00000000 		.word	ADC_MIC_offset
 931              		.cfi_endproc
 932              	.LFE15:
 933              		.size	ADC_MIC_SetOffset, .-ADC_MIC_SetOffset
 934              		.section	.text.ADC_MIC_SetGain,"ax",%progbits
 935              		.align	2
 936              		.global	ADC_MIC_SetGain
 937              		.code	16
 938              		.thumb_func
 939              		.type	ADC_MIC_SetGain, %function
 940              	ADC_MIC_SetGain:
 941              	.LFB16:
 696:Generated_Source\PSoC4/ADC_MIC.c **** 
 697:Generated_Source\PSoC4/ADC_MIC.c **** 
 698:Generated_Source\PSoC4/ADC_MIC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_MIC.c **** * Function Name: ADC_MIC_SetGain
 700:Generated_Source\PSoC4/ADC_MIC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_MIC.c **** *
 702:Generated_Source\PSoC4/ADC_MIC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_MIC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_MIC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_MIC.c **** *  reference and input range settings. It should only be used to further
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 30


 706:Generated_Source\PSoC4/ADC_MIC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_MIC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_MIC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_MIC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_MIC.c **** *
 711:Generated_Source\PSoC4/ADC_MIC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_MIC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_MIC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_MIC.c **** *
 715:Generated_Source\PSoC4/ADC_MIC.c **** * Return:
 716:Generated_Source\PSoC4/ADC_MIC.c **** *  None.
 717:Generated_Source\PSoC4/ADC_MIC.c **** *
 718:Generated_Source\PSoC4/ADC_MIC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_MIC.c **** *  ADC_MIC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_MIC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_MIC.c **** *
 722:Generated_Source\PSoC4/ADC_MIC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_MIC.c **** void ADC_MIC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_MIC.c **** {
 942              		.loc 1 724 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 8
 945              		@ frame_needed = 1, uses_anonymous_args = 0
 946 0000 80B5     		push	{r7, lr}
 947              		.cfi_def_cfa_offset 8
 948              		.cfi_offset 7, -8
 949              		.cfi_offset 14, -4
 950 0002 82B0     		sub	sp, sp, #8
 951              		.cfi_def_cfa_offset 16
 952 0004 00AF     		add	r7, sp, #0
 953              		.cfi_def_cfa_register 7
 954 0006 7860     		str	r0, [r7, #4]
 955 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC_MIC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_MIC.c ****     CYASSERT(chan < ADC_MIC_TOTAL_CHANNELS_NUM);
 956              		.loc 1 726 0
 957 000a 7B68     		ldr	r3, [r7, #4]
 958 000c 002B     		cmp	r3, #0
 959 000e 02D0     		beq	.L67
 960              		.loc 1 726 0 is_stmt 0 discriminator 1
 961 0010 0020     		movs	r0, #0
 962 0012 FFF7FEFF 		bl	CyHalt
 963              	.L67:
 727:Generated_Source\PSoC4/ADC_MIC.c **** 
 728:Generated_Source\PSoC4/ADC_MIC.c ****     ADC_MIC_countsPer10Volt[chan] = adcGain;
 964              		.loc 1 728 0 is_stmt 1
 965 0016 044B     		ldr	r3, .L68
 966 0018 7A68     		ldr	r2, [r7, #4]
 967 001a 9200     		lsls	r2, r2, #2
 968 001c 3968     		ldr	r1, [r7]
 969 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC_MIC.c **** }
 970              		.loc 1 729 0
 971 0020 C046     		nop
 972 0022 BD46     		mov	sp, r7
 973 0024 02B0     		add	sp, sp, #8
 974              		@ sp needed
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 31


 975 0026 80BD     		pop	{r7, pc}
 976              	.L69:
 977              		.align	2
 978              	.L68:
 979 0028 00000000 		.word	ADC_MIC_countsPer10Volt
 980              		.cfi_endproc
 981              	.LFE16:
 982              		.size	ADC_MIC_SetGain, .-ADC_MIC_SetGain
 983              		.section	.text.ADC_MIC_CountsTo_mVolts,"ax",%progbits
 984              		.align	2
 985              		.global	ADC_MIC_CountsTo_mVolts
 986              		.code	16
 987              		.thumb_func
 988              		.type	ADC_MIC_CountsTo_mVolts, %function
 989              	ADC_MIC_CountsTo_mVolts:
 990              	.LFB17:
 730:Generated_Source\PSoC4/ADC_MIC.c **** 
 731:Generated_Source\PSoC4/ADC_MIC.c **** 
 732:Generated_Source\PSoC4/ADC_MIC.c **** #if(ADC_MIC_DEFAULT_JUSTIFICATION_SEL == ADC_MIC__RIGHT)
 733:Generated_Source\PSoC4/ADC_MIC.c **** 
 734:Generated_Source\PSoC4/ADC_MIC.c **** 
 735:Generated_Source\PSoC4/ADC_MIC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_MIC.c ****     * Function Name: ADC_MIC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC_MIC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_MIC.c ****     *
 739:Generated_Source\PSoC4/ADC_MIC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_MIC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_MIC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_MIC.c ****     *
 743:Generated_Source\PSoC4/ADC_MIC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_MIC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_MIC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_MIC.c ****     *
 747:Generated_Source\PSoC4/ADC_MIC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_MIC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_MIC.c ****     *
 750:Generated_Source\PSoC4/ADC_MIC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_MIC.c ****     *  ADC_MIC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_MIC.c ****     *  ADC_MIC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_MIC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_MIC.c ****     *
 755:Generated_Source\PSoC4/ADC_MIC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_MIC.c ****     int16 ADC_MIC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_MIC.c ****     {
 991              		.loc 1 757 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 16
 994              		@ frame_needed = 1, uses_anonymous_args = 0
 995 0000 80B5     		push	{r7, lr}
 996              		.cfi_def_cfa_offset 8
 997              		.cfi_offset 7, -8
 998              		.cfi_offset 14, -4
 999 0002 84B0     		sub	sp, sp, #16
 1000              		.cfi_def_cfa_offset 24
 1001 0004 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 1003 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 32


 1004 0008 0A00     		movs	r2, r1
 1005 000a BB1C     		adds	r3, r7, #2
 1006 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/ADC_MIC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_MIC.c **** 
 760:Generated_Source\PSoC4/ADC_MIC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_MIC.c ****         CYASSERT(chan < ADC_MIC_TOTAL_CHANNELS_NUM);
 1007              		.loc 1 761 0
 1008 000e 7B68     		ldr	r3, [r7, #4]
 1009 0010 002B     		cmp	r3, #0
 1010 0012 02D0     		beq	.L71
 1011              		.loc 1 761 0 is_stmt 0 discriminator 1
 1012 0014 0020     		movs	r0, #0
 1013 0016 FFF7FEFF 		bl	CyHalt
 1014              	.L71:
 762:Generated_Source\PSoC4/ADC_MIC.c **** 
 763:Generated_Source\PSoC4/ADC_MIC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_MIC.c ****         #if(ADC_MIC_DEFAULT_AVG_MODE == ADC_MIC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_MIC.c ****             if((ADC_MIC_channelsConfig[chan] & ADC_MIC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_MIC.c ****             {
 767:Generated_Source\PSoC4/ADC_MIC.c ****                 adcCounts /= ADC_MIC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC_MIC.c ****             }
 769:Generated_Source\PSoC4/ADC_MIC.c ****         #endif /* ADC_MIC_DEFAULT_AVG_MODE == ADC_MIC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_MIC.c **** 
 771:Generated_Source\PSoC4/ADC_MIC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_MIC.c ****         adcCounts -= ADC_MIC_offset[chan];
 1015              		.loc 1 772 0 is_stmt 1
 1016 001a 1E4B     		ldr	r3, .L77
 1017 001c 7A68     		ldr	r2, [r7, #4]
 1018 001e 5200     		lsls	r2, r2, #1
 1019 0020 D35A     		ldrh	r3, [r2, r3]
 1020 0022 19B2     		sxth	r1, r3
 1021 0024 BB1C     		adds	r3, r7, #2
 1022 0026 1A88     		ldrh	r2, [r3]
 1023 0028 8BB2     		uxth	r3, r1
 1024 002a D31A     		subs	r3, r2, r3
 1025 002c 9AB2     		uxth	r2, r3
 1026 002e BB1C     		adds	r3, r7, #2
 1027 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC_MIC.c **** 
 774:Generated_Source\PSoC4/ADC_MIC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_MIC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1028              		.loc 1 774 0
 1029 0032 BB1C     		adds	r3, r7, #2
 1030 0034 0022     		movs	r2, #0
 1031 0036 9B5E     		ldrsh	r3, [r3, r2]
 1032 0038 174A     		ldr	r2, .L77+4
 1033 003a 5A43     		muls	r2, r3
 775:Generated_Source\PSoC4/ADC_MIC.c ****                  (ADC_MIC_countsPer10Volt[chan] / 2) : (-(ADC_MIC_countsPer10Volt[chan] / 2)) ))
 1034              		.loc 1 775 0
 1035 003c BB1C     		adds	r3, r7, #2
 1036 003e 0021     		movs	r1, #0
 1037 0040 5B5E     		ldrsh	r3, [r3, r1]
 1038 0042 002B     		cmp	r3, #0
 1039 0044 08DD     		ble	.L72
 1040              		.loc 1 775 0 is_stmt 0 discriminator 1
 1041 0046 154B     		ldr	r3, .L77+8
 1042 0048 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 33


 1043 004a 8900     		lsls	r1, r1, #2
 1044 004c CB58     		ldr	r3, [r1, r3]
 1045 004e 002B     		cmp	r3, #0
 1046 0050 00DA     		bge	.L73
 1047 0052 0133     		adds	r3, r3, #1
 1048              	.L73:
 1049 0054 5B10     		asrs	r3, r3, #1
 1050 0056 08E0     		b	.L74
 1051              	.L72:
 1052              		.loc 1 775 0 discriminator 2
 1053 0058 104B     		ldr	r3, .L77+8
 1054 005a 7968     		ldr	r1, [r7, #4]
 1055 005c 8900     		lsls	r1, r1, #2
 1056 005e CB58     		ldr	r3, [r1, r3]
 1057 0060 002B     		cmp	r3, #0
 1058 0062 00DA     		bge	.L75
 1059 0064 0133     		adds	r3, r3, #1
 1060              	.L75:
 1061 0066 5B10     		asrs	r3, r3, #1
 1062 0068 5B42     		rsbs	r3, r3, #0
 1063              	.L74:
 774:Generated_Source\PSoC4/ADC_MIC.c ****                  (ADC_MIC_countsPer10Volt[chan] / 2) : (-(ADC_MIC_countsPer10Volt[chan] / 2)) ))
 1064              		.loc 1 774 0 is_stmt 1
 1065 006a D018     		adds	r0, r2, r3
 776:Generated_Source\PSoC4/ADC_MIC.c ****                  / ADC_MIC_countsPer10Volt[chan]);
 1066              		.loc 1 776 0
 1067 006c 0B4B     		ldr	r3, .L77+8
 1068 006e 7A68     		ldr	r2, [r7, #4]
 1069 0070 9200     		lsls	r2, r2, #2
 1070 0072 D358     		ldr	r3, [r2, r3]
 1071 0074 1900     		movs	r1, r3
 1072 0076 FFF7FEFF 		bl	__aeabi_idiv
 1073 007a 0300     		movs	r3, r0
 1074 007c 1A00     		movs	r2, r3
 774:Generated_Source\PSoC4/ADC_MIC.c ****                  (ADC_MIC_countsPer10Volt[chan] / 2) : (-(ADC_MIC_countsPer10Volt[chan] / 2)) ))
 1075              		.loc 1 774 0
 1076 007e 0E23     		movs	r3, #14
 1077 0080 FB18     		adds	r3, r7, r3
 1078 0082 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC_MIC.c **** 
 778:Generated_Source\PSoC4/ADC_MIC.c ****         return( mVolts );
 1079              		.loc 1 778 0
 1080 0084 0E23     		movs	r3, #14
 1081 0086 FB18     		adds	r3, r7, r3
 1082 0088 0022     		movs	r2, #0
 1083 008a 9B5E     		ldrsh	r3, [r3, r2]
 779:Generated_Source\PSoC4/ADC_MIC.c ****     }
 1084              		.loc 1 779 0
 1085 008c 1800     		movs	r0, r3
 1086 008e BD46     		mov	sp, r7
 1087 0090 04B0     		add	sp, sp, #16
 1088              		@ sp needed
 1089 0092 80BD     		pop	{r7, pc}
 1090              	.L78:
 1091              		.align	2
 1092              	.L77:
 1093 0094 00000000 		.word	ADC_MIC_offset
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 34


 1094 0098 10270000 		.word	10000
 1095 009c 00000000 		.word	ADC_MIC_countsPer10Volt
 1096              		.cfi_endproc
 1097              	.LFE17:
 1098              		.size	ADC_MIC_CountsTo_mVolts, .-ADC_MIC_CountsTo_mVolts
 1099              		.global	__aeabi_lmul
 1100              		.global	__aeabi_ldivmod
 1101              		.section	.text.ADC_MIC_CountsTo_uVolts,"ax",%progbits
 1102              		.align	2
 1103              		.global	ADC_MIC_CountsTo_uVolts
 1104              		.code	16
 1105              		.thumb_func
 1106              		.type	ADC_MIC_CountsTo_uVolts, %function
 1107              	ADC_MIC_CountsTo_uVolts:
 1108              	.LFB18:
 780:Generated_Source\PSoC4/ADC_MIC.c **** 
 781:Generated_Source\PSoC4/ADC_MIC.c **** 
 782:Generated_Source\PSoC4/ADC_MIC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_MIC.c ****     * Function Name: ADC_MIC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_MIC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_MIC.c ****     *
 786:Generated_Source\PSoC4/ADC_MIC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_MIC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_MIC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_MIC.c ****     *
 790:Generated_Source\PSoC4/ADC_MIC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_MIC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_MIC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_MIC.c ****     *
 794:Generated_Source\PSoC4/ADC_MIC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_MIC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_MIC.c ****     *
 797:Generated_Source\PSoC4/ADC_MIC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_MIC.c ****     *  ADC_MIC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_MIC.c ****     *  ADC_MIC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_MIC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_MIC.c ****     *
 802:Generated_Source\PSoC4/ADC_MIC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_MIC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_MIC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_MIC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_MIC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_MIC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_MIC.c ****     *
 809:Generated_Source\PSoC4/ADC_MIC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_MIC.c ****     int32 ADC_MIC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_MIC.c ****     {
 1109              		.loc 1 811 0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 24
 1112              		@ frame_needed = 1, uses_anonymous_args = 0
 1113 0000 B0B5     		push	{r4, r5, r7, lr}
 1114              		.cfi_def_cfa_offset 16
 1115              		.cfi_offset 4, -16
 1116              		.cfi_offset 5, -12
 1117              		.cfi_offset 7, -8
 1118              		.cfi_offset 14, -4
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 35


 1119 0002 86B0     		sub	sp, sp, #24
 1120              		.cfi_def_cfa_offset 40
 1121 0004 00AF     		add	r7, sp, #0
 1122              		.cfi_def_cfa_register 7
 1123 0006 F860     		str	r0, [r7, #12]
 1124 0008 0A00     		movs	r2, r1
 1125 000a 0A23     		movs	r3, #10
 1126 000c FB18     		adds	r3, r7, r3
 1127 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC_MIC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_MIC.c **** 
 814:Generated_Source\PSoC4/ADC_MIC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_MIC.c ****         CYASSERT(chan < ADC_MIC_TOTAL_CHANNELS_NUM);
 1128              		.loc 1 815 0
 1129 0010 FB68     		ldr	r3, [r7, #12]
 1130 0012 002B     		cmp	r3, #0
 1131 0014 02D0     		beq	.L80
 1132              		.loc 1 815 0 is_stmt 0 discriminator 1
 1133 0016 0020     		movs	r0, #0
 1134 0018 FFF7FEFF 		bl	CyHalt
 1135              	.L80:
 816:Generated_Source\PSoC4/ADC_MIC.c **** 
 817:Generated_Source\PSoC4/ADC_MIC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_MIC.c ****         #if(ADC_MIC_DEFAULT_AVG_MODE == ADC_MIC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_MIC.c ****             if((ADC_MIC_channelsConfig[chan] & ADC_MIC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_MIC.c ****             {
 821:Generated_Source\PSoC4/ADC_MIC.c ****                 adcCounts /= ADC_MIC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_MIC.c ****             }
 823:Generated_Source\PSoC4/ADC_MIC.c ****         #endif /* ADC_MIC_DEFAULT_AVG_MODE == ADC_MIC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_MIC.c **** 
 825:Generated_Source\PSoC4/ADC_MIC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_MIC.c ****         adcCounts -= ADC_MIC_offset[chan];
 1136              		.loc 1 826 0 is_stmt 1
 1137 001c 194B     		ldr	r3, .L82
 1138 001e FA68     		ldr	r2, [r7, #12]
 1139 0020 5200     		lsls	r2, r2, #1
 1140 0022 D35A     		ldrh	r3, [r2, r3]
 1141 0024 19B2     		sxth	r1, r3
 1142 0026 0A23     		movs	r3, #10
 1143 0028 FB18     		adds	r3, r7, r3
 1144 002a 1A88     		ldrh	r2, [r3]
 1145 002c 8BB2     		uxth	r3, r1
 1146 002e D31A     		subs	r3, r2, r3
 1147 0030 9AB2     		uxth	r2, r3
 1148 0032 0A23     		movs	r3, #10
 1149 0034 FB18     		adds	r3, r7, r3
 1150 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC_MIC.c **** 
 828:Generated_Source\PSoC4/ADC_MIC.c ****         uVolts = ((int64)adcCounts * ADC_MIC_10UV_COUNTS) / ADC_MIC_countsPer10Volt[chan];
 1151              		.loc 1 828 0
 1152 0038 0A23     		movs	r3, #10
 1153 003a FB18     		adds	r3, r7, r3
 1154 003c 1B88     		ldrh	r3, [r3]
 1155 003e 1BB2     		sxth	r3, r3
 1156 0040 3B60     		str	r3, [r7]
 1157 0042 DB17     		asrs	r3, r3, #31
 1158 0044 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 36


 1159 0046 104A     		ldr	r2, .L82+4
 1160 0048 0023     		movs	r3, #0
 1161 004a 3868     		ldr	r0, [r7]
 1162 004c 7968     		ldr	r1, [r7, #4]
 1163 004e FFF7FEFF 		bl	__aeabi_lmul
 1164 0052 0200     		movs	r2, r0
 1165 0054 0B00     		movs	r3, r1
 1166 0056 1000     		movs	r0, r2
 1167 0058 1900     		movs	r1, r3
 1168 005a 0C4B     		ldr	r3, .L82+8
 1169 005c FA68     		ldr	r2, [r7, #12]
 1170 005e 9200     		lsls	r2, r2, #2
 1171 0060 D358     		ldr	r3, [r2, r3]
 1172 0062 1C00     		movs	r4, r3
 1173 0064 DB17     		asrs	r3, r3, #31
 1174 0066 1D00     		movs	r5, r3
 1175 0068 2200     		movs	r2, r4
 1176 006a 2B00     		movs	r3, r5
 1177 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1178 0070 0300     		movs	r3, r0
 1179 0072 0C00     		movs	r4, r1
 1180 0074 3B61     		str	r3, [r7, #16]
 1181 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC_MIC.c **** 
 830:Generated_Source\PSoC4/ADC_MIC.c ****         return( (int32)uVolts );
 1182              		.loc 1 830 0
 1183 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC_MIC.c ****     }
 1184              		.loc 1 831 0
 1185 007a 1800     		movs	r0, r3
 1186 007c BD46     		mov	sp, r7
 1187 007e 06B0     		add	sp, sp, #24
 1188              		@ sp needed
 1189 0080 B0BD     		pop	{r4, r5, r7, pc}
 1190              	.L83:
 1191 0082 C046     		.align	2
 1192              	.L82:
 1193 0084 00000000 		.word	ADC_MIC_offset
 1194 0088 80969800 		.word	10000000
 1195 008c 00000000 		.word	ADC_MIC_countsPer10Volt
 1196              		.cfi_endproc
 1197              	.LFE18:
 1198              		.size	ADC_MIC_CountsTo_uVolts, .-ADC_MIC_CountsTo_uVolts
 1199              		.global	__aeabi_i2f
 1200              		.global	__aeabi_fmul
 1201              		.global	__aeabi_fdiv
 1202              		.section	.text.ADC_MIC_CountsTo_Volts,"ax",%progbits
 1203              		.align	2
 1204              		.global	ADC_MIC_CountsTo_Volts
 1205              		.code	16
 1206              		.thumb_func
 1207              		.type	ADC_MIC_CountsTo_Volts, %function
 1208              	ADC_MIC_CountsTo_Volts:
 1209              	.LFB19:
 832:Generated_Source\PSoC4/ADC_MIC.c **** 
 833:Generated_Source\PSoC4/ADC_MIC.c **** 
 834:Generated_Source\PSoC4/ADC_MIC.c ****     /*******************************************************************************
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 37


 835:Generated_Source\PSoC4/ADC_MIC.c ****     * Function Name: ADC_MIC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_MIC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_MIC.c ****     *
 838:Generated_Source\PSoC4/ADC_MIC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_MIC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_MIC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_MIC.c ****     *
 842:Generated_Source\PSoC4/ADC_MIC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_MIC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_MIC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_MIC.c ****     *
 846:Generated_Source\PSoC4/ADC_MIC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_MIC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_MIC.c ****     *
 849:Generated_Source\PSoC4/ADC_MIC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_MIC.c ****     *  ADC_MIC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_MIC.c ****     *  ADC_MIC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_MIC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_MIC.c ****     *
 854:Generated_Source\PSoC4/ADC_MIC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_MIC.c ****     float32 ADC_MIC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_MIC.c ****     {
 1210              		.loc 1 856 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 16
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214 0000 90B5     		push	{r4, r7, lr}
 1215              		.cfi_def_cfa_offset 12
 1216              		.cfi_offset 4, -12
 1217              		.cfi_offset 7, -8
 1218              		.cfi_offset 14, -4
 1219 0002 85B0     		sub	sp, sp, #20
 1220              		.cfi_def_cfa_offset 32
 1221 0004 00AF     		add	r7, sp, #0
 1222              		.cfi_def_cfa_register 7
 1223 0006 7860     		str	r0, [r7, #4]
 1224 0008 0A00     		movs	r2, r1
 1225 000a BB1C     		adds	r3, r7, #2
 1226 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC_MIC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_MIC.c **** 
 859:Generated_Source\PSoC4/ADC_MIC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_MIC.c ****         CYASSERT(chan < ADC_MIC_TOTAL_CHANNELS_NUM);
 1227              		.loc 1 860 0
 1228 000e 7B68     		ldr	r3, [r7, #4]
 1229 0010 002B     		cmp	r3, #0
 1230 0012 02D0     		beq	.L85
 1231              		.loc 1 860 0 is_stmt 0 discriminator 1
 1232 0014 0020     		movs	r0, #0
 1233 0016 FFF7FEFF 		bl	CyHalt
 1234              	.L85:
 861:Generated_Source\PSoC4/ADC_MIC.c **** 
 862:Generated_Source\PSoC4/ADC_MIC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_MIC.c ****         #if(ADC_MIC_DEFAULT_AVG_MODE == ADC_MIC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_MIC.c ****             if((ADC_MIC_channelsConfig[chan] & ADC_MIC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_MIC.c ****             {
 866:Generated_Source\PSoC4/ADC_MIC.c ****                 adcCounts /= ADC_MIC_DEFAULT_AVG_SAMPLES_DIV;
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 38


 867:Generated_Source\PSoC4/ADC_MIC.c ****             }
 868:Generated_Source\PSoC4/ADC_MIC.c ****         #endif /* ADC_MIC_DEFAULT_AVG_MODE == ADC_MIC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_MIC.c **** 
 870:Generated_Source\PSoC4/ADC_MIC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_MIC.c ****         adcCounts -= ADC_MIC_offset[chan];
 1235              		.loc 1 871 0 is_stmt 1
 1236 001a 164B     		ldr	r3, .L87
 1237 001c 7A68     		ldr	r2, [r7, #4]
 1238 001e 5200     		lsls	r2, r2, #1
 1239 0020 D35A     		ldrh	r3, [r2, r3]
 1240 0022 19B2     		sxth	r1, r3
 1241 0024 BB1C     		adds	r3, r7, #2
 1242 0026 1A88     		ldrh	r2, [r3]
 1243 0028 8BB2     		uxth	r3, r1
 1244 002a D31A     		subs	r3, r2, r3
 1245 002c 9AB2     		uxth	r2, r3
 1246 002e BB1C     		adds	r3, r7, #2
 1247 0030 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/ADC_MIC.c **** 
 873:Generated_Source\PSoC4/ADC_MIC.c ****         volts = ((float32)adcCounts * ADC_MIC_10V_COUNTS) / (float32)ADC_MIC_countsPer10Volt[chan];
 1248              		.loc 1 873 0
 1249 0032 BB1C     		adds	r3, r7, #2
 1250 0034 0022     		movs	r2, #0
 1251 0036 9B5E     		ldrsh	r3, [r3, r2]
 1252 0038 1800     		movs	r0, r3
 1253 003a FFF7FEFF 		bl	__aeabi_i2f
 1254 003e 031C     		adds	r3, r0, #0
 1255 0040 0D49     		ldr	r1, .L87+4
 1256 0042 181C     		adds	r0, r3, #0
 1257 0044 FFF7FEFF 		bl	__aeabi_fmul
 1258 0048 031C     		adds	r3, r0, #0
 1259 004a 1C1C     		adds	r4, r3, #0
 1260 004c 0B4B     		ldr	r3, .L87+8
 1261 004e 7A68     		ldr	r2, [r7, #4]
 1262 0050 9200     		lsls	r2, r2, #2
 1263 0052 D358     		ldr	r3, [r2, r3]
 1264 0054 1800     		movs	r0, r3
 1265 0056 FFF7FEFF 		bl	__aeabi_i2f
 1266 005a 031C     		adds	r3, r0, #0
 1267 005c 191C     		adds	r1, r3, #0
 1268 005e 201C     		adds	r0, r4, #0
 1269 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1270 0064 031C     		adds	r3, r0, #0
 1271 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC_MIC.c **** 
 875:Generated_Source\PSoC4/ADC_MIC.c ****         return( volts );
 1272              		.loc 1 875 0
 1273 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC_MIC.c ****     }
 1274              		.loc 1 876 0
 1275 006a 181C     		adds	r0, r3, #0
 1276 006c BD46     		mov	sp, r7
 1277 006e 05B0     		add	sp, sp, #20
 1278              		@ sp needed
 1279 0070 90BD     		pop	{r4, r7, pc}
 1280              	.L88:
 1281 0072 C046     		.align	2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 39


 1282              	.L87:
 1283 0074 00000000 		.word	ADC_MIC_offset
 1284 0078 00002041 		.word	1092616192
 1285 007c 00000000 		.word	ADC_MIC_countsPer10Volt
 1286              		.cfi_endproc
 1287              	.LFE19:
 1288              		.size	ADC_MIC_CountsTo_Volts, .-ADC_MIC_CountsTo_Volts
 1289              		.text
 1290              	.Letext0:
 1291              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1292              		.section	.debug_info,"",%progbits
 1293              	.Ldebug_info0:
 1294 0000 8D040000 		.4byte	0x48d
 1295 0004 0400     		.2byte	0x4
 1296 0006 00000000 		.4byte	.Ldebug_abbrev0
 1297 000a 04       		.byte	0x4
 1298 000b 01       		.uleb128 0x1
 1299 000c A4010000 		.4byte	.LASF60
 1300 0010 0C       		.byte	0xc
 1301 0011 7C020000 		.4byte	.LASF61
 1302 0015 47030000 		.4byte	.LASF62
 1303 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1304 001d 00000000 		.4byte	0
 1305 0021 00000000 		.4byte	.Ldebug_line0
 1306 0025 02       		.uleb128 0x2
 1307 0026 01       		.byte	0x1
 1308 0027 06       		.byte	0x6
 1309 0028 98000000 		.4byte	.LASF0
 1310 002c 02       		.uleb128 0x2
 1311 002d 01       		.byte	0x1
 1312 002e 08       		.byte	0x8
 1313 002f DA020000 		.4byte	.LASF1
 1314 0033 02       		.uleb128 0x2
 1315 0034 02       		.byte	0x2
 1316 0035 05       		.byte	0x5
 1317 0036 F5020000 		.4byte	.LASF2
 1318 003a 02       		.uleb128 0x2
 1319 003b 02       		.byte	0x2
 1320 003c 07       		.byte	0x7
 1321 003d 54010000 		.4byte	.LASF3
 1322 0041 02       		.uleb128 0x2
 1323 0042 04       		.byte	0x4
 1324 0043 05       		.byte	0x5
 1325 0044 AA000000 		.4byte	.LASF4
 1326 0048 02       		.uleb128 0x2
 1327 0049 04       		.byte	0x4
 1328 004a 07       		.byte	0x7
 1329 004b FC000000 		.4byte	.LASF5
 1330 004f 02       		.uleb128 0x2
 1331 0050 08       		.byte	0x8
 1332 0051 05       		.byte	0x5
 1333 0052 8A000000 		.4byte	.LASF6
 1334 0056 02       		.uleb128 0x2
 1335 0057 08       		.byte	0x8
 1336 0058 07       		.byte	0x7
 1337 0059 47000000 		.4byte	.LASF7
 1338 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 40


 1339 005e 04       		.byte	0x4
 1340 005f 05       		.byte	0x5
 1341 0060 696E7400 		.ascii	"int\000"
 1342 0064 02       		.uleb128 0x2
 1343 0065 04       		.byte	0x4
 1344 0066 07       		.byte	0x7
 1345 0067 E8000000 		.4byte	.LASF8
 1346 006b 04       		.uleb128 0x4
 1347 006c B3000000 		.4byte	.LASF9
 1348 0070 02       		.byte	0x2
 1349 0071 E601     		.2byte	0x1e6
 1350 0073 2C000000 		.4byte	0x2c
 1351 0077 04       		.uleb128 0x4
 1352 0078 24000000 		.4byte	.LASF10
 1353 007c 02       		.byte	0x2
 1354 007d E701     		.2byte	0x1e7
 1355 007f 3A000000 		.4byte	0x3a
 1356 0083 04       		.uleb128 0x4
 1357 0084 C0000000 		.4byte	.LASF11
 1358 0088 02       		.byte	0x2
 1359 0089 E801     		.2byte	0x1e8
 1360 008b 48000000 		.4byte	0x48
 1361 008f 04       		.uleb128 0x4
 1362 0090 F4030000 		.4byte	.LASF12
 1363 0094 02       		.byte	0x2
 1364 0095 EA01     		.2byte	0x1ea
 1365 0097 33000000 		.4byte	0x33
 1366 009b 04       		.uleb128 0x4
 1367 009c A4000000 		.4byte	.LASF13
 1368 00a0 02       		.byte	0x2
 1369 00a1 EB01     		.2byte	0x1eb
 1370 00a3 41000000 		.4byte	0x41
 1371 00a7 04       		.uleb128 0x4
 1372 00a8 56020000 		.4byte	.LASF14
 1373 00ac 02       		.byte	0x2
 1374 00ad EC01     		.2byte	0x1ec
 1375 00af B3000000 		.4byte	0xb3
 1376 00b3 02       		.uleb128 0x2
 1377 00b4 04       		.byte	0x4
 1378 00b5 04       		.byte	0x4
 1379 00b6 B5020000 		.4byte	.LASF15
 1380 00ba 02       		.uleb128 0x2
 1381 00bb 08       		.byte	0x8
 1382 00bc 04       		.byte	0x4
 1383 00bd B9000000 		.4byte	.LASF16
 1384 00c1 04       		.uleb128 0x4
 1385 00c2 9D020000 		.4byte	.LASF17
 1386 00c6 02       		.byte	0x2
 1387 00c7 F101     		.2byte	0x1f1
 1388 00c9 4F000000 		.4byte	0x4f
 1389 00cd 02       		.uleb128 0x2
 1390 00ce 01       		.byte	0x1
 1391 00cf 08       		.byte	0x8
 1392 00d0 9B030000 		.4byte	.LASF18
 1393 00d4 04       		.uleb128 0x4
 1394 00d5 39020000 		.4byte	.LASF19
 1395 00d9 02       		.byte	0x2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 41


 1396 00da 9202     		.2byte	0x292
 1397 00dc E0000000 		.4byte	0xe0
 1398 00e0 05       		.uleb128 0x5
 1399 00e1 83000000 		.4byte	0x83
 1400 00e5 02       		.uleb128 0x2
 1401 00e6 08       		.byte	0x8
 1402 00e7 04       		.byte	0x4
 1403 00e8 70020000 		.4byte	.LASF20
 1404 00ec 02       		.uleb128 0x2
 1405 00ed 04       		.byte	0x4
 1406 00ee 07       		.byte	0x7
 1407 00ef 5E020000 		.4byte	.LASF21
 1408 00f3 06       		.uleb128 0x6
 1409 00f4 67010000 		.4byte	.LASF25
 1410 00f8 01       		.byte	0x1
 1411 00f9 3F       		.byte	0x3f
 1412 00fa 00000000 		.4byte	.LFB2
 1413 00fe 24000000 		.4byte	.LFE2-.LFB2
 1414 0102 01       		.uleb128 0x1
 1415 0103 9C       		.byte	0x9c
 1416 0104 07       		.uleb128 0x7
 1417 0105 3A000000 		.4byte	.LASF36
 1418 0109 01       		.byte	0x1
 1419 010a 5E       		.byte	0x5e
 1420 010b 00000000 		.4byte	.LFB3
 1421 010f D4010000 		.4byte	.LFE3-.LFB3
 1422 0113 01       		.uleb128 0x1
 1423 0114 9C       		.byte	0x9c
 1424 0115 44010000 		.4byte	0x144
 1425 0119 08       		.uleb128 0x8
 1426 011a 24030000 		.4byte	.LASF22
 1427 011e 01       		.byte	0x1
 1428 011f 60       		.byte	0x60
 1429 0120 83000000 		.4byte	0x83
 1430 0124 02       		.uleb128 0x2
 1431 0125 91       		.byte	0x91
 1432 0126 74       		.sleb128 -12
 1433 0127 08       		.uleb128 0x8
 1434 0128 28010000 		.4byte	.LASF23
 1435 012c 01       		.byte	0x1
 1436 012d 61       		.byte	0x61
 1437 012e 83000000 		.4byte	0x83
 1438 0132 02       		.uleb128 0x2
 1439 0133 91       		.byte	0x91
 1440 0134 6C       		.sleb128 -20
 1441 0135 08       		.uleb128 0x8
 1442 0136 33000000 		.4byte	.LASF24
 1443 013a 01       		.byte	0x1
 1444 013b 62       		.byte	0x62
 1445 013c 9B000000 		.4byte	0x9b
 1446 0140 02       		.uleb128 0x2
 1447 0141 91       		.byte	0x91
 1448 0142 70       		.sleb128 -16
 1449 0143 00       		.byte	0
 1450 0144 09       		.uleb128 0x9
 1451 0145 32010000 		.4byte	.LASF26
 1452 0149 01       		.byte	0x1
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 42


 1453 014a 4A01     		.2byte	0x14a
 1454 014c 00000000 		.4byte	.LFB4
 1455 0150 38000000 		.4byte	.LFE4-.LFB4
 1456 0154 01       		.uleb128 0x1
 1457 0155 9C       		.byte	0x9c
 1458 0156 0A       		.uleb128 0xa
 1459 0157 E8020000 		.4byte	.LASF27
 1460 015b 01       		.byte	0x1
 1461 015c 6D01     		.2byte	0x16d
 1462 015e 00000000 		.4byte	.LFB5
 1463 0162 1C000000 		.4byte	.LFE5-.LFB5
 1464 0166 01       		.uleb128 0x1
 1465 0167 9C       		.byte	0x9c
 1466 0168 0A       		.uleb128 0xa
 1467 0169 BB020000 		.4byte	.LASF28
 1468 016d 01       		.byte	0x1
 1469 016e 8701     		.2byte	0x187
 1470 0170 00000000 		.4byte	.LFB6
 1471 0174 1C000000 		.4byte	.LFE6-.LFB6
 1472 0178 01       		.uleb128 0x1
 1473 0179 9C       		.byte	0x9c
 1474 017a 0A       		.uleb128 0xa
 1475 017b 76000000 		.4byte	.LASF29
 1476 017f 01       		.byte	0x1
 1477 0180 A001     		.2byte	0x1a0
 1478 0182 00000000 		.4byte	.LFB7
 1479 0186 20000000 		.4byte	.LFE7-.LFB7
 1480 018a 01       		.uleb128 0x1
 1481 018b 9C       		.byte	0x9c
 1482 018c 0B       		.uleb128 0xb
 1483 018d 5E000000 		.4byte	.LASF31
 1484 0191 01       		.byte	0x1
 1485 0192 C201     		.2byte	0x1c2
 1486 0194 83000000 		.4byte	0x83
 1487 0198 00000000 		.4byte	.LFB8
 1488 019c 48000000 		.4byte	.LFE8-.LFB8
 1489 01a0 01       		.uleb128 0x1
 1490 01a1 9C       		.byte	0x9c
 1491 01a2 C5010000 		.4byte	0x1c5
 1492 01a6 0C       		.uleb128 0xc
 1493 01a7 E0000000 		.4byte	.LASF33
 1494 01ab 01       		.byte	0x1
 1495 01ac C201     		.2byte	0x1c2
 1496 01ae 83000000 		.4byte	0x83
 1497 01b2 02       		.uleb128 0x2
 1498 01b3 91       		.byte	0x91
 1499 01b4 6C       		.sleb128 -20
 1500 01b5 0D       		.uleb128 0xd
 1501 01b6 C9030000 		.4byte	.LASF30
 1502 01ba 01       		.byte	0x1
 1503 01bb C401     		.2byte	0x1c4
 1504 01bd 83000000 		.4byte	0x83
 1505 01c1 02       		.uleb128 0x2
 1506 01c2 91       		.byte	0x91
 1507 01c3 74       		.sleb128 -12
 1508 01c4 00       		.byte	0
 1509 01c5 0E       		.uleb128 0xe
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 43


 1510 01c6 10000000 		.4byte	.LASF32
 1511 01ca 01       		.byte	0x1
 1512 01cb F801     		.2byte	0x1f8
 1513 01cd 8F000000 		.4byte	0x8f
 1514 01d1 00000000 		.4byte	.LFB9
 1515 01d5 44000000 		.4byte	.LFE9-.LFB9
 1516 01d9 01       		.uleb128 0x1
 1517 01da 9C       		.byte	0x9c
 1518 01db FE010000 		.4byte	0x1fe
 1519 01df 0C       		.uleb128 0xc
 1520 01e0 42030000 		.4byte	.LASF34
 1521 01e4 01       		.byte	0x1
 1522 01e5 F801     		.2byte	0x1f8
 1523 01e7 83000000 		.4byte	0x83
 1524 01eb 02       		.uleb128 0x2
 1525 01ec 91       		.byte	0x91
 1526 01ed 6C       		.sleb128 -20
 1527 01ee 0D       		.uleb128 0xd
 1528 01ef FA030000 		.4byte	.LASF35
 1529 01f3 01       		.byte	0x1
 1530 01f4 FA01     		.2byte	0x1fa
 1531 01f6 83000000 		.4byte	0x83
 1532 01fa 02       		.uleb128 0x2
 1533 01fb 91       		.byte	0x91
 1534 01fc 74       		.sleb128 -12
 1535 01fd 00       		.byte	0
 1536 01fe 0F       		.uleb128 0xf
 1537 01ff CC000000 		.4byte	.LASF37
 1538 0203 01       		.byte	0x1
 1539 0204 2502     		.2byte	0x225
 1540 0206 00000000 		.4byte	.LFB10
 1541 020a 20000000 		.4byte	.LFE10-.LFB10
 1542 020e 01       		.uleb128 0x1
 1543 020f 9C       		.byte	0x9c
 1544 0210 24020000 		.4byte	0x224
 1545 0214 0C       		.uleb128 0xc
 1546 0215 C7000000 		.4byte	.LASF38
 1547 0219 01       		.byte	0x1
 1548 021a 2502     		.2byte	0x225
 1549 021c 83000000 		.4byte	0x83
 1550 0220 02       		.uleb128 0x2
 1551 0221 91       		.byte	0x91
 1552 0222 74       		.sleb128 -12
 1553 0223 00       		.byte	0
 1554 0224 0F       		.uleb128 0xf
 1555 0225 0E010000 		.4byte	.LASF39
 1556 0229 01       		.byte	0x1
 1557 022a 5102     		.2byte	0x251
 1558 022c 00000000 		.4byte	.LFB11
 1559 0230 30000000 		.4byte	.LFE11-.LFB11
 1560 0234 01       		.uleb128 0x1
 1561 0235 9C       		.byte	0x9c
 1562 0236 4A020000 		.4byte	0x24a
 1563 023a 0C       		.uleb128 0xc
 1564 023b 67020000 		.4byte	.LASF40
 1565 023f 01       		.byte	0x1
 1566 0240 5102     		.2byte	0x251
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 44


 1567 0242 83000000 		.4byte	0x83
 1568 0246 02       		.uleb128 0x2
 1569 0247 91       		.byte	0x91
 1570 0248 74       		.sleb128 -12
 1571 0249 00       		.byte	0
 1572 024a 0F       		.uleb128 0xf
 1573 024b FF020000 		.4byte	.LASF41
 1574 024f 01       		.byte	0x1
 1575 0250 6602     		.2byte	0x266
 1576 0252 00000000 		.4byte	.LFB12
 1577 0256 30000000 		.4byte	.LFE12-.LFB12
 1578 025a 01       		.uleb128 0x1
 1579 025b 9C       		.byte	0x9c
 1580 025c 70020000 		.4byte	0x270
 1581 0260 0C       		.uleb128 0xc
 1582 0261 D0020000 		.4byte	.LASF42
 1583 0265 01       		.byte	0x1
 1584 0266 6602     		.2byte	0x266
 1585 0268 83000000 		.4byte	0x83
 1586 026c 02       		.uleb128 0x2
 1587 026d 91       		.byte	0x91
 1588 026e 74       		.sleb128 -12
 1589 026f 00       		.byte	0
 1590 0270 0F       		.uleb128 0xf
 1591 0271 DF030000 		.4byte	.LASF43
 1592 0275 01       		.byte	0x1
 1593 0276 7E02     		.2byte	0x27e
 1594 0278 00000000 		.4byte	.LFB13
 1595 027c 20000000 		.4byte	.LFE13-.LFB13
 1596 0280 01       		.uleb128 0x1
 1597 0281 9C       		.byte	0x9c
 1598 0282 96020000 		.4byte	0x296
 1599 0286 0C       		.uleb128 0xc
 1600 0287 C7000000 		.4byte	.LASF38
 1601 028b 01       		.byte	0x1
 1602 028c 7E02     		.2byte	0x27e
 1603 028e 83000000 		.4byte	0x83
 1604 0292 02       		.uleb128 0x2
 1605 0293 91       		.byte	0x91
 1606 0294 74       		.sleb128 -12
 1607 0295 00       		.byte	0
 1608 0296 0F       		.uleb128 0xf
 1609 0297 41010000 		.4byte	.LASF44
 1610 029b 01       		.byte	0x1
 1611 029c 9502     		.2byte	0x295
 1612 029e 00000000 		.4byte	.LFB14
 1613 02a2 20000000 		.4byte	.LFE14-.LFB14
 1614 02a6 01       		.uleb128 0x1
 1615 02a7 9C       		.byte	0x9c
 1616 02a8 BC020000 		.4byte	0x2bc
 1617 02ac 0C       		.uleb128 0xc
 1618 02ad C7000000 		.4byte	.LASF38
 1619 02b1 01       		.byte	0x1
 1620 02b2 9502     		.2byte	0x295
 1621 02b4 83000000 		.4byte	0x83
 1622 02b8 02       		.uleb128 0x2
 1623 02b9 91       		.byte	0x91
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 45


 1624 02ba 74       		.sleb128 -12
 1625 02bb 00       		.byte	0
 1626 02bc 10       		.uleb128 0x10
 1627 02bd A3020000 		.4byte	.LASF45
 1628 02c1 01       		.byte	0x1
 1629 02c2 B102     		.2byte	0x2b1
 1630 02c4 00000000 		.4byte	.LFB15
 1631 02c8 34000000 		.4byte	.LFE15-.LFB15
 1632 02cc 01       		.uleb128 0x1
 1633 02cd 9C       		.byte	0x9c
 1634 02ce F1020000 		.4byte	0x2f1
 1635 02d2 0C       		.uleb128 0xc
 1636 02d3 42030000 		.4byte	.LASF34
 1637 02d7 01       		.byte	0x1
 1638 02d8 B102     		.2byte	0x2b1
 1639 02da 83000000 		.4byte	0x83
 1640 02de 02       		.uleb128 0x2
 1641 02df 91       		.byte	0x91
 1642 02e0 74       		.sleb128 -12
 1643 02e1 0C       		.uleb128 0xc
 1644 02e2 B8030000 		.4byte	.LASF46
 1645 02e6 01       		.byte	0x1
 1646 02e7 B102     		.2byte	0x2b1
 1647 02e9 8F000000 		.4byte	0x8f
 1648 02ed 02       		.uleb128 0x2
 1649 02ee 91       		.byte	0x91
 1650 02ef 72       		.sleb128 -14
 1651 02f0 00       		.byte	0
 1652 02f1 10       		.uleb128 0x10
 1653 02f2 00000000 		.4byte	.LASF47
 1654 02f6 01       		.byte	0x1
 1655 02f7 D302     		.2byte	0x2d3
 1656 02f9 00000000 		.4byte	.LFB16
 1657 02fd 2C000000 		.4byte	.LFE16-.LFB16
 1658 0301 01       		.uleb128 0x1
 1659 0302 9C       		.byte	0x9c
 1660 0303 26030000 		.4byte	0x326
 1661 0307 0C       		.uleb128 0xc
 1662 0308 42030000 		.4byte	.LASF34
 1663 030c 01       		.byte	0x1
 1664 030d D302     		.2byte	0x2d3
 1665 030f 83000000 		.4byte	0x83
 1666 0313 02       		.uleb128 0x2
 1667 0314 91       		.byte	0x91
 1668 0315 74       		.sleb128 -12
 1669 0316 0C       		.uleb128 0xc
 1670 0317 2B000000 		.4byte	.LASF48
 1671 031b 01       		.byte	0x1
 1672 031c D302     		.2byte	0x2d3
 1673 031e 9B000000 		.4byte	0x9b
 1674 0322 02       		.uleb128 0x2
 1675 0323 91       		.byte	0x91
 1676 0324 70       		.sleb128 -16
 1677 0325 00       		.byte	0
 1678 0326 0E       		.uleb128 0xe
 1679 0327 A0030000 		.4byte	.LASF49
 1680 032b 01       		.byte	0x1
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 46


 1681 032c F402     		.2byte	0x2f4
 1682 032e 8F000000 		.4byte	0x8f
 1683 0332 00000000 		.4byte	.LFB17
 1684 0336 A0000000 		.4byte	.LFE17-.LFB17
 1685 033a 01       		.uleb128 0x1
 1686 033b 9C       		.byte	0x9c
 1687 033c 6E030000 		.4byte	0x36e
 1688 0340 0C       		.uleb128 0xc
 1689 0341 42030000 		.4byte	.LASF34
 1690 0345 01       		.byte	0x1
 1691 0346 F402     		.2byte	0x2f4
 1692 0348 83000000 		.4byte	0x83
 1693 034c 02       		.uleb128 0x2
 1694 034d 91       		.byte	0x91
 1695 034e 6C       		.sleb128 -20
 1696 034f 0C       		.uleb128 0xc
 1697 0350 BF030000 		.4byte	.LASF50
 1698 0354 01       		.byte	0x1
 1699 0355 F402     		.2byte	0x2f4
 1700 0357 8F000000 		.4byte	0x8f
 1701 035b 02       		.uleb128 0x2
 1702 035c 91       		.byte	0x91
 1703 035d 6A       		.sleb128 -22
 1704 035e 0D       		.uleb128 0xd
 1705 035f 32020000 		.4byte	.LASF51
 1706 0363 01       		.byte	0x1
 1707 0364 F602     		.2byte	0x2f6
 1708 0366 8F000000 		.4byte	0x8f
 1709 036a 02       		.uleb128 0x2
 1710 036b 91       		.byte	0x91
 1711 036c 76       		.sleb128 -10
 1712 036d 00       		.byte	0
 1713 036e 0E       		.uleb128 0xe
 1714 036f 2A030000 		.4byte	.LASF52
 1715 0373 01       		.byte	0x1
 1716 0374 2A03     		.2byte	0x32a
 1717 0376 9B000000 		.4byte	0x9b
 1718 037a 00000000 		.4byte	.LFB18
 1719 037e 90000000 		.4byte	.LFE18-.LFB18
 1720 0382 01       		.uleb128 0x1
 1721 0383 9C       		.byte	0x9c
 1722 0384 B6030000 		.4byte	0x3b6
 1723 0388 0C       		.uleb128 0xc
 1724 0389 42030000 		.4byte	.LASF34
 1725 038d 01       		.byte	0x1
 1726 038e 2A03     		.2byte	0x32a
 1727 0390 83000000 		.4byte	0x83
 1728 0394 02       		.uleb128 0x2
 1729 0395 91       		.byte	0x91
 1730 0396 64       		.sleb128 -28
 1731 0397 0C       		.uleb128 0xc
 1732 0398 BF030000 		.4byte	.LASF50
 1733 039c 01       		.byte	0x1
 1734 039d 2A03     		.2byte	0x32a
 1735 039f 8F000000 		.4byte	0x8f
 1736 03a3 02       		.uleb128 0x2
 1737 03a4 91       		.byte	0x91
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 47


 1738 03a5 62       		.sleb128 -30
 1739 03a6 0D       		.uleb128 0xd
 1740 03a7 F5000000 		.4byte	.LASF53
 1741 03ab 01       		.byte	0x1
 1742 03ac 2C03     		.2byte	0x32c
 1743 03ae C1000000 		.4byte	0xc1
 1744 03b2 02       		.uleb128 0x2
 1745 03b3 91       		.byte	0x91
 1746 03b4 68       		.sleb128 -24
 1747 03b5 00       		.byte	0
 1748 03b6 0E       		.uleb128 0xe
 1749 03b7 8D010000 		.4byte	.LASF54
 1750 03bb 01       		.byte	0x1
 1751 03bc 5703     		.2byte	0x357
 1752 03be A7000000 		.4byte	0xa7
 1753 03c2 00000000 		.4byte	.LFB19
 1754 03c6 80000000 		.4byte	.LFE19-.LFB19
 1755 03ca 01       		.uleb128 0x1
 1756 03cb 9C       		.byte	0x9c
 1757 03cc FE030000 		.4byte	0x3fe
 1758 03d0 0C       		.uleb128 0xc
 1759 03d1 42030000 		.4byte	.LASF34
 1760 03d5 01       		.byte	0x1
 1761 03d6 5703     		.2byte	0x357
 1762 03d8 83000000 		.4byte	0x83
 1763 03dc 02       		.uleb128 0x2
 1764 03dd 91       		.byte	0x91
 1765 03de 64       		.sleb128 -28
 1766 03df 0C       		.uleb128 0xc
 1767 03e0 BF030000 		.4byte	.LASF50
 1768 03e4 01       		.byte	0x1
 1769 03e5 5703     		.2byte	0x357
 1770 03e7 8F000000 		.4byte	0x8f
 1771 03eb 02       		.uleb128 0x2
 1772 03ec 91       		.byte	0x91
 1773 03ed 62       		.sleb128 -30
 1774 03ee 0D       		.uleb128 0xd
 1775 03ef 22010000 		.4byte	.LASF55
 1776 03f3 01       		.byte	0x1
 1777 03f4 5903     		.2byte	0x359
 1778 03f6 A7000000 		.4byte	0xa7
 1779 03fa 02       		.uleb128 0x2
 1780 03fb 91       		.byte	0x91
 1781 03fc 6C       		.sleb128 -20
 1782 03fd 00       		.byte	0
 1783 03fe 11       		.uleb128 0x11
 1784 03ff 0E040000 		.4byte	0x40e
 1785 0403 0E040000 		.4byte	0x40e
 1786 0407 12       		.uleb128 0x12
 1787 0408 EC000000 		.4byte	0xec
 1788 040c 00       		.byte	0
 1789 040d 00       		.byte	0
 1790 040e 13       		.uleb128 0x13
 1791 040f 83000000 		.4byte	0x83
 1792 0413 08       		.uleb128 0x8
 1793 0414 3F020000 		.4byte	.LASF56
 1794 0418 01       		.byte	0x1
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 48


 1795 0419 21       		.byte	0x21
 1796 041a 24040000 		.4byte	0x424
 1797 041e 05       		.uleb128 0x5
 1798 041f 03       		.byte	0x3
 1799 0420 00000000 		.4byte	ADC_MIC_channelsConfig
 1800 0424 13       		.uleb128 0x13
 1801 0425 FE030000 		.4byte	0x3fe
 1802 0429 14       		.uleb128 0x14
 1803 042a 14030000 		.4byte	.LASF57
 1804 042e 01       		.byte	0x1
 1805 042f 18       		.byte	0x18
 1806 0430 6B000000 		.4byte	0x6b
 1807 0434 05       		.uleb128 0x5
 1808 0435 03       		.byte	0x3
 1809 0436 00000000 		.4byte	ADC_MIC_initVar
 1810 043a 11       		.uleb128 0x11
 1811 043b 4A040000 		.4byte	0x44a
 1812 043f 4A040000 		.4byte	0x44a
 1813 0443 12       		.uleb128 0x12
 1814 0444 EC000000 		.4byte	0xec
 1815 0448 00       		.byte	0
 1816 0449 00       		.byte	0
 1817 044a 05       		.uleb128 0x5
 1818 044b 8F000000 		.4byte	0x8f
 1819 044f 14       		.uleb128 0x14
 1820 0450 D0030000 		.4byte	.LASF58
 1821 0454 01       		.byte	0x1
 1822 0455 19       		.byte	0x19
 1823 0456 60040000 		.4byte	0x460
 1824 045a 05       		.uleb128 0x5
 1825 045b 03       		.byte	0x3
 1826 045c 00000000 		.4byte	ADC_MIC_offset
 1827 0460 05       		.uleb128 0x5
 1828 0461 3A040000 		.4byte	0x43a
 1829 0465 11       		.uleb128 0x11
 1830 0466 75040000 		.4byte	0x475
 1831 046a 75040000 		.4byte	0x475
 1832 046e 12       		.uleb128 0x12
 1833 046f EC000000 		.4byte	0xec
 1834 0473 00       		.byte	0
 1835 0474 00       		.byte	0
 1836 0475 05       		.uleb128 0x5
 1837 0476 9B000000 		.4byte	0x9b
 1838 047a 14       		.uleb128 0x14
 1839 047b 75010000 		.4byte	.LASF59
 1840 047f 01       		.byte	0x1
 1841 0480 1A       		.byte	0x1a
 1842 0481 8B040000 		.4byte	0x48b
 1843 0485 05       		.uleb128 0x5
 1844 0486 03       		.byte	0x3
 1845 0487 00000000 		.4byte	ADC_MIC_countsPer10Volt
 1846 048b 05       		.uleb128 0x5
 1847 048c 65040000 		.4byte	0x465
 1848 0490 00       		.byte	0
 1849              		.section	.debug_abbrev,"",%progbits
 1850              	.Ldebug_abbrev0:
 1851 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 49


 1852 0001 11       		.uleb128 0x11
 1853 0002 01       		.byte	0x1
 1854 0003 25       		.uleb128 0x25
 1855 0004 0E       		.uleb128 0xe
 1856 0005 13       		.uleb128 0x13
 1857 0006 0B       		.uleb128 0xb
 1858 0007 03       		.uleb128 0x3
 1859 0008 0E       		.uleb128 0xe
 1860 0009 1B       		.uleb128 0x1b
 1861 000a 0E       		.uleb128 0xe
 1862 000b 55       		.uleb128 0x55
 1863 000c 17       		.uleb128 0x17
 1864 000d 11       		.uleb128 0x11
 1865 000e 01       		.uleb128 0x1
 1866 000f 10       		.uleb128 0x10
 1867 0010 17       		.uleb128 0x17
 1868 0011 00       		.byte	0
 1869 0012 00       		.byte	0
 1870 0013 02       		.uleb128 0x2
 1871 0014 24       		.uleb128 0x24
 1872 0015 00       		.byte	0
 1873 0016 0B       		.uleb128 0xb
 1874 0017 0B       		.uleb128 0xb
 1875 0018 3E       		.uleb128 0x3e
 1876 0019 0B       		.uleb128 0xb
 1877 001a 03       		.uleb128 0x3
 1878 001b 0E       		.uleb128 0xe
 1879 001c 00       		.byte	0
 1880 001d 00       		.byte	0
 1881 001e 03       		.uleb128 0x3
 1882 001f 24       		.uleb128 0x24
 1883 0020 00       		.byte	0
 1884 0021 0B       		.uleb128 0xb
 1885 0022 0B       		.uleb128 0xb
 1886 0023 3E       		.uleb128 0x3e
 1887 0024 0B       		.uleb128 0xb
 1888 0025 03       		.uleb128 0x3
 1889 0026 08       		.uleb128 0x8
 1890 0027 00       		.byte	0
 1891 0028 00       		.byte	0
 1892 0029 04       		.uleb128 0x4
 1893 002a 16       		.uleb128 0x16
 1894 002b 00       		.byte	0
 1895 002c 03       		.uleb128 0x3
 1896 002d 0E       		.uleb128 0xe
 1897 002e 3A       		.uleb128 0x3a
 1898 002f 0B       		.uleb128 0xb
 1899 0030 3B       		.uleb128 0x3b
 1900 0031 05       		.uleb128 0x5
 1901 0032 49       		.uleb128 0x49
 1902 0033 13       		.uleb128 0x13
 1903 0034 00       		.byte	0
 1904 0035 00       		.byte	0
 1905 0036 05       		.uleb128 0x5
 1906 0037 35       		.uleb128 0x35
 1907 0038 00       		.byte	0
 1908 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 50


 1909 003a 13       		.uleb128 0x13
 1910 003b 00       		.byte	0
 1911 003c 00       		.byte	0
 1912 003d 06       		.uleb128 0x6
 1913 003e 2E       		.uleb128 0x2e
 1914 003f 00       		.byte	0
 1915 0040 3F       		.uleb128 0x3f
 1916 0041 19       		.uleb128 0x19
 1917 0042 03       		.uleb128 0x3
 1918 0043 0E       		.uleb128 0xe
 1919 0044 3A       		.uleb128 0x3a
 1920 0045 0B       		.uleb128 0xb
 1921 0046 3B       		.uleb128 0x3b
 1922 0047 0B       		.uleb128 0xb
 1923 0048 27       		.uleb128 0x27
 1924 0049 19       		.uleb128 0x19
 1925 004a 11       		.uleb128 0x11
 1926 004b 01       		.uleb128 0x1
 1927 004c 12       		.uleb128 0x12
 1928 004d 06       		.uleb128 0x6
 1929 004e 40       		.uleb128 0x40
 1930 004f 18       		.uleb128 0x18
 1931 0050 9642     		.uleb128 0x2116
 1932 0052 19       		.uleb128 0x19
 1933 0053 00       		.byte	0
 1934 0054 00       		.byte	0
 1935 0055 07       		.uleb128 0x7
 1936 0056 2E       		.uleb128 0x2e
 1937 0057 01       		.byte	0x1
 1938 0058 3F       		.uleb128 0x3f
 1939 0059 19       		.uleb128 0x19
 1940 005a 03       		.uleb128 0x3
 1941 005b 0E       		.uleb128 0xe
 1942 005c 3A       		.uleb128 0x3a
 1943 005d 0B       		.uleb128 0xb
 1944 005e 3B       		.uleb128 0x3b
 1945 005f 0B       		.uleb128 0xb
 1946 0060 27       		.uleb128 0x27
 1947 0061 19       		.uleb128 0x19
 1948 0062 11       		.uleb128 0x11
 1949 0063 01       		.uleb128 0x1
 1950 0064 12       		.uleb128 0x12
 1951 0065 06       		.uleb128 0x6
 1952 0066 40       		.uleb128 0x40
 1953 0067 18       		.uleb128 0x18
 1954 0068 9642     		.uleb128 0x2116
 1955 006a 19       		.uleb128 0x19
 1956 006b 01       		.uleb128 0x1
 1957 006c 13       		.uleb128 0x13
 1958 006d 00       		.byte	0
 1959 006e 00       		.byte	0
 1960 006f 08       		.uleb128 0x8
 1961 0070 34       		.uleb128 0x34
 1962 0071 00       		.byte	0
 1963 0072 03       		.uleb128 0x3
 1964 0073 0E       		.uleb128 0xe
 1965 0074 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 51


 1966 0075 0B       		.uleb128 0xb
 1967 0076 3B       		.uleb128 0x3b
 1968 0077 0B       		.uleb128 0xb
 1969 0078 49       		.uleb128 0x49
 1970 0079 13       		.uleb128 0x13
 1971 007a 02       		.uleb128 0x2
 1972 007b 18       		.uleb128 0x18
 1973 007c 00       		.byte	0
 1974 007d 00       		.byte	0
 1975 007e 09       		.uleb128 0x9
 1976 007f 2E       		.uleb128 0x2e
 1977 0080 00       		.byte	0
 1978 0081 3F       		.uleb128 0x3f
 1979 0082 19       		.uleb128 0x19
 1980 0083 03       		.uleb128 0x3
 1981 0084 0E       		.uleb128 0xe
 1982 0085 3A       		.uleb128 0x3a
 1983 0086 0B       		.uleb128 0xb
 1984 0087 3B       		.uleb128 0x3b
 1985 0088 05       		.uleb128 0x5
 1986 0089 27       		.uleb128 0x27
 1987 008a 19       		.uleb128 0x19
 1988 008b 11       		.uleb128 0x11
 1989 008c 01       		.uleb128 0x1
 1990 008d 12       		.uleb128 0x12
 1991 008e 06       		.uleb128 0x6
 1992 008f 40       		.uleb128 0x40
 1993 0090 18       		.uleb128 0x18
 1994 0091 9642     		.uleb128 0x2116
 1995 0093 19       		.uleb128 0x19
 1996 0094 00       		.byte	0
 1997 0095 00       		.byte	0
 1998 0096 0A       		.uleb128 0xa
 1999 0097 2E       		.uleb128 0x2e
 2000 0098 00       		.byte	0
 2001 0099 3F       		.uleb128 0x3f
 2002 009a 19       		.uleb128 0x19
 2003 009b 03       		.uleb128 0x3
 2004 009c 0E       		.uleb128 0xe
 2005 009d 3A       		.uleb128 0x3a
 2006 009e 0B       		.uleb128 0xb
 2007 009f 3B       		.uleb128 0x3b
 2008 00a0 05       		.uleb128 0x5
 2009 00a1 27       		.uleb128 0x27
 2010 00a2 19       		.uleb128 0x19
 2011 00a3 11       		.uleb128 0x11
 2012 00a4 01       		.uleb128 0x1
 2013 00a5 12       		.uleb128 0x12
 2014 00a6 06       		.uleb128 0x6
 2015 00a7 40       		.uleb128 0x40
 2016 00a8 18       		.uleb128 0x18
 2017 00a9 9742     		.uleb128 0x2117
 2018 00ab 19       		.uleb128 0x19
 2019 00ac 00       		.byte	0
 2020 00ad 00       		.byte	0
 2021 00ae 0B       		.uleb128 0xb
 2022 00af 2E       		.uleb128 0x2e
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 52


 2023 00b0 01       		.byte	0x1
 2024 00b1 3F       		.uleb128 0x3f
 2025 00b2 19       		.uleb128 0x19
 2026 00b3 03       		.uleb128 0x3
 2027 00b4 0E       		.uleb128 0xe
 2028 00b5 3A       		.uleb128 0x3a
 2029 00b6 0B       		.uleb128 0xb
 2030 00b7 3B       		.uleb128 0x3b
 2031 00b8 05       		.uleb128 0x5
 2032 00b9 27       		.uleb128 0x27
 2033 00ba 19       		.uleb128 0x19
 2034 00bb 49       		.uleb128 0x49
 2035 00bc 13       		.uleb128 0x13
 2036 00bd 11       		.uleb128 0x11
 2037 00be 01       		.uleb128 0x1
 2038 00bf 12       		.uleb128 0x12
 2039 00c0 06       		.uleb128 0x6
 2040 00c1 40       		.uleb128 0x40
 2041 00c2 18       		.uleb128 0x18
 2042 00c3 9742     		.uleb128 0x2117
 2043 00c5 19       		.uleb128 0x19
 2044 00c6 01       		.uleb128 0x1
 2045 00c7 13       		.uleb128 0x13
 2046 00c8 00       		.byte	0
 2047 00c9 00       		.byte	0
 2048 00ca 0C       		.uleb128 0xc
 2049 00cb 05       		.uleb128 0x5
 2050 00cc 00       		.byte	0
 2051 00cd 03       		.uleb128 0x3
 2052 00ce 0E       		.uleb128 0xe
 2053 00cf 3A       		.uleb128 0x3a
 2054 00d0 0B       		.uleb128 0xb
 2055 00d1 3B       		.uleb128 0x3b
 2056 00d2 05       		.uleb128 0x5
 2057 00d3 49       		.uleb128 0x49
 2058 00d4 13       		.uleb128 0x13
 2059 00d5 02       		.uleb128 0x2
 2060 00d6 18       		.uleb128 0x18
 2061 00d7 00       		.byte	0
 2062 00d8 00       		.byte	0
 2063 00d9 0D       		.uleb128 0xd
 2064 00da 34       		.uleb128 0x34
 2065 00db 00       		.byte	0
 2066 00dc 03       		.uleb128 0x3
 2067 00dd 0E       		.uleb128 0xe
 2068 00de 3A       		.uleb128 0x3a
 2069 00df 0B       		.uleb128 0xb
 2070 00e0 3B       		.uleb128 0x3b
 2071 00e1 05       		.uleb128 0x5
 2072 00e2 49       		.uleb128 0x49
 2073 00e3 13       		.uleb128 0x13
 2074 00e4 02       		.uleb128 0x2
 2075 00e5 18       		.uleb128 0x18
 2076 00e6 00       		.byte	0
 2077 00e7 00       		.byte	0
 2078 00e8 0E       		.uleb128 0xe
 2079 00e9 2E       		.uleb128 0x2e
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 53


 2080 00ea 01       		.byte	0x1
 2081 00eb 3F       		.uleb128 0x3f
 2082 00ec 19       		.uleb128 0x19
 2083 00ed 03       		.uleb128 0x3
 2084 00ee 0E       		.uleb128 0xe
 2085 00ef 3A       		.uleb128 0x3a
 2086 00f0 0B       		.uleb128 0xb
 2087 00f1 3B       		.uleb128 0x3b
 2088 00f2 05       		.uleb128 0x5
 2089 00f3 27       		.uleb128 0x27
 2090 00f4 19       		.uleb128 0x19
 2091 00f5 49       		.uleb128 0x49
 2092 00f6 13       		.uleb128 0x13
 2093 00f7 11       		.uleb128 0x11
 2094 00f8 01       		.uleb128 0x1
 2095 00f9 12       		.uleb128 0x12
 2096 00fa 06       		.uleb128 0x6
 2097 00fb 40       		.uleb128 0x40
 2098 00fc 18       		.uleb128 0x18
 2099 00fd 9642     		.uleb128 0x2116
 2100 00ff 19       		.uleb128 0x19
 2101 0100 01       		.uleb128 0x1
 2102 0101 13       		.uleb128 0x13
 2103 0102 00       		.byte	0
 2104 0103 00       		.byte	0
 2105 0104 0F       		.uleb128 0xf
 2106 0105 2E       		.uleb128 0x2e
 2107 0106 01       		.byte	0x1
 2108 0107 3F       		.uleb128 0x3f
 2109 0108 19       		.uleb128 0x19
 2110 0109 03       		.uleb128 0x3
 2111 010a 0E       		.uleb128 0xe
 2112 010b 3A       		.uleb128 0x3a
 2113 010c 0B       		.uleb128 0xb
 2114 010d 3B       		.uleb128 0x3b
 2115 010e 05       		.uleb128 0x5
 2116 010f 27       		.uleb128 0x27
 2117 0110 19       		.uleb128 0x19
 2118 0111 11       		.uleb128 0x11
 2119 0112 01       		.uleb128 0x1
 2120 0113 12       		.uleb128 0x12
 2121 0114 06       		.uleb128 0x6
 2122 0115 40       		.uleb128 0x40
 2123 0116 18       		.uleb128 0x18
 2124 0117 9742     		.uleb128 0x2117
 2125 0119 19       		.uleb128 0x19
 2126 011a 01       		.uleb128 0x1
 2127 011b 13       		.uleb128 0x13
 2128 011c 00       		.byte	0
 2129 011d 00       		.byte	0
 2130 011e 10       		.uleb128 0x10
 2131 011f 2E       		.uleb128 0x2e
 2132 0120 01       		.byte	0x1
 2133 0121 3F       		.uleb128 0x3f
 2134 0122 19       		.uleb128 0x19
 2135 0123 03       		.uleb128 0x3
 2136 0124 0E       		.uleb128 0xe
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 54


 2137 0125 3A       		.uleb128 0x3a
 2138 0126 0B       		.uleb128 0xb
 2139 0127 3B       		.uleb128 0x3b
 2140 0128 05       		.uleb128 0x5
 2141 0129 27       		.uleb128 0x27
 2142 012a 19       		.uleb128 0x19
 2143 012b 11       		.uleb128 0x11
 2144 012c 01       		.uleb128 0x1
 2145 012d 12       		.uleb128 0x12
 2146 012e 06       		.uleb128 0x6
 2147 012f 40       		.uleb128 0x40
 2148 0130 18       		.uleb128 0x18
 2149 0131 9642     		.uleb128 0x2116
 2150 0133 19       		.uleb128 0x19
 2151 0134 01       		.uleb128 0x1
 2152 0135 13       		.uleb128 0x13
 2153 0136 00       		.byte	0
 2154 0137 00       		.byte	0
 2155 0138 11       		.uleb128 0x11
 2156 0139 01       		.uleb128 0x1
 2157 013a 01       		.byte	0x1
 2158 013b 49       		.uleb128 0x49
 2159 013c 13       		.uleb128 0x13
 2160 013d 01       		.uleb128 0x1
 2161 013e 13       		.uleb128 0x13
 2162 013f 00       		.byte	0
 2163 0140 00       		.byte	0
 2164 0141 12       		.uleb128 0x12
 2165 0142 21       		.uleb128 0x21
 2166 0143 00       		.byte	0
 2167 0144 49       		.uleb128 0x49
 2168 0145 13       		.uleb128 0x13
 2169 0146 2F       		.uleb128 0x2f
 2170 0147 0B       		.uleb128 0xb
 2171 0148 00       		.byte	0
 2172 0149 00       		.byte	0
 2173 014a 13       		.uleb128 0x13
 2174 014b 26       		.uleb128 0x26
 2175 014c 00       		.byte	0
 2176 014d 49       		.uleb128 0x49
 2177 014e 13       		.uleb128 0x13
 2178 014f 00       		.byte	0
 2179 0150 00       		.byte	0
 2180 0151 14       		.uleb128 0x14
 2181 0152 34       		.uleb128 0x34
 2182 0153 00       		.byte	0
 2183 0154 03       		.uleb128 0x3
 2184 0155 0E       		.uleb128 0xe
 2185 0156 3A       		.uleb128 0x3a
 2186 0157 0B       		.uleb128 0xb
 2187 0158 3B       		.uleb128 0x3b
 2188 0159 0B       		.uleb128 0xb
 2189 015a 49       		.uleb128 0x49
 2190 015b 13       		.uleb128 0x13
 2191 015c 3F       		.uleb128 0x3f
 2192 015d 19       		.uleb128 0x19
 2193 015e 02       		.uleb128 0x2
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 55


 2194 015f 18       		.uleb128 0x18
 2195 0160 00       		.byte	0
 2196 0161 00       		.byte	0
 2197 0162 00       		.byte	0
 2198              		.section	.debug_aranges,"",%progbits
 2199 0000 A4000000 		.4byte	0xa4
 2200 0004 0200     		.2byte	0x2
 2201 0006 00000000 		.4byte	.Ldebug_info0
 2202 000a 04       		.byte	0x4
 2203 000b 00       		.byte	0
 2204 000c 0000     		.2byte	0
 2205 000e 0000     		.2byte	0
 2206 0010 00000000 		.4byte	.LFB2
 2207 0014 24000000 		.4byte	.LFE2-.LFB2
 2208 0018 00000000 		.4byte	.LFB3
 2209 001c D4010000 		.4byte	.LFE3-.LFB3
 2210 0020 00000000 		.4byte	.LFB4
 2211 0024 38000000 		.4byte	.LFE4-.LFB4
 2212 0028 00000000 		.4byte	.LFB5
 2213 002c 1C000000 		.4byte	.LFE5-.LFB5
 2214 0030 00000000 		.4byte	.LFB6
 2215 0034 1C000000 		.4byte	.LFE6-.LFB6
 2216 0038 00000000 		.4byte	.LFB7
 2217 003c 20000000 		.4byte	.LFE7-.LFB7
 2218 0040 00000000 		.4byte	.LFB8
 2219 0044 48000000 		.4byte	.LFE8-.LFB8
 2220 0048 00000000 		.4byte	.LFB9
 2221 004c 44000000 		.4byte	.LFE9-.LFB9
 2222 0050 00000000 		.4byte	.LFB10
 2223 0054 20000000 		.4byte	.LFE10-.LFB10
 2224 0058 00000000 		.4byte	.LFB11
 2225 005c 30000000 		.4byte	.LFE11-.LFB11
 2226 0060 00000000 		.4byte	.LFB12
 2227 0064 30000000 		.4byte	.LFE12-.LFB12
 2228 0068 00000000 		.4byte	.LFB13
 2229 006c 20000000 		.4byte	.LFE13-.LFB13
 2230 0070 00000000 		.4byte	.LFB14
 2231 0074 20000000 		.4byte	.LFE14-.LFB14
 2232 0078 00000000 		.4byte	.LFB15
 2233 007c 34000000 		.4byte	.LFE15-.LFB15
 2234 0080 00000000 		.4byte	.LFB16
 2235 0084 2C000000 		.4byte	.LFE16-.LFB16
 2236 0088 00000000 		.4byte	.LFB17
 2237 008c A0000000 		.4byte	.LFE17-.LFB17
 2238 0090 00000000 		.4byte	.LFB18
 2239 0094 90000000 		.4byte	.LFE18-.LFB18
 2240 0098 00000000 		.4byte	.LFB19
 2241 009c 80000000 		.4byte	.LFE19-.LFB19
 2242 00a0 00000000 		.4byte	0
 2243 00a4 00000000 		.4byte	0
 2244              		.section	.debug_ranges,"",%progbits
 2245              	.Ldebug_ranges0:
 2246 0000 00000000 		.4byte	.LFB2
 2247 0004 24000000 		.4byte	.LFE2
 2248 0008 00000000 		.4byte	.LFB3
 2249 000c D4010000 		.4byte	.LFE3
 2250 0010 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 56


 2251 0014 38000000 		.4byte	.LFE4
 2252 0018 00000000 		.4byte	.LFB5
 2253 001c 1C000000 		.4byte	.LFE5
 2254 0020 00000000 		.4byte	.LFB6
 2255 0024 1C000000 		.4byte	.LFE6
 2256 0028 00000000 		.4byte	.LFB7
 2257 002c 20000000 		.4byte	.LFE7
 2258 0030 00000000 		.4byte	.LFB8
 2259 0034 48000000 		.4byte	.LFE8
 2260 0038 00000000 		.4byte	.LFB9
 2261 003c 44000000 		.4byte	.LFE9
 2262 0040 00000000 		.4byte	.LFB10
 2263 0044 20000000 		.4byte	.LFE10
 2264 0048 00000000 		.4byte	.LFB11
 2265 004c 30000000 		.4byte	.LFE11
 2266 0050 00000000 		.4byte	.LFB12
 2267 0054 30000000 		.4byte	.LFE12
 2268 0058 00000000 		.4byte	.LFB13
 2269 005c 20000000 		.4byte	.LFE13
 2270 0060 00000000 		.4byte	.LFB14
 2271 0064 20000000 		.4byte	.LFE14
 2272 0068 00000000 		.4byte	.LFB15
 2273 006c 34000000 		.4byte	.LFE15
 2274 0070 00000000 		.4byte	.LFB16
 2275 0074 2C000000 		.4byte	.LFE16
 2276 0078 00000000 		.4byte	.LFB17
 2277 007c A0000000 		.4byte	.LFE17
 2278 0080 00000000 		.4byte	.LFB18
 2279 0084 90000000 		.4byte	.LFE18
 2280 0088 00000000 		.4byte	.LFB19
 2281 008c 80000000 		.4byte	.LFE19
 2282 0090 00000000 		.4byte	0
 2283 0094 00000000 		.4byte	0
 2284              		.section	.debug_line,"",%progbits
 2285              	.Ldebug_line0:
 2286 0000 9C020000 		.section	.debug_str,"MS",%progbits,1
 2286      02004400 
 2286      00000201 
 2286      FB0E0D00 
 2286      01010101 
 2287              	.LASF47:
 2288 0000 4144435F 		.ascii	"ADC_MIC_SetGain\000"
 2288      4D49435F 
 2288      53657447 
 2288      61696E00 
 2289              	.LASF32:
 2290 0010 4144435F 		.ascii	"ADC_MIC_GetResult16\000"
 2290      4D49435F 
 2290      47657452 
 2290      6573756C 
 2290      74313600 
 2291              	.LASF10:
 2292 0024 75696E74 		.ascii	"uint16\000"
 2292      313600
 2293              	.LASF48:
 2294 002b 61646347 		.ascii	"adcGain\000"
 2294      61696E00 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 57


 2295              	.LASF24:
 2296 0033 636F756E 		.ascii	"counts\000"
 2296      747300
 2297              	.LASF36:
 2298 003a 4144435F 		.ascii	"ADC_MIC_Init\000"
 2298      4D49435F 
 2298      496E6974 
 2298      00
 2299              	.LASF7:
 2300 0047 6C6F6E67 		.ascii	"long long unsigned int\000"
 2300      206C6F6E 
 2300      6720756E 
 2300      7369676E 
 2300      65642069 
 2301              	.LASF31:
 2302 005e 4144435F 		.ascii	"ADC_MIC_IsEndConversion\000"
 2302      4D49435F 
 2302      4973456E 
 2302      64436F6E 
 2302      76657273 
 2303              	.LASF29:
 2304 0076 4144435F 		.ascii	"ADC_MIC_StopConvert\000"
 2304      4D49435F 
 2304      53746F70 
 2304      436F6E76 
 2304      65727400 
 2305              	.LASF6:
 2306 008a 6C6F6E67 		.ascii	"long long int\000"
 2306      206C6F6E 
 2306      6720696E 
 2306      7400
 2307              	.LASF0:
 2308 0098 7369676E 		.ascii	"signed char\000"
 2308      65642063 
 2308      68617200 
 2309              	.LASF13:
 2310 00a4 696E7433 		.ascii	"int32\000"
 2310      3200
 2311              	.LASF4:
 2312 00aa 6C6F6E67 		.ascii	"long int\000"
 2312      20696E74 
 2312      00
 2313              	.LASF9:
 2314 00b3 75696E74 		.ascii	"uint8\000"
 2314      3800
 2315              	.LASF16:
 2316 00b9 646F7562 		.ascii	"double\000"
 2316      6C6500
 2317              	.LASF11:
 2318 00c0 75696E74 		.ascii	"uint32\000"
 2318      333200
 2319              	.LASF38:
 2320 00c7 6D61736B 		.ascii	"mask\000"
 2320      00
 2321              	.LASF37:
 2322 00cc 4144435F 		.ascii	"ADC_MIC_SetChanMask\000"
 2322      4D49435F 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 58


 2322      53657443 
 2322      68616E4D 
 2322      61736B00 
 2323              	.LASF33:
 2324 00e0 7265744D 		.ascii	"retMode\000"
 2324      6F646500 
 2325              	.LASF8:
 2326 00e8 756E7369 		.ascii	"unsigned int\000"
 2326      676E6564 
 2326      20696E74 
 2326      00
 2327              	.LASF53:
 2328 00f5 75566F6C 		.ascii	"uVolts\000"
 2328      747300
 2329              	.LASF5:
 2330 00fc 6C6F6E67 		.ascii	"long unsigned int\000"
 2330      20756E73 
 2330      69676E65 
 2330      6420696E 
 2330      7400
 2331              	.LASF39:
 2332 010e 4144435F 		.ascii	"ADC_MIC_SetLowLimit\000"
 2332      4D49435F 
 2332      5365744C 
 2332      6F774C69 
 2332      6D697400 
 2333              	.LASF55:
 2334 0122 766F6C74 		.ascii	"volts\000"
 2334      7300
 2335              	.LASF23:
 2336 0128 746D7052 		.ascii	"tmpRegVal\000"
 2336      65675661 
 2336      6C00
 2337              	.LASF26:
 2338 0132 4144435F 		.ascii	"ADC_MIC_Enable\000"
 2338      4D49435F 
 2338      456E6162 
 2338      6C6500
 2339              	.LASF44:
 2340 0141 4144435F 		.ascii	"ADC_MIC_SetSatMask\000"
 2340      4D49435F 
 2340      53657453 
 2340      61744D61 
 2340      736B00
 2341              	.LASF3:
 2342 0154 73686F72 		.ascii	"short unsigned int\000"
 2342      7420756E 
 2342      7369676E 
 2342      65642069 
 2342      6E7400
 2343              	.LASF25:
 2344 0167 4144435F 		.ascii	"ADC_MIC_Start\000"
 2344      4D49435F 
 2344      53746172 
 2344      7400
 2345              	.LASF59:
 2346 0175 4144435F 		.ascii	"ADC_MIC_countsPer10Volt\000"
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 59


 2346      4D49435F 
 2346      636F756E 
 2346      74735065 
 2346      72313056 
 2347              	.LASF54:
 2348 018d 4144435F 		.ascii	"ADC_MIC_CountsTo_Volts\000"
 2348      4D49435F 
 2348      436F756E 
 2348      7473546F 
 2348      5F566F6C 
 2349              	.LASF60:
 2350 01a4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2350      43313120 
 2350      352E342E 
 2350      31203230 
 2350      31363036 
 2351 01d7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2351      20726576 
 2351      6973696F 
 2351      6E203233 
 2351      37373135 
 2352 020a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2352      66756E63 
 2352      74696F6E 
 2352      2D736563 
 2352      74696F6E 
 2353              	.LASF51:
 2354 0232 6D566F6C 		.ascii	"mVolts\000"
 2354      747300
 2355              	.LASF19:
 2356 0239 72656733 		.ascii	"reg32\000"
 2356      3200
 2357              	.LASF56:
 2358 023f 4144435F 		.ascii	"ADC_MIC_channelsConfig\000"
 2358      4D49435F 
 2358      6368616E 
 2358      6E656C73 
 2358      436F6E66 
 2359              	.LASF14:
 2360 0256 666C6F61 		.ascii	"float32\000"
 2360      74333200 
 2361              	.LASF21:
 2362 025e 73697A65 		.ascii	"sizetype\000"
 2362      74797065 
 2362      00
 2363              	.LASF40:
 2364 0267 6C6F774C 		.ascii	"lowLimit\000"
 2364      696D6974 
 2364      00
 2365              	.LASF20:
 2366 0270 6C6F6E67 		.ascii	"long double\000"
 2366      20646F75 
 2366      626C6500 
 2367              	.LASF61:
 2368 027c 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_MIC.c\000"
 2368      72617465 
 2368      645F536F 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 60


 2368      75726365 
 2368      5C50536F 
 2369              	.LASF17:
 2370 029d 696E7436 		.ascii	"int64\000"
 2370      3400
 2371              	.LASF45:
 2372 02a3 4144435F 		.ascii	"ADC_MIC_SetOffset\000"
 2372      4D49435F 
 2372      5365744F 
 2372      66667365 
 2372      7400
 2373              	.LASF15:
 2374 02b5 666C6F61 		.ascii	"float\000"
 2374      7400
 2375              	.LASF28:
 2376 02bb 4144435F 		.ascii	"ADC_MIC_StartConvert\000"
 2376      4D49435F 
 2376      53746172 
 2376      74436F6E 
 2376      76657274 
 2377              	.LASF42:
 2378 02d0 68696768 		.ascii	"highLimit\000"
 2378      4C696D69 
 2378      7400
 2379              	.LASF1:
 2380 02da 756E7369 		.ascii	"unsigned char\000"
 2380      676E6564 
 2380      20636861 
 2380      7200
 2381              	.LASF27:
 2382 02e8 4144435F 		.ascii	"ADC_MIC_Stop\000"
 2382      4D49435F 
 2382      53746F70 
 2382      00
 2383              	.LASF2:
 2384 02f5 73686F72 		.ascii	"short int\000"
 2384      7420696E 
 2384      7400
 2385              	.LASF41:
 2386 02ff 4144435F 		.ascii	"ADC_MIC_SetHighLimit\000"
 2386      4D49435F 
 2386      53657448 
 2386      6967684C 
 2386      696D6974 
 2387              	.LASF57:
 2388 0314 4144435F 		.ascii	"ADC_MIC_initVar\000"
 2388      4D49435F 
 2388      696E6974 
 2388      56617200 
 2389              	.LASF22:
 2390 0324 63684E75 		.ascii	"chNum\000"
 2390      6D00
 2391              	.LASF52:
 2392 032a 4144435F 		.ascii	"ADC_MIC_CountsTo_uVolts\000"
 2392      4D49435F 
 2392      436F756E 
 2392      7473546F 
ARM GAS  C:\Users\JANUSD~1\AppData\Local\Temp\cceh6E62.s 			page 61


 2392      5F75566F 
 2393              	.LASF34:
 2394 0342 6368616E 		.ascii	"chan\000"
 2394      00
 2395              	.LASF62:
 2396 0347 433A5C55 		.ascii	"C:\\Users\\janusdg-win\\UCU\\Smart_lightning_system"
 2396      73657273 
 2396      5C6A616E 
 2396      75736467 
 2396      2D77696E 
 2397 0376 5C4D6573 		.ascii	"\\Mesh_Flood_PSoC4BLE_Main_Clap.cydsn\000"
 2397      685F466C 
 2397      6F6F645F 
 2397      50536F43 
 2397      34424C45 
 2398              	.LASF18:
 2399 039b 63686172 		.ascii	"char\000"
 2399      00
 2400              	.LASF49:
 2401 03a0 4144435F 		.ascii	"ADC_MIC_CountsTo_mVolts\000"
 2401      4D49435F 
 2401      436F756E 
 2401      7473546F 
 2401      5F6D566F 
 2402              	.LASF46:
 2403 03b8 6F666673 		.ascii	"offset\000"
 2403      657400
 2404              	.LASF50:
 2405 03bf 61646343 		.ascii	"adcCounts\000"
 2405      6F756E74 
 2405      7300
 2406              	.LASF30:
 2407 03c9 73746174 		.ascii	"status\000"
 2407      757300
 2408              	.LASF58:
 2409 03d0 4144435F 		.ascii	"ADC_MIC_offset\000"
 2409      4D49435F 
 2409      6F666673 
 2409      657400
 2410              	.LASF43:
 2411 03df 4144435F 		.ascii	"ADC_MIC_SetLimitMask\000"
 2411      4D49435F 
 2411      5365744C 
 2411      696D6974 
 2411      4D61736B 
 2412              	.LASF12:
 2413 03f4 696E7431 		.ascii	"int16\000"
 2413      3600
 2414              	.LASF35:
 2415 03fa 72657375 		.ascii	"result\000"
 2415      6C7400
 2416              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
